{"version":3,"sources":["skylark-chartjs.js"],"names":["define","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","cssKeywords","reverseKeywords","key","Object","keys","convert","rgb","channels","labels","hsl","hsv","hwb","cmyk","xyz","lab","lch","hex","keyword","ansi16","ansi256","hcg","apple","model","Error","length","defineProperty","value","r","g","b","min","Math","max","delta","h","s","l","rdif","gdif","bdif","v","diff","diffc","c","w","k","m","y","reversed","currentClosestKeyword","currentClosestDistance","Infinity","distance","x","z","a","t2","t3","val","t1","i","smin","lmin","sv","hi","floor","f","p","q","t","vmin","sl","wh","bl","ratio","n","y2","x2","z2","hr","atan2","PI","sqrt","cos","sin","args","saturation","round","ansi","color","mult","rem","integer","string","toString","toUpperCase","substring","match","colorString","split","map","char","join","parseInt","chroma","grayscale","hue","pure","mg","conversions","deriveBFS","fromModel","graph","models","len","parent","buildGraph","queue","current","pop","adjacents","adjacent","node","unshift","link","from","to","wrapConversion","toModel","path","fn","cur","conversion","route","forEach","routes","routeModels","wrappedFn","arg0","undefined","result","wrapRounded","raw","wrapRaw","colorNames","getRgba","hexAlpha","slice","parseFloat","scale","getHsla","alpha","isNaN","getHwb","rgbaString","rgba","percentaString","hslaString","hsla","num","hexDouble","str","reverseNames","name","getRgb","getHsl","getAlpha","vals","hexString","rgbString","percentString","hslString","hwbString","Color","obj","this","valid","values","setValues","lightness","whiteness","prototype","isValid","setSpace","arguments","rgbArray","hslArray","hsvArray","hwbArray","concat","cmykArray","rgbaArray","hslaArray","setChannel","saturationv","blackness","rgbNumber","luminosity","lum","chan","pow","contrast","color2","lum1","lum2","level","contrastRatio","dark","yiq","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","type","source","target","prop","hasOwnProperty","call","console","error","spaces","maxes","getValues","space","charAt","capped","chans","sname","Array","index","svalues","id","exports","module","helpers","noop","uid","isNullOrUndef","isArray","substr","isObject","isFinite","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","thisArg","apply","each","loopable","reverse","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","options","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","constructor","Surrogate","__super__","__isValidToReturn","attr","__isEmptyObject","callCallback","indexOf","array","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","__module__0","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","clear","chart","ctx","clearRect","width","height","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","size","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","point","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","drawRoundedRectangle","defaults","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","__module__1","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","__module__2","__module__3","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","get","set","animation","duration","onProgress","onComplete","animations","request","addAnimation","lazy","startTime","Date","now","animating","push","requestAnimationFrame","cancelAnimation","findIndex","splice","requestAnimFrame","window","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","dataset","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","data","datasets","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","update","destroy","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","element","updateElement","buildOrUpdateElements","isExtensible","configurable","enumerable","method","base","res","object","listenArrayEvents","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","onDataShift","shift","onDataSplice","onDataUnshift","borderAlign","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","xRange","abs","hitRadius","pointStyle","mouseY","inXRange","inYRange","padding","chartArea","isVertical","getBarBounds","x1","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","skipX","skipY","bounds","rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Line","Point","Rectangle","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","stack","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","label","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","dataIndex","position","tooltips","callbacks","title","dataPoint","xLabel","yLabel","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","animateRotate","animateScale","legendCallback","text","legend","generateLabels","ds","arcOpts","bw","onClick","e","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","BarController","axis","isPointInArea","lineEnabled","showLine","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","angleLines","display","circular","pointLabels","beginAtZero","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","DoughnutController","doughnut","pointPosition","getPointPositionForValue","LineController","__module__4","__module__5","__module__6","__module__7","__module__8","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","addBox","fullWidth","removeBox","layoutItem","configure","props","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","acquireContext","getContext","stylesheet","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","supportsEventListenerOptions","supports","addEventListener","eventListenerOptions","passive","addListener","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","createElement","className","addResizeListener","ticking","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","config","getElementById","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","event","pos","fromNativeEvent","addEvent","removeEvent","basic","dom","implementation","plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","layouts","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","d","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","indexScale","valueScale","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","getLabelForIndex","itemSort","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","__module__9","__module__10","Animation","controllers","Interaction","scaleService","Tooltip","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","newOptions","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","Controller","types","configMerge","scaleMerge","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","almostEquals","epsilon","almostWhole","rounded","NEGATIVE_INFINITY","sign","log10","exponent","log","LOG10E","powerOf10","isPowerOf10","toRadians","toDegrees","radians","_decimalPlaces","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","loop","niceNum","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","paddingLeft","paddingTop","paddingRight","paddingBottom","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","longestText","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","textWidth","numberOfLabelLines","numberOfLines","CanvasGradient","colorValue","CanvasPattern","abstract","DateAdapter","formats","parse","format","startOf","endOf","_create","override","members","_date","formatters","tickValue","logDelta","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","Ticks","labelsFromTicks","computeTextSize","tick","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","Scale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","handleTickRangeOptions","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","generateTicks","ticksAsNumbers","LinearScaleBase","defaultConfig","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","nonNegativeOrDefault","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","tickValues","_getFirstTickValue","firstTickValue","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","measureLabelSize","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","drawingArea","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","adapters","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","displayFormat","category","radialLinear","moment","FORMATS","_id","valueOf","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","p0","p1","d0","d1","doFill","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","_element","beforeInit","afterEvent","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","__module__11","__module__12","__module__13","__module__14","__module__15","__module__16","__module__17","__module__18","__module__19","__module__20","__module__21","__module__22","_adapters","animationService","pluginService","PluginBase","canvasHelpers","layoutService","klass","cfg","toLowerCase","main"],"mappings":"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","file":"../skylark-chartjs.js","sourcesContent":["define('packages/color-name',[],function(){\r\n'use strict'\r\n\r\nreturn {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n});\ndefine('packages/color-convert/conversions',[\r\n\t'../color-name'\r\n],function(cssKeywords) {\r\n\r\n\t// NOTE: conversions should only return primitive values (i.e. arrays, or\r\n\t//       values that give correct `typeof` results).\r\n\t//       do not use box values types (i.e. Number(), String(), etc.)\r\n\r\n\tconst reverseKeywords = {};\r\n\tfor (const key of Object.keys(cssKeywords)) {\r\n\t\treverseKeywords[cssKeywords[key]] = key;\r\n\t}\r\n\r\n\tconst convert = {\r\n\t\trgb: {channels: 3, labels: 'rgb'},\r\n\t\thsl: {channels: 3, labels: 'hsl'},\r\n\t\thsv: {channels: 3, labels: 'hsv'},\r\n\t\thwb: {channels: 3, labels: 'hwb'},\r\n\t\tcmyk: {channels: 4, labels: 'cmyk'},\r\n\t\txyz: {channels: 3, labels: 'xyz'},\r\n\t\tlab: {channels: 3, labels: 'lab'},\r\n\t\tlch: {channels: 3, labels: 'lch'},\r\n\t\thex: {channels: 1, labels: ['hex']},\r\n\t\tkeyword: {channels: 1, labels: ['keyword']},\r\n\t\tansi16: {channels: 1, labels: ['ansi16']},\r\n\t\tansi256: {channels: 1, labels: ['ansi256']},\r\n\t\thcg: {channels: 3, labels: ['h', 'c', 'g']},\r\n\t\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\r\n\t\tgray: {channels: 1, labels: ['gray']}\r\n\t};\r\n\r\n\r\n\t// Hide .channels and .labels properties\r\n\tfor (const model of Object.keys(convert)) {\r\n\t\tif (!('channels' in convert[model])) {\r\n\t\t\tthrow new Error('missing channels property: ' + model);\r\n\t\t}\r\n\r\n\t\tif (!('labels' in convert[model])) {\r\n\t\t\tthrow new Error('missing channel labels property: ' + model);\r\n\t\t}\r\n\r\n\t\tif (convert[model].labels.length !== convert[model].channels) {\r\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\r\n\t\t}\r\n\r\n\t\tconst {channels, labels} = convert[model];\r\n\t\tdelete convert[model].channels;\r\n\t\tdelete convert[model].labels;\r\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\r\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\r\n\t}\r\n\r\n\tconvert.rgb.hsl = function (rgb) {\r\n\t\tconst r = rgb[0] / 255;\r\n\t\tconst g = rgb[1] / 255;\r\n\t\tconst b = rgb[2] / 255;\r\n\t\tconst min = Math.min(r, g, b);\r\n\t\tconst max = Math.max(r, g, b);\r\n\t\tconst delta = max - min;\r\n\t\tlet h;\r\n\t\tlet s;\r\n\r\n\t\tif (max === min) {\r\n\t\t\th = 0;\r\n\t\t} else if (r === max) {\r\n\t\t\th = (g - b) / delta;\r\n\t\t} else if (g === max) {\r\n\t\t\th = 2 + (b - r) / delta;\r\n\t\t} else if (b === max) {\r\n\t\t\th = 4 + (r - g) / delta;\r\n\t\t}\r\n\r\n\t\th = Math.min(h * 60, 360);\r\n\r\n\t\tif (h < 0) {\r\n\t\t\th += 360;\r\n\t\t}\r\n\r\n\t\tconst l = (min + max) / 2;\r\n\r\n\t\tif (max === min) {\r\n\t\t\ts = 0;\r\n\t\t} else if (l <= 0.5) {\r\n\t\t\ts = delta / (max + min);\r\n\t\t} else {\r\n\t\t\ts = delta / (2 - max - min);\r\n\t\t}\r\n\r\n\t\treturn [h, s * 100, l * 100];\r\n\t};\r\n\r\n\tconvert.rgb.hsv = function (rgb) {\r\n\t\tlet rdif;\r\n\t\tlet gdif;\r\n\t\tlet bdif;\r\n\t\tlet h;\r\n\t\tlet s;\r\n\r\n\t\tconst r = rgb[0] / 255;\r\n\t\tconst g = rgb[1] / 255;\r\n\t\tconst b = rgb[2] / 255;\r\n\t\tconst v = Math.max(r, g, b);\r\n\t\tconst diff = v - Math.min(r, g, b);\r\n\t\tconst diffc = function (c) {\r\n\t\t\treturn (v - c) / 6 / diff + 1 / 2;\r\n\t\t};\r\n\r\n\t\tif (diff === 0) {\r\n\t\t\th = 0;\r\n\t\t\ts = 0;\r\n\t\t} else {\r\n\t\t\ts = diff / v;\r\n\t\t\trdif = diffc(r);\r\n\t\t\tgdif = diffc(g);\r\n\t\t\tbdif = diffc(b);\r\n\r\n\t\t\tif (r === v) {\r\n\t\t\t\th = bdif - gdif;\r\n\t\t\t} else if (g === v) {\r\n\t\t\t\th = (1 / 3) + rdif - bdif;\r\n\t\t\t} else if (b === v) {\r\n\t\t\t\th = (2 / 3) + gdif - rdif;\r\n\t\t\t}\r\n\r\n\t\t\tif (h < 0) {\r\n\t\t\t\th += 1;\r\n\t\t\t} else if (h > 1) {\r\n\t\t\t\th -= 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn [\r\n\t\t\th * 360,\r\n\t\t\ts * 100,\r\n\t\t\tv * 100\r\n\t\t];\r\n\t};\r\n\r\n\tconvert.rgb.hwb = function (rgb) {\r\n\t\tconst r = rgb[0];\r\n\t\tconst g = rgb[1];\r\n\t\tlet b = rgb[2];\r\n\t\tconst h = convert.rgb.hsl(rgb)[0];\r\n\t\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\r\n\r\n\t\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\r\n\r\n\t\treturn [h, w * 100, b * 100];\r\n\t};\r\n\r\n\tconvert.rgb.cmyk = function (rgb) {\r\n\t\tconst r = rgb[0] / 255;\r\n\t\tconst g = rgb[1] / 255;\r\n\t\tconst b = rgb[2] / 255;\r\n\r\n\t\tconst k = Math.min(1 - r, 1 - g, 1 - b);\r\n\t\tconst c = (1 - r - k) / (1 - k) || 0;\r\n\t\tconst m = (1 - g - k) / (1 - k) || 0;\r\n\t\tconst y = (1 - b - k) / (1 - k) || 0;\r\n\r\n\t\treturn [c * 100, m * 100, y * 100, k * 100];\r\n\t};\r\n\r\n\tfunction comparativeDistance(x, y) {\r\n\t\t/*\r\n\t\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\r\n\t\t*/\r\n\t\treturn (\r\n\t\t\t((x[0] - y[0]) ** 2) +\r\n\t\t\t((x[1] - y[1]) ** 2) +\r\n\t\t\t((x[2] - y[2]) ** 2)\r\n\t\t);\r\n\t}\r\n\r\n\tconvert.rgb.keyword = function (rgb) {\r\n\t\tconst reversed = reverseKeywords[rgb];\r\n\t\tif (reversed) {\r\n\t\t\treturn reversed;\r\n\t\t}\r\n\r\n\t\tlet currentClosestDistance = Infinity;\r\n\t\tlet currentClosestKeyword;\r\n\r\n\t\tfor (const keyword of Object.keys(cssKeywords)) {\r\n\t\t\tconst value = cssKeywords[keyword];\r\n\r\n\t\t\t// Compute comparative distance\r\n\t\t\tconst distance = comparativeDistance(rgb, value);\r\n\r\n\t\t\t// Check if its less, if so set as closest\r\n\t\t\tif (distance < currentClosestDistance) {\r\n\t\t\t\tcurrentClosestDistance = distance;\r\n\t\t\t\tcurrentClosestKeyword = keyword;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn currentClosestKeyword;\r\n\t};\r\n\r\n\tconvert.keyword.rgb = function (keyword) {\r\n\t\treturn cssKeywords[keyword];\r\n\t};\r\n\r\n\tconvert.rgb.xyz = function (rgb) {\r\n\t\tlet r = rgb[0] / 255;\r\n\t\tlet g = rgb[1] / 255;\r\n\t\tlet b = rgb[2] / 255;\r\n\r\n\t\t// Assume sRGB\r\n\t\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\r\n\t\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\r\n\t\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\r\n\r\n\t\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\r\n\t\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\r\n\t\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\r\n\r\n\t\treturn [x * 100, y * 100, z * 100];\r\n\t};\r\n\r\n\tconvert.rgb.lab = function (rgb) {\r\n\t\tconst xyz = convert.rgb.xyz(rgb);\r\n\t\tlet x = xyz[0];\r\n\t\tlet y = xyz[1];\r\n\t\tlet z = xyz[2];\r\n\r\n\t\tx /= 95.047;\r\n\t\ty /= 100;\r\n\t\tz /= 108.883;\r\n\r\n\t\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\r\n\t\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\r\n\t\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\r\n\r\n\t\tconst l = (116 * y) - 16;\r\n\t\tconst a = 500 * (x - y);\r\n\t\tconst b = 200 * (y - z);\r\n\r\n\t\treturn [l, a, b];\r\n\t};\r\n\r\n\tconvert.hsl.rgb = function (hsl) {\r\n\t\tconst h = hsl[0] / 360;\r\n\t\tconst s = hsl[1] / 100;\r\n\t\tconst l = hsl[2] / 100;\r\n\t\tlet t2;\r\n\t\tlet t3;\r\n\t\tlet val;\r\n\r\n\t\tif (s === 0) {\r\n\t\t\tval = l * 255;\r\n\t\t\treturn [val, val, val];\r\n\t\t}\r\n\r\n\t\tif (l < 0.5) {\r\n\t\t\tt2 = l * (1 + s);\r\n\t\t} else {\r\n\t\t\tt2 = l + s - l * s;\r\n\t\t}\r\n\r\n\t\tconst t1 = 2 * l - t2;\r\n\r\n\t\tconst rgb = [0, 0, 0];\r\n\t\tfor (let i = 0; i < 3; i++) {\r\n\t\t\tt3 = h + 1 / 3 * -(i - 1);\r\n\t\t\tif (t3 < 0) {\r\n\t\t\t\tt3++;\r\n\t\t\t}\r\n\r\n\t\t\tif (t3 > 1) {\r\n\t\t\t\tt3--;\r\n\t\t\t}\r\n\r\n\t\t\tif (6 * t3 < 1) {\r\n\t\t\t\tval = t1 + (t2 - t1) * 6 * t3;\r\n\t\t\t} else if (2 * t3 < 1) {\r\n\t\t\t\tval = t2;\r\n\t\t\t} else if (3 * t3 < 2) {\r\n\t\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\r\n\t\t\t} else {\r\n\t\t\t\tval = t1;\r\n\t\t\t}\r\n\r\n\t\t\trgb[i] = val * 255;\r\n\t\t}\r\n\r\n\t\treturn rgb;\r\n\t};\r\n\r\n\tconvert.hsl.hsv = function (hsl) {\r\n\t\tconst h = hsl[0];\r\n\t\tlet s = hsl[1] / 100;\r\n\t\tlet l = hsl[2] / 100;\r\n\t\tlet smin = s;\r\n\t\tconst lmin = Math.max(l, 0.01);\r\n\r\n\t\tl *= 2;\r\n\t\ts *= (l <= 1) ? l : 2 - l;\r\n\t\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\r\n\t\tconst v = (l + s) / 2;\r\n\t\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\r\n\r\n\t\treturn [h, sv * 100, v * 100];\r\n\t};\r\n\r\n\tconvert.hsv.rgb = function (hsv) {\r\n\t\tconst h = hsv[0] / 60;\r\n\t\tconst s = hsv[1] / 100;\r\n\t\tlet v = hsv[2] / 100;\r\n\t\tconst hi = Math.floor(h) % 6;\r\n\r\n\t\tconst f = h - Math.floor(h);\r\n\t\tconst p = 255 * v * (1 - s);\r\n\t\tconst q = 255 * v * (1 - (s * f));\r\n\t\tconst t = 255 * v * (1 - (s * (1 - f)));\r\n\t\tv *= 255;\r\n\r\n\t\tswitch (hi) {\r\n\t\t\tcase 0:\r\n\t\t\t\treturn [v, t, p];\r\n\t\t\tcase 1:\r\n\t\t\t\treturn [q, v, p];\r\n\t\t\tcase 2:\r\n\t\t\t\treturn [p, v, t];\r\n\t\t\tcase 3:\r\n\t\t\t\treturn [p, q, v];\r\n\t\t\tcase 4:\r\n\t\t\t\treturn [t, p, v];\r\n\t\t\tcase 5:\r\n\t\t\t\treturn [v, p, q];\r\n\t\t}\r\n\t};\r\n\r\n\tconvert.hsv.hsl = function (hsv) {\r\n\t\tconst h = hsv[0];\r\n\t\tconst s = hsv[1] / 100;\r\n\t\tconst v = hsv[2] / 100;\r\n\t\tconst vmin = Math.max(v, 0.01);\r\n\t\tlet sl;\r\n\t\tlet l;\r\n\r\n\t\tl = (2 - s) * v;\r\n\t\tconst lmin = (2 - s) * vmin;\r\n\t\tsl = s * vmin;\r\n\t\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\r\n\t\tsl = sl || 0;\r\n\t\tl /= 2;\r\n\r\n\t\treturn [h, sl * 100, l * 100];\r\n\t};\r\n\r\n\t// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\r\n\tconvert.hwb.rgb = function (hwb) {\r\n\t\tconst h = hwb[0] / 360;\r\n\t\tlet wh = hwb[1] / 100;\r\n\t\tlet bl = hwb[2] / 100;\r\n\t\tconst ratio = wh + bl;\r\n\t\tlet f;\r\n\r\n\t\t// Wh + bl cant be > 1\r\n\t\tif (ratio > 1) {\r\n\t\t\twh /= ratio;\r\n\t\t\tbl /= ratio;\r\n\t\t}\r\n\r\n\t\tconst i = Math.floor(6 * h);\r\n\t\tconst v = 1 - bl;\r\n\t\tf = 6 * h - i;\r\n\r\n\t\tif ((i & 0x01) !== 0) {\r\n\t\t\tf = 1 - f;\r\n\t\t}\r\n\r\n\t\tconst n = wh + f * (v - wh); // Linear interpolation\r\n\r\n\t\tlet r;\r\n\t\tlet g;\r\n\t\tlet b;\r\n\t\t/* eslint-disable max-statements-per-line,no-multi-spaces */\r\n\t\tswitch (i) {\r\n\t\t\tdefault:\r\n\t\t\tcase 6:\r\n\t\t\tcase 0: r = v;  g = n;  b = wh; break;\r\n\t\t\tcase 1: r = n;  g = v;  b = wh; break;\r\n\t\t\tcase 2: r = wh; g = v;  b = n; break;\r\n\t\t\tcase 3: r = wh; g = n;  b = v; break;\r\n\t\t\tcase 4: r = n;  g = wh; b = v; break;\r\n\t\t\tcase 5: r = v;  g = wh; b = n; break;\r\n\t\t}\r\n\t\t/* eslint-enable max-statements-per-line,no-multi-spaces */\r\n\r\n\t\treturn [r * 255, g * 255, b * 255];\r\n\t};\r\n\r\n\tconvert.cmyk.rgb = function (cmyk) {\r\n\t\tconst c = cmyk[0] / 100;\r\n\t\tconst m = cmyk[1] / 100;\r\n\t\tconst y = cmyk[2] / 100;\r\n\t\tconst k = cmyk[3] / 100;\r\n\r\n\t\tconst r = 1 - Math.min(1, c * (1 - k) + k);\r\n\t\tconst g = 1 - Math.min(1, m * (1 - k) + k);\r\n\t\tconst b = 1 - Math.min(1, y * (1 - k) + k);\r\n\r\n\t\treturn [r * 255, g * 255, b * 255];\r\n\t};\r\n\r\n\tconvert.xyz.rgb = function (xyz) {\r\n\t\tconst x = xyz[0] / 100;\r\n\t\tconst y = xyz[1] / 100;\r\n\t\tconst z = xyz[2] / 100;\r\n\t\tlet r;\r\n\t\tlet g;\r\n\t\tlet b;\r\n\r\n\t\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\r\n\t\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\r\n\t\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\r\n\r\n\t\t// Assume sRGB\r\n\t\tr = r > 0.0031308\r\n\t\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\r\n\t\t\t: r * 12.92;\r\n\r\n\t\tg = g > 0.0031308\r\n\t\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\r\n\t\t\t: g * 12.92;\r\n\r\n\t\tb = b > 0.0031308\r\n\t\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\r\n\t\t\t: b * 12.92;\r\n\r\n\t\tr = Math.min(Math.max(0, r), 1);\r\n\t\tg = Math.min(Math.max(0, g), 1);\r\n\t\tb = Math.min(Math.max(0, b), 1);\r\n\r\n\t\treturn [r * 255, g * 255, b * 255];\r\n\t};\r\n\r\n\tconvert.xyz.lab = function (xyz) {\r\n\t\tlet x = xyz[0];\r\n\t\tlet y = xyz[1];\r\n\t\tlet z = xyz[2];\r\n\r\n\t\tx /= 95.047;\r\n\t\ty /= 100;\r\n\t\tz /= 108.883;\r\n\r\n\t\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\r\n\t\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\r\n\t\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\r\n\r\n\t\tconst l = (116 * y) - 16;\r\n\t\tconst a = 500 * (x - y);\r\n\t\tconst b = 200 * (y - z);\r\n\r\n\t\treturn [l, a, b];\r\n\t};\r\n\r\n\tconvert.lab.xyz = function (lab) {\r\n\t\tconst l = lab[0];\r\n\t\tconst a = lab[1];\r\n\t\tconst b = lab[2];\r\n\t\tlet x;\r\n\t\tlet y;\r\n\t\tlet z;\r\n\r\n\t\ty = (l + 16) / 116;\r\n\t\tx = a / 500 + y;\r\n\t\tz = y - b / 200;\r\n\r\n\t\tconst y2 = y ** 3;\r\n\t\tconst x2 = x ** 3;\r\n\t\tconst z2 = z ** 3;\r\n\t\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\r\n\t\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\r\n\t\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\r\n\r\n\t\tx *= 95.047;\r\n\t\ty *= 100;\r\n\t\tz *= 108.883;\r\n\r\n\t\treturn [x, y, z];\r\n\t};\r\n\r\n\tconvert.lab.lch = function (lab) {\r\n\t\tconst l = lab[0];\r\n\t\tconst a = lab[1];\r\n\t\tconst b = lab[2];\r\n\t\tlet h;\r\n\r\n\t\tconst hr = Math.atan2(b, a);\r\n\t\th = hr * 360 / 2 / Math.PI;\r\n\r\n\t\tif (h < 0) {\r\n\t\t\th += 360;\r\n\t\t}\r\n\r\n\t\tconst c = Math.sqrt(a * a + b * b);\r\n\r\n\t\treturn [l, c, h];\r\n\t};\r\n\r\n\tconvert.lch.lab = function (lch) {\r\n\t\tconst l = lch[0];\r\n\t\tconst c = lch[1];\r\n\t\tconst h = lch[2];\r\n\r\n\t\tconst hr = h / 360 * 2 * Math.PI;\r\n\t\tconst a = c * Math.cos(hr);\r\n\t\tconst b = c * Math.sin(hr);\r\n\r\n\t\treturn [l, a, b];\r\n\t};\r\n\r\n\tconvert.rgb.ansi16 = function (args, saturation = null) {\r\n\t\tconst [r, g, b] = args;\r\n\t\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\r\n\r\n\t\tvalue = Math.round(value / 50);\r\n\r\n\t\tif (value === 0) {\r\n\t\t\treturn 30;\r\n\t\t}\r\n\r\n\t\tlet ansi = 30\r\n\t\t\t+ ((Math.round(b / 255) << 2)\r\n\t\t\t| (Math.round(g / 255) << 1)\r\n\t\t\t| Math.round(r / 255));\r\n\r\n\t\tif (value === 2) {\r\n\t\t\tansi += 60;\r\n\t\t}\r\n\r\n\t\treturn ansi;\r\n\t};\r\n\r\n\tconvert.hsv.ansi16 = function (args) {\r\n\t\t// Optimization here; we already know the value and don't need to get\r\n\t\t// it converted for us.\r\n\t\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\r\n\t};\r\n\r\n\tconvert.rgb.ansi256 = function (args) {\r\n\t\tconst r = args[0];\r\n\t\tconst g = args[1];\r\n\t\tconst b = args[2];\r\n\r\n\t\t// We use the extended greyscale palette here, with the exception of\r\n\t\t// black and white. normal palette only has 4 greyscale shades.\r\n\t\tif (r === g && g === b) {\r\n\t\t\tif (r < 8) {\r\n\t\t\t\treturn 16;\r\n\t\t\t}\r\n\r\n\t\t\tif (r > 248) {\r\n\t\t\t\treturn 231;\r\n\t\t\t}\r\n\r\n\t\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\r\n\t\t}\r\n\r\n\t\tconst ansi = 16\r\n\t\t\t+ (36 * Math.round(r / 255 * 5))\r\n\t\t\t+ (6 * Math.round(g / 255 * 5))\r\n\t\t\t+ Math.round(b / 255 * 5);\r\n\r\n\t\treturn ansi;\r\n\t};\r\n\r\n\tconvert.ansi16.rgb = function (args) {\r\n\t\tlet color = args % 10;\r\n\r\n\t\t// Handle greyscale\r\n\t\tif (color === 0 || color === 7) {\r\n\t\t\tif (args > 50) {\r\n\t\t\t\tcolor += 3.5;\r\n\t\t\t}\r\n\r\n\t\t\tcolor = color / 10.5 * 255;\r\n\r\n\t\t\treturn [color, color, color];\r\n\t\t}\r\n\r\n\t\tconst mult = (~~(args > 50) + 1) * 0.5;\r\n\t\tconst r = ((color & 1) * mult) * 255;\r\n\t\tconst g = (((color >> 1) & 1) * mult) * 255;\r\n\t\tconst b = (((color >> 2) & 1) * mult) * 255;\r\n\r\n\t\treturn [r, g, b];\r\n\t};\r\n\r\n\tconvert.ansi256.rgb = function (args) {\r\n\t\t// Handle greyscale\r\n\t\tif (args >= 232) {\r\n\t\t\tconst c = (args - 232) * 10 + 8;\r\n\t\t\treturn [c, c, c];\r\n\t\t}\r\n\r\n\t\targs -= 16;\r\n\r\n\t\tlet rem;\r\n\t\tconst r = Math.floor(args / 36) / 5 * 255;\r\n\t\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\r\n\t\tconst b = (rem % 6) / 5 * 255;\r\n\r\n\t\treturn [r, g, b];\r\n\t};\r\n\r\n\tconvert.rgb.hex = function (args) {\r\n\t\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\r\n\t\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\r\n\t\t\t+ (Math.round(args[2]) & 0xFF);\r\n\r\n\t\tconst string = integer.toString(16).toUpperCase();\r\n\t\treturn '000000'.substring(string.length) + string;\r\n\t};\r\n\r\n\tconvert.hex.rgb = function (args) {\r\n\t\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\r\n\t\tif (!match) {\r\n\t\t\treturn [0, 0, 0];\r\n\t\t}\r\n\r\n\t\tlet colorString = match[0];\r\n\r\n\t\tif (match[0].length === 3) {\r\n\t\t\tcolorString = colorString.split('').map(char => {\r\n\t\t\t\treturn char + char;\r\n\t\t\t}).join('');\r\n\t\t}\r\n\r\n\t\tconst integer = parseInt(colorString, 16);\r\n\t\tconst r = (integer >> 16) & 0xFF;\r\n\t\tconst g = (integer >> 8) & 0xFF;\r\n\t\tconst b = integer & 0xFF;\r\n\r\n\t\treturn [r, g, b];\r\n\t};\r\n\r\n\tconvert.rgb.hcg = function (rgb) {\r\n\t\tconst r = rgb[0] / 255;\r\n\t\tconst g = rgb[1] / 255;\r\n\t\tconst b = rgb[2] / 255;\r\n\t\tconst max = Math.max(Math.max(r, g), b);\r\n\t\tconst min = Math.min(Math.min(r, g), b);\r\n\t\tconst chroma = (max - min);\r\n\t\tlet grayscale;\r\n\t\tlet hue;\r\n\r\n\t\tif (chroma < 1) {\r\n\t\t\tgrayscale = min / (1 - chroma);\r\n\t\t} else {\r\n\t\t\tgrayscale = 0;\r\n\t\t}\r\n\r\n\t\tif (chroma <= 0) {\r\n\t\t\thue = 0;\r\n\t\t} else\r\n\t\tif (max === r) {\r\n\t\t\thue = ((g - b) / chroma) % 6;\r\n\t\t} else\r\n\t\tif (max === g) {\r\n\t\t\thue = 2 + (b - r) / chroma;\r\n\t\t} else {\r\n\t\t\thue = 4 + (r - g) / chroma + 4;\r\n\t\t}\r\n\r\n\t\thue /= 6;\r\n\t\thue %= 1;\r\n\r\n\t\treturn [hue * 360, chroma * 100, grayscale * 100];\r\n\t};\r\n\r\n\tconvert.hsl.hcg = function (hsl) {\r\n\t\tconst s = hsl[1] / 100;\r\n\t\tconst l = hsl[2] / 100;\r\n\r\n\t\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\r\n\r\n\t\tlet f = 0;\r\n\t\tif (c < 1.0) {\r\n\t\t\tf = (l - 0.5 * c) / (1.0 - c);\r\n\t\t}\r\n\r\n\t\treturn [hsl[0], c * 100, f * 100];\r\n\t};\r\n\r\n\tconvert.hsv.hcg = function (hsv) {\r\n\t\tconst s = hsv[1] / 100;\r\n\t\tconst v = hsv[2] / 100;\r\n\r\n\t\tconst c = s * v;\r\n\t\tlet f = 0;\r\n\r\n\t\tif (c < 1.0) {\r\n\t\t\tf = (v - c) / (1 - c);\r\n\t\t}\r\n\r\n\t\treturn [hsv[0], c * 100, f * 100];\r\n\t};\r\n\r\n\tconvert.hcg.rgb = function (hcg) {\r\n\t\tconst h = hcg[0] / 360;\r\n\t\tconst c = hcg[1] / 100;\r\n\t\tconst g = hcg[2] / 100;\r\n\r\n\t\tif (c === 0.0) {\r\n\t\t\treturn [g * 255, g * 255, g * 255];\r\n\t\t}\r\n\r\n\t\tconst pure = [0, 0, 0];\r\n\t\tconst hi = (h % 1) * 6;\r\n\t\tconst v = hi % 1;\r\n\t\tconst w = 1 - v;\r\n\t\tlet mg = 0;\r\n\r\n\t\t/* eslint-disable max-statements-per-line */\r\n\t\tswitch (Math.floor(hi)) {\r\n\t\t\tcase 0:\r\n\t\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\r\n\t\t\tcase 1:\r\n\t\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\r\n\t\t\tcase 2:\r\n\t\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\r\n\t\t\tcase 3:\r\n\t\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\r\n\t\t\tcase 4:\r\n\t\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\r\n\t\t\tdefault:\r\n\t\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\r\n\t\t}\r\n\t\t/* eslint-enable max-statements-per-line */\r\n\r\n\t\tmg = (1.0 - c) * g;\r\n\r\n\t\treturn [\r\n\t\t\t(c * pure[0] + mg) * 255,\r\n\t\t\t(c * pure[1] + mg) * 255,\r\n\t\t\t(c * pure[2] + mg) * 255\r\n\t\t];\r\n\t};\r\n\r\n\tconvert.hcg.hsv = function (hcg) {\r\n\t\tconst c = hcg[1] / 100;\r\n\t\tconst g = hcg[2] / 100;\r\n\r\n\t\tconst v = c + g * (1.0 - c);\r\n\t\tlet f = 0;\r\n\r\n\t\tif (v > 0.0) {\r\n\t\t\tf = c / v;\r\n\t\t}\r\n\r\n\t\treturn [hcg[0], f * 100, v * 100];\r\n\t};\r\n\r\n\tconvert.hcg.hsl = function (hcg) {\r\n\t\tconst c = hcg[1] / 100;\r\n\t\tconst g = hcg[2] / 100;\r\n\r\n\t\tconst l = g * (1.0 - c) + 0.5 * c;\r\n\t\tlet s = 0;\r\n\r\n\t\tif (l > 0.0 && l < 0.5) {\r\n\t\t\ts = c / (2 * l);\r\n\t\t} else\r\n\t\tif (l >= 0.5 && l < 1.0) {\r\n\t\t\ts = c / (2 * (1 - l));\r\n\t\t}\r\n\r\n\t\treturn [hcg[0], s * 100, l * 100];\r\n\t};\r\n\r\n\tconvert.hcg.hwb = function (hcg) {\r\n\t\tconst c = hcg[1] / 100;\r\n\t\tconst g = hcg[2] / 100;\r\n\t\tconst v = c + g * (1.0 - c);\r\n\t\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\r\n\t};\r\n\r\n\tconvert.hwb.hcg = function (hwb) {\r\n\t\tconst w = hwb[1] / 100;\r\n\t\tconst b = hwb[2] / 100;\r\n\t\tconst v = 1 - b;\r\n\t\tconst c = v - w;\r\n\t\tlet g = 0;\r\n\r\n\t\tif (c < 1) {\r\n\t\t\tg = (v - c) / (1 - c);\r\n\t\t}\r\n\r\n\t\treturn [hwb[0], c * 100, g * 100];\r\n\t};\r\n\r\n\tconvert.apple.rgb = function (apple) {\r\n\t\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\r\n\t};\r\n\r\n\tconvert.rgb.apple = function (rgb) {\r\n\t\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\r\n\t};\r\n\r\n\tconvert.gray.rgb = function (args) {\r\n\t\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\r\n\t};\r\n\r\n\tconvert.gray.hsl = function (args) {\r\n\t\treturn [0, 0, args[0]];\r\n\t};\r\n\r\n\tconvert.gray.hsv = convert.gray.hsl;\r\n\r\n\tconvert.gray.hwb = function (gray) {\r\n\t\treturn [0, 100, gray[0]];\r\n\t};\r\n\r\n\tconvert.gray.cmyk = function (gray) {\r\n\t\treturn [0, 0, 0, gray[0]];\r\n\t};\r\n\r\n\tconvert.gray.lab = function (gray) {\r\n\t\treturn [gray[0], 0, 0];\r\n\t};\r\n\r\n\tconvert.gray.hex = function (gray) {\r\n\t\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\r\n\t\tconst integer = (val << 16) + (val << 8) + val;\r\n\r\n\t\tconst string = integer.toString(16).toUpperCase();\r\n\t\treturn '000000'.substring(string.length) + string;\r\n\t};\r\n\r\n\tconvert.rgb.gray = function (rgb) {\r\n\t\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\r\n\t\treturn [val / 255 * 100];\r\n\t};\r\n\r\n\treturn convert;\r\n\r\n});\ndefine('packages/color-convert/route',[\r\n\t'./conversions'\r\n],function(conversions) {\r\n\r\n\t/*\r\n\t\tThis function routes a model to all other models.\r\n\r\n\t\tall functions that are routed have a property `.conversion` attached\r\n\t\tto the returned synthetic function. This property is an array\r\n\t\tof strings, each with the steps in between the 'from' and 'to'\r\n\t\tcolor models (inclusive).\r\n\r\n\t\tconversions that are not possible simply are not included.\r\n\t*/\r\n\r\n\tfunction buildGraph() {\r\n\t\tconst graph = {};\r\n\t\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\r\n\t\tconst models = Object.keys(conversions);\r\n\r\n\t\tfor (let len = models.length, i = 0; i < len; i++) {\r\n\t\t\tgraph[models[i]] = {\r\n\t\t\t\t// http://jsperf.com/1-vs-infinity\r\n\t\t\t\t// micro-opt, but this is simple.\r\n\t\t\t\tdistance: -1,\r\n\t\t\t\tparent: null\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn graph;\r\n\t}\r\n\r\n\t// https://en.wikipedia.org/wiki/Breadth-first_search\r\n\tfunction deriveBFS(fromModel) {\r\n\t\tconst graph = buildGraph();\r\n\t\tconst queue = [fromModel]; // Unshift -> queue -> pop\r\n\r\n\t\tgraph[fromModel].distance = 0;\r\n\r\n\t\twhile (queue.length) {\r\n\t\t\tconst current = queue.pop();\r\n\t\t\tconst adjacents = Object.keys(conversions[current]);\r\n\r\n\t\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\r\n\t\t\t\tconst adjacent = adjacents[i];\r\n\t\t\t\tconst node = graph[adjacent];\r\n\r\n\t\t\t\tif (node.distance === -1) {\r\n\t\t\t\t\tnode.distance = graph[current].distance + 1;\r\n\t\t\t\t\tnode.parent = current;\r\n\t\t\t\t\tqueue.unshift(adjacent);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn graph;\r\n\t}\r\n\r\n\tfunction link(from, to) {\r\n\t\treturn function (args) {\r\n\t\t\treturn to(from(args));\r\n\t\t};\r\n\t}\r\n\r\n\tfunction wrapConversion(toModel, graph) {\r\n\t\tconst path = [graph[toModel].parent, toModel];\r\n\t\tlet fn = conversions[graph[toModel].parent][toModel];\r\n\r\n\t\tlet cur = graph[toModel].parent;\r\n\t\twhile (graph[cur].parent) {\r\n\t\t\tpath.unshift(graph[cur].parent);\r\n\t\t\tfn = link(conversions[graph[cur].parent][cur], fn);\r\n\t\t\tcur = graph[cur].parent;\r\n\t\t}\r\n\r\n\t\tfn.conversion = path;\r\n\t\treturn fn;\r\n\t}\r\n\r\n\treturn function (fromModel) {\r\n\t\tconst graph = deriveBFS(fromModel);\r\n\t\tconst conversion = {};\r\n\r\n\t\tconst models = Object.keys(graph);\r\n\t\tfor (let len = models.length, i = 0; i < len; i++) {\r\n\t\t\tconst toModel = models[i];\r\n\t\t\tconst node = graph[toModel];\r\n\r\n\t\t\tif (node.parent === null) {\r\n\t\t\t\t// No possible conversion, or this node is the source model.\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tconversion[toModel] = wrapConversion(toModel, graph);\r\n\t\t}\r\n\r\n\t\treturn conversion;\r\n\t};\r\n});\r\n\ndefine('packages/color-convert/index',[\r\n\t'./conversions',\r\n\t'./route'\r\n],function(conversions,route) {\r\n\r\n\tconst convert = {};\r\n\r\n\tconst models = Object.keys(conversions);\r\n\r\n\tfunction wrapRaw(fn) {\r\n\t\tconst wrappedFn = function (...args) {\r\n\t\t\tconst arg0 = args[0];\r\n\t\t\tif (arg0 === undefined || arg0 === null) {\r\n\t\t\t\treturn arg0;\r\n\t\t\t}\r\n\r\n\t\t\tif (arg0.length > 1) {\r\n\t\t\t\targs = arg0;\r\n\t\t\t}\r\n\r\n\t\t\treturn fn(args);\r\n\t\t};\r\n\r\n\t\t// Preserve .conversion property if there is one\r\n\t\tif ('conversion' in fn) {\r\n\t\t\twrappedFn.conversion = fn.conversion;\r\n\t\t}\r\n\r\n\t\treturn wrappedFn;\r\n\t}\r\n\r\n\tfunction wrapRounded(fn) {\r\n\t\tconst wrappedFn = function (...args) {\r\n\t\t\tconst arg0 = args[0];\r\n\r\n\t\t\tif (arg0 === undefined || arg0 === null) {\r\n\t\t\t\treturn arg0;\r\n\t\t\t}\r\n\r\n\t\t\tif (arg0.length > 1) {\r\n\t\t\t\targs = arg0;\r\n\t\t\t}\r\n\r\n\t\t\tconst result = fn(args);\r\n\r\n\t\t\t// We're assuming the result is an array here.\r\n\t\t\t// see notice in conversions.js; don't use box types\r\n\t\t\t// in conversion functions.\r\n\t\t\tif (typeof result === 'object') {\r\n\t\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\r\n\t\t\t\t\tresult[i] = Math.round(result[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t};\r\n\r\n\t\t// Preserve .conversion property if there is one\r\n\t\tif ('conversion' in fn) {\r\n\t\t\twrappedFn.conversion = fn.conversion;\r\n\t\t}\r\n\r\n\t\treturn wrappedFn;\r\n\t}\r\n\r\n\tmodels.forEach(fromModel => {\r\n\t\tconvert[fromModel] = {};\r\n\r\n\t\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\r\n\t\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\r\n\r\n\t\tconst routes = route(fromModel);\r\n\t\tconst routeModels = Object.keys(routes);\r\n\r\n\t\trouteModels.forEach(toModel => {\r\n\t\t\tconst fn = routes[toModel];\r\n\r\n\t\t\tconvert[fromModel][toModel] = wrapRounded(fn);\r\n\t\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\r\n\t\t});\r\n\t});\r\n\r\n\treturn  convert;\r\n\r\n});\r\n\r\n\ndefine('packages/chartjs-color-string',[\r\n  './color-name'\r\n],function(colorNames){\r\n \r\n   function getRgba(string) {\r\n     if (!string) {\r\n        return;\r\n     }\r\n     var abbr =  /^#([a-fA-F0-9]{3,4})$/i,\r\n         hex =  /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\r\n         rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\r\n         per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\r\n         keyword = /(\\w+)/;\r\n\r\n     var rgb = [0, 0, 0],\r\n         a = 1,\r\n         match = string.match(abbr),\r\n         hexAlpha = \"\";\r\n     if (match) {\r\n        match = match[1];\r\n        hexAlpha = match[3];\r\n        for (var i = 0; i < rgb.length; i++) {\r\n           rgb[i] = parseInt(match[i] + match[i], 16);\r\n        }\r\n        if (hexAlpha) {\r\n           a = Math.round((parseInt(hexAlpha + hexAlpha, 16) / 255) * 100) / 100;\r\n        }\r\n     }\r\n     else if (match = string.match(hex)) {\r\n        hexAlpha = match[2];\r\n        match = match[1];\r\n        for (var i = 0; i < rgb.length; i++) {\r\n           rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\r\n        }\r\n        if (hexAlpha) {\r\n           a = Math.round((parseInt(hexAlpha, 16) / 255) * 100) / 100;\r\n        }\r\n     }\r\n     else if (match = string.match(rgba)) {\r\n        for (var i = 0; i < rgb.length; i++) {\r\n           rgb[i] = parseInt(match[i + 1]);\r\n        }\r\n        a = parseFloat(match[4]);\r\n     }\r\n     else if (match = string.match(per)) {\r\n        for (var i = 0; i < rgb.length; i++) {\r\n           rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\r\n        }\r\n        a = parseFloat(match[4]);\r\n     }\r\n     else if (match = string.match(keyword)) {\r\n        if (match[1] == \"transparent\") {\r\n           return [0, 0, 0, 0];\r\n        }\r\n        rgb = colorNames[match[1]];\r\n        if (!rgb) {\r\n           return;\r\n        }\r\n     }\r\n\r\n     for (var i = 0; i < rgb.length; i++) {\r\n        rgb[i] = scale(rgb[i], 0, 255);\r\n     }\r\n     if (!a && a != 0) {\r\n        a = 1;\r\n     }\r\n     else {\r\n        a = scale(a, 0, 1);\r\n     }\r\n     rgb[3] = a;\r\n     return rgb;\r\n  }\r\n\r\n  function getHsla(string) {\r\n     if (!string) {\r\n        return;\r\n     }\r\n     var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n     var match = string.match(hsl);\r\n     if (match) {\r\n        var alpha = parseFloat(match[4]);\r\n        var h = scale(parseInt(match[1]), 0, 360),\r\n            s = scale(parseFloat(match[2]), 0, 100),\r\n            l = scale(parseFloat(match[3]), 0, 100),\r\n            a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n        return [h, s, l, a];\r\n     }\r\n  }\r\n\r\n  function getHwb(string) {\r\n     if (!string) {\r\n        return;\r\n     }\r\n     var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n     var match = string.match(hwb);\r\n     if (match) {\r\n      var alpha = parseFloat(match[4]);\r\n        var h = scale(parseInt(match[1]), 0, 360),\r\n            w = scale(parseFloat(match[2]), 0, 100),\r\n            b = scale(parseFloat(match[3]), 0, 100),\r\n            a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n        return [h, w, b, a];\r\n     }\r\n  }\r\n\r\n  function getRgb(string) {\r\n     var rgba = getRgba(string);\r\n     return rgba && rgba.slice(0, 3);\r\n  }\r\n\r\n  function getHsl(string) {\r\n    var hsla = getHsla(string);\r\n    return hsla && hsla.slice(0, 3);\r\n  }\r\n\r\n  function getAlpha(string) {\r\n     var vals = getRgba(string);\r\n     if (vals) {\r\n        return vals[3];\r\n     }\r\n     else if (vals = getHsla(string)) {\r\n        return vals[3];\r\n     }\r\n     else if (vals = getHwb(string)) {\r\n        return vals[3];\r\n     }\r\n  }\r\n\r\n  // generators\r\n  function hexString(rgba, a) {\r\n     var a = (a !== undefined && rgba.length === 3) ? a : rgba[3];\r\n     return \"#\" + hexDouble(rgba[0]) \r\n                + hexDouble(rgba[1])\r\n                + hexDouble(rgba[2])\r\n                + (\r\n                   (a >= 0 && a < 1)\r\n                   ? hexDouble(Math.round(a * 255))\r\n                   : \"\"\r\n                );\r\n  }\r\n\r\n  function rgbString(rgba, alpha) {\r\n     if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n        return rgbaString(rgba, alpha);\r\n     }\r\n     return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\r\n  }\r\n\r\n  function rgbaString(rgba, alpha) {\r\n     if (alpha === undefined) {\r\n        alpha = (rgba[3] !== undefined ? rgba[3] : 1);\r\n     }\r\n     return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\r\n             + \", \" + alpha + \")\";\r\n  }\r\n\r\n  function percentString(rgba, alpha) {\r\n     if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n        return percentaString(rgba, alpha);\r\n     }\r\n     var r = Math.round(rgba[0]/255 * 100),\r\n         g = Math.round(rgba[1]/255 * 100),\r\n         b = Math.round(rgba[2]/255 * 100);\r\n\r\n     return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\r\n  }\r\n\r\n  function percentaString(rgba, alpha) {\r\n     var r = Math.round(rgba[0]/255 * 100),\r\n         g = Math.round(rgba[1]/255 * 100),\r\n         b = Math.round(rgba[2]/255 * 100);\r\n     return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\r\n  }\r\n\r\n  function hslString(hsla, alpha) {\r\n     if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\r\n        return hslaString(hsla, alpha);\r\n     }\r\n     return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\r\n  }\r\n\r\n  function hslaString(hsla, alpha) {\r\n     if (alpha === undefined) {\r\n        alpha = (hsla[3] !== undefined ? hsla[3] : 1);\r\n     }\r\n     return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\r\n             + alpha + \")\";\r\n  }\r\n\r\n  // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\r\n  // (hwb have alpha optional & 1 is default value)\r\n  function hwbString(hwb, alpha) {\r\n     if (alpha === undefined) {\r\n        alpha = (hwb[3] !== undefined ? hwb[3] : 1);\r\n     }\r\n     return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\r\n             + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\r\n  }\r\n\r\n  function keyword(rgb) {\r\n    return reverseNames[rgb.slice(0, 3)];\r\n  }\r\n\r\n  // helpers\r\n  function scale(num, min, max) {\r\n     return Math.min(Math.max(min, num), max);\r\n  }\r\n\r\n  function hexDouble(num) {\r\n    var str = num.toString(16).toUpperCase();\r\n    return (str.length < 2) ? \"0\" + str : str;\r\n  }\r\n\r\n\r\n  //create a list of reverse color names\r\n  var reverseNames = {};\r\n  for (var name in colorNames) {\r\n     reverseNames[colorNames[name]] = name;\r\n  }\r\n\r\n return {\r\n     getRgba: getRgba,\r\n     getHsla: getHsla,\r\n     getRgb: getRgb,\r\n     getHsl: getHsl,\r\n     getHwb: getHwb,\r\n     getAlpha: getAlpha,\r\n\r\n     hexString: hexString,\r\n     rgbString: rgbString,\r\n     rgbaString: rgbaString,\r\n     percentString: percentString,\r\n     percentaString: percentaString,\r\n     hslString: hslString,\r\n     hslaString: hslaString,\r\n     hwbString: hwbString,\r\n     keyword: keyword\r\n  }\r\n\r\n});\r\n\ndefine('packages/chartjs-color',[\r\n\t\"./color-convert/index\",\r\n\t\"./chartjs-color-string\"\r\n],function(convert,string){\r\n\r\n\tvar Color = function (obj) {\r\n\t\tif (obj instanceof Color) {\r\n\t\t\treturn obj;\r\n\t\t}\r\n\t\tif (!(this instanceof Color)) {\r\n\t\t\treturn new Color(obj);\r\n\t\t}\r\n\r\n\t\tthis.valid = false;\r\n\t\tthis.values = {\r\n\t\t\trgb: [0, 0, 0],\r\n\t\t\thsl: [0, 0, 0],\r\n\t\t\thsv: [0, 0, 0],\r\n\t\t\thwb: [0, 0, 0],\r\n\t\t\tcmyk: [0, 0, 0, 0],\r\n\t\t\talpha: 1\r\n\t\t};\r\n\r\n\t\t// parse Color() argument\r\n\t\tvar vals;\r\n\t\tif (typeof obj === 'string') {\r\n\t\t\tvals = string.getRgba(obj);\r\n\t\t\tif (vals) {\r\n\t\t\t\tthis.setValues('rgb', vals);\r\n\t\t\t} else if (vals = string.getHsla(obj)) {\r\n\t\t\t\tthis.setValues('hsl', vals);\r\n\t\t\t} else if (vals = string.getHwb(obj)) {\r\n\t\t\t\tthis.setValues('hwb', vals);\r\n\t\t\t}\r\n\t\t} else if (typeof obj === 'object') {\r\n\t\t\tvals = obj;\r\n\t\t\tif (vals.r !== undefined || vals.red !== undefined) {\r\n\t\t\t\tthis.setValues('rgb', vals);\r\n\t\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\r\n\t\t\t\tthis.setValues('hsl', vals);\r\n\t\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\r\n\t\t\t\tthis.setValues('hsv', vals);\r\n\t\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\r\n\t\t\t\tthis.setValues('hwb', vals);\r\n\t\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\r\n\t\t\t\tthis.setValues('cmyk', vals);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tColor.prototype = {\r\n\t\tisValid: function () {\r\n\t\t\treturn this.valid;\r\n\t\t},\r\n\t\trgb: function () {\r\n\t\t\treturn this.setSpace('rgb', arguments);\r\n\t\t},\r\n\t\thsl: function () {\r\n\t\t\treturn this.setSpace('hsl', arguments);\r\n\t\t},\r\n\t\thsv: function () {\r\n\t\t\treturn this.setSpace('hsv', arguments);\r\n\t\t},\r\n\t\thwb: function () {\r\n\t\t\treturn this.setSpace('hwb', arguments);\r\n\t\t},\r\n\t\tcmyk: function () {\r\n\t\t\treturn this.setSpace('cmyk', arguments);\r\n\t\t},\r\n\r\n\t\trgbArray: function () {\r\n\t\t\treturn this.values.rgb;\r\n\t\t},\r\n\t\thslArray: function () {\r\n\t\t\treturn this.values.hsl;\r\n\t\t},\r\n\t\thsvArray: function () {\r\n\t\t\treturn this.values.hsv;\r\n\t\t},\r\n\t\thwbArray: function () {\r\n\t\t\tvar values = this.values;\r\n\t\t\tif (values.alpha !== 1) {\r\n\t\t\t\treturn values.hwb.concat([values.alpha]);\r\n\t\t\t}\r\n\t\t\treturn values.hwb;\r\n\t\t},\r\n\t\tcmykArray: function () {\r\n\t\t\treturn this.values.cmyk;\r\n\t\t},\r\n\t\trgbaArray: function () {\r\n\t\t\tvar values = this.values;\r\n\t\t\treturn values.rgb.concat([values.alpha]);\r\n\t\t},\r\n\t\thslaArray: function () {\r\n\t\t\tvar values = this.values;\r\n\t\t\treturn values.hsl.concat([values.alpha]);\r\n\t\t},\r\n\t\talpha: function (val) {\r\n\t\t\tif (val === undefined) {\r\n\t\t\t\treturn this.values.alpha;\r\n\t\t\t}\r\n\t\t\tthis.setValues('alpha', val);\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tred: function (val) {\r\n\t\t\treturn this.setChannel('rgb', 0, val);\r\n\t\t},\r\n\t\tgreen: function (val) {\r\n\t\t\treturn this.setChannel('rgb', 1, val);\r\n\t\t},\r\n\t\tblue: function (val) {\r\n\t\t\treturn this.setChannel('rgb', 2, val);\r\n\t\t},\r\n\t\thue: function (val) {\r\n\t\t\tif (val) {\r\n\t\t\t\tval %= 360;\r\n\t\t\t\tval = val < 0 ? 360 + val : val;\r\n\t\t\t}\r\n\t\t\treturn this.setChannel('hsl', 0, val);\r\n\t\t},\r\n\t\tsaturation: function (val) {\r\n\t\t\treturn this.setChannel('hsl', 1, val);\r\n\t\t},\r\n\t\tlightness: function (val) {\r\n\t\t\treturn this.setChannel('hsl', 2, val);\r\n\t\t},\r\n\t\tsaturationv: function (val) {\r\n\t\t\treturn this.setChannel('hsv', 1, val);\r\n\t\t},\r\n\t\twhiteness: function (val) {\r\n\t\t\treturn this.setChannel('hwb', 1, val);\r\n\t\t},\r\n\t\tblackness: function (val) {\r\n\t\t\treturn this.setChannel('hwb', 2, val);\r\n\t\t},\r\n\t\tvalue: function (val) {\r\n\t\t\treturn this.setChannel('hsv', 2, val);\r\n\t\t},\r\n\t\tcyan: function (val) {\r\n\t\t\treturn this.setChannel('cmyk', 0, val);\r\n\t\t},\r\n\t\tmagenta: function (val) {\r\n\t\t\treturn this.setChannel('cmyk', 1, val);\r\n\t\t},\r\n\t\tyellow: function (val) {\r\n\t\t\treturn this.setChannel('cmyk', 2, val);\r\n\t\t},\r\n\t\tblack: function (val) {\r\n\t\t\treturn this.setChannel('cmyk', 3, val);\r\n\t\t},\r\n\r\n\t\thexString: function () {\r\n\t\t\treturn string.hexString(this.values.rgb);\r\n\t\t},\r\n\t\trgbString: function () {\r\n\t\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\r\n\t\t},\r\n\t\trgbaString: function () {\r\n\t\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\r\n\t\t},\r\n\t\tpercentString: function () {\r\n\t\t\treturn string.percentString(this.values.rgb, this.values.alpha);\r\n\t\t},\r\n\t\thslString: function () {\r\n\t\t\treturn string.hslString(this.values.hsl, this.values.alpha);\r\n\t\t},\r\n\t\thslaString: function () {\r\n\t\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\r\n\t\t},\r\n\t\thwbString: function () {\r\n\t\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\r\n\t\t},\r\n\t\tkeyword: function () {\r\n\t\t\treturn string.keyword(this.values.rgb, this.values.alpha);\r\n\t\t},\r\n\r\n\t\trgbNumber: function () {\r\n\t\t\tvar rgb = this.values.rgb;\r\n\t\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\r\n\t\t},\r\n\r\n\t\tluminosity: function () {\r\n\t\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\r\n\t\t\tvar rgb = this.values.rgb;\r\n\t\t\tvar lum = [];\r\n\t\t\tfor (var i = 0; i < rgb.length; i++) {\r\n\t\t\t\tvar chan = rgb[i] / 255;\r\n\t\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\r\n\t\t\t}\r\n\t\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\r\n\t\t},\r\n\r\n\t\tcontrast: function (color2) {\r\n\t\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\r\n\t\t\tvar lum1 = this.luminosity();\r\n\t\t\tvar lum2 = color2.luminosity();\r\n\t\t\tif (lum1 > lum2) {\r\n\t\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\r\n\t\t\t}\r\n\t\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\r\n\t\t},\r\n\r\n\t\tlevel: function (color2) {\r\n\t\t\tvar contrastRatio = this.contrast(color2);\r\n\t\t\tif (contrastRatio >= 7.1) {\r\n\t\t\t\treturn 'AAA';\r\n\t\t\t}\r\n\r\n\t\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\r\n\t\t},\r\n\r\n\t\tdark: function () {\r\n\t\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\r\n\t\t\tvar rgb = this.values.rgb;\r\n\t\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\r\n\t\t\treturn yiq < 128;\r\n\t\t},\r\n\r\n\t\tlight: function () {\r\n\t\t\treturn !this.dark();\r\n\t\t},\r\n\r\n\t\tnegate: function () {\r\n\t\t\tvar rgb = [];\r\n\t\t\tfor (var i = 0; i < 3; i++) {\r\n\t\t\t\trgb[i] = 255 - this.values.rgb[i];\r\n\t\t\t}\r\n\t\t\tthis.setValues('rgb', rgb);\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tlighten: function (ratio) {\r\n\t\t\tvar hsl = this.values.hsl;\r\n\t\t\thsl[2] += hsl[2] * ratio;\r\n\t\t\tthis.setValues('hsl', hsl);\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tdarken: function (ratio) {\r\n\t\t\tvar hsl = this.values.hsl;\r\n\t\t\thsl[2] -= hsl[2] * ratio;\r\n\t\t\tthis.setValues('hsl', hsl);\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tsaturate: function (ratio) {\r\n\t\t\tvar hsl = this.values.hsl;\r\n\t\t\thsl[1] += hsl[1] * ratio;\r\n\t\t\tthis.setValues('hsl', hsl);\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tdesaturate: function (ratio) {\r\n\t\t\tvar hsl = this.values.hsl;\r\n\t\t\thsl[1] -= hsl[1] * ratio;\r\n\t\t\tthis.setValues('hsl', hsl);\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\twhiten: function (ratio) {\r\n\t\t\tvar hwb = this.values.hwb;\r\n\t\t\thwb[1] += hwb[1] * ratio;\r\n\t\t\tthis.setValues('hwb', hwb);\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tblacken: function (ratio) {\r\n\t\t\tvar hwb = this.values.hwb;\r\n\t\t\thwb[2] += hwb[2] * ratio;\r\n\t\t\tthis.setValues('hwb', hwb);\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tgreyscale: function () {\r\n\t\t\tvar rgb = this.values.rgb;\r\n\t\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\r\n\t\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\r\n\t\t\tthis.setValues('rgb', [val, val, val]);\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tclearer: function (ratio) {\r\n\t\t\tvar alpha = this.values.alpha;\r\n\t\t\tthis.setValues('alpha', alpha - (alpha * ratio));\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\topaquer: function (ratio) {\r\n\t\t\tvar alpha = this.values.alpha;\r\n\t\t\tthis.setValues('alpha', alpha + (alpha * ratio));\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\trotate: function (degrees) {\r\n\t\t\tvar hsl = this.values.hsl;\r\n\t\t\tvar hue = (hsl[0] + degrees) % 360;\r\n\t\t\thsl[0] = hue < 0 ? 360 + hue : hue;\r\n\t\t\tthis.setValues('hsl', hsl);\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Ported from sass implementation in C\r\n\t\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\r\n\t\t */\r\n\t\tmix: function (mixinColor, weight) {\r\n\t\t\tvar color1 = this;\r\n\t\t\tvar color2 = mixinColor;\r\n\t\t\tvar p = weight === undefined ? 0.5 : weight;\r\n\r\n\t\t\tvar w = 2 * p - 1;\r\n\t\t\tvar a = color1.alpha() - color2.alpha();\r\n\r\n\t\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n\t\t\tvar w2 = 1 - w1;\r\n\r\n\t\t\treturn this\r\n\t\t\t\t.rgb(\r\n\t\t\t\t\tw1 * color1.red() + w2 * color2.red(),\r\n\t\t\t\t\tw1 * color1.green() + w2 * color2.green(),\r\n\t\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\r\n\t\t\t\t)\r\n\t\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\r\n\t\t},\r\n\r\n\t\ttoJSON: function () {\r\n\t\t\treturn this.rgb();\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\t\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\r\n\t\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\r\n\t\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\r\n\t\t\t// except 'alpha' which is a number.\r\n\t\t\tvar result = new Color();\r\n\t\t\tvar source = this.values;\r\n\t\t\tvar target = result.values;\r\n\t\t\tvar value, type;\r\n\r\n\t\t\tfor (var prop in source) {\r\n\t\t\t\tif (source.hasOwnProperty(prop)) {\r\n\t\t\t\t\tvalue = source[prop];\r\n\t\t\t\t\ttype = ({}).toString.call(value);\r\n\t\t\t\t\tif (type === '[object Array]') {\r\n\t\t\t\t\t\ttarget[prop] = value.slice(0);\r\n\t\t\t\t\t} else if (type === '[object Number]') {\r\n\t\t\t\t\t\ttarget[prop] = value;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.error('unexpected color value:', value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\t};\r\n\r\n\tColor.prototype.spaces = {\r\n\t\trgb: ['red', 'green', 'blue'],\r\n\t\thsl: ['hue', 'saturation', 'lightness'],\r\n\t\thsv: ['hue', 'saturation', 'value'],\r\n\t\thwb: ['hue', 'whiteness', 'blackness'],\r\n\t\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\r\n\t};\r\n\r\n\tColor.prototype.maxes = {\r\n\t\trgb: [255, 255, 255],\r\n\t\thsl: [360, 100, 100],\r\n\t\thsv: [360, 100, 100],\r\n\t\thwb: [360, 100, 100],\r\n\t\tcmyk: [100, 100, 100, 100]\r\n\t};\r\n\r\n\tColor.prototype.getValues = function (space) {\r\n\t\tvar values = this.values;\r\n\t\tvar vals = {};\r\n\r\n\t\tfor (var i = 0; i < space.length; i++) {\r\n\t\t\tvals[space.charAt(i)] = values[space][i];\r\n\t\t}\r\n\r\n\t\tif (values.alpha !== 1) {\r\n\t\t\tvals.a = values.alpha;\r\n\t\t}\r\n\r\n\t\t// {r: 255, g: 255, b: 255, a: 0.4}\r\n\t\treturn vals;\r\n\t};\r\n\r\n\tColor.prototype.setValues = function (space, vals) {\r\n\t\tvar values = this.values;\r\n\t\tvar spaces = this.spaces;\r\n\t\tvar maxes = this.maxes;\r\n\t\tvar alpha = 1;\r\n\t\tvar i;\r\n\r\n\t\tthis.valid = true;\r\n\r\n\t\tif (space === 'alpha') {\r\n\t\t\talpha = vals;\r\n\t\t} else if (vals.length) {\r\n\t\t\t// [10, 10, 10]\r\n\t\t\tvalues[space] = vals.slice(0, space.length);\r\n\t\t\talpha = vals[space.length];\r\n\t\t} else if (vals[space.charAt(0)] !== undefined) {\r\n\t\t\t// {r: 10, g: 10, b: 10}\r\n\t\t\tfor (i = 0; i < space.length; i++) {\r\n\t\t\t\tvalues[space][i] = vals[space.charAt(i)];\r\n\t\t\t}\r\n\r\n\t\t\talpha = vals.a;\r\n\t\t} else if (vals[spaces[space][0]] !== undefined) {\r\n\t\t\t// {red: 10, green: 10, blue: 10}\r\n\t\t\tvar chans = spaces[space];\r\n\r\n\t\t\tfor (i = 0; i < space.length; i++) {\r\n\t\t\t\tvalues[space][i] = vals[chans[i]];\r\n\t\t\t}\r\n\r\n\t\t\talpha = vals.alpha;\r\n\t\t}\r\n\r\n\t\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\r\n\r\n\t\tif (space === 'alpha') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tvar capped;\r\n\r\n\t\t// cap values of the space prior converting all values\r\n\t\tfor (i = 0; i < space.length; i++) {\r\n\t\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\r\n\t\t\tvalues[space][i] = Math.round(capped);\r\n\t\t}\r\n\r\n\t\t// convert to all the other color spaces\r\n\t\tfor (var sname in spaces) {\r\n\t\t\tif (sname !== space) {\r\n\t\t\t\tvalues[sname] = convert[space][sname](values[space]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t};\r\n\r\n\tColor.prototype.setSpace = function (space, args) {\r\n\t\tvar vals = args[0];\r\n\r\n\t\tif (vals === undefined) {\r\n\t\t\t// color.rgb()\r\n\t\t\treturn this.getValues(space);\r\n\t\t}\r\n\r\n\t\t// color.rgb(10, 10, 10)\r\n\t\tif (typeof vals === 'number') {\r\n\t\t\tvals = Array.prototype.slice.call(args);\r\n\t\t}\r\n\r\n\t\tthis.setValues(space, vals);\r\n\t\treturn this;\r\n\t};\r\n\r\n\tColor.prototype.setChannel = function (space, index, val) {\r\n\t\tvar svalues = this.values[space];\r\n\t\tif (val === undefined) {\r\n\t\t\t// color.red()\r\n\t\t\treturn svalues[index];\r\n\t\t} else if (val === svalues[index]) {\r\n\t\t\t// color.red(color.red())\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t// color.red(100)\r\n\t\tsvalues[index] = val;\r\n\t\tthis.setValues(space, svalues);\r\n\r\n\t\treturn this;\r\n\t};\r\n\r\n\treturn Color;\r\n});\ndefine('skylark-chartjs/helpers/helpers.core',[], function () {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var helpers = {\n        noop: function () {\n        },\n        uid: function () {\n            var id = 0;\n            return function () {\n                return id++;\n            };\n        }(),\n        isNullOrUndef: function (value) {\n            return value === null || typeof value === 'undefined';\n        },\n        isArray: function (value) {\n            if (Array.isArray && Array.isArray(value)) {\n                return true;\n            }\n            var type = Object.prototype.toString.call(value);\n            if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n                return true;\n            }\n            return false;\n        },\n        isObject: function (value) {\n            return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n        },\n        isFinite: function (value) {\n            return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n        },\n        valueOrDefault: function (value, defaultValue) {\n            return typeof value === 'undefined' ? defaultValue : value;\n        },\n        valueAtIndexOrDefault: function (value, index, defaultValue) {\n            return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n        },\n        callback: function (fn, args, thisArg) {\n            if (fn && typeof fn.call === 'function') {\n                return fn.apply(thisArg, args);\n            }\n        },\n        each: function (loopable, fn, thisArg, reverse) {\n            var i, len, keys;\n            if (helpers.isArray(loopable)) {\n                len = loopable.length;\n                if (reverse) {\n                    for (i = len - 1; i >= 0; i--) {\n                        fn.call(thisArg, loopable[i], i);\n                    }\n                } else {\n                    for (i = 0; i < len; i++) {\n                        fn.call(thisArg, loopable[i], i);\n                    }\n                }\n            } else if (helpers.isObject(loopable)) {\n                keys = Object.keys(loopable);\n                len = keys.length;\n                for (i = 0; i < len; i++) {\n                    fn.call(thisArg, loopable[keys[i]], keys[i]);\n                }\n            }\n        },\n        arrayEquals: function (a0, a1) {\n            var i, ilen, v0, v1;\n            if (!a0 || !a1 || a0.length !== a1.length) {\n                return false;\n            }\n            for (i = 0, ilen = a0.length; i < ilen; ++i) {\n                v0 = a0[i];\n                v1 = a1[i];\n                if (v0 instanceof Array && v1 instanceof Array) {\n                    if (!helpers.arrayEquals(v0, v1)) {\n                        return false;\n                    }\n                } else if (v0 !== v1) {\n                    return false;\n                }\n            }\n            return true;\n        },\n        clone: function (source) {\n            if (helpers.isArray(source)) {\n                return source.map(helpers.clone);\n            }\n            if (helpers.isObject(source)) {\n                var target = {};\n                var keys = Object.keys(source);\n                var klen = keys.length;\n                var k = 0;\n                for (; k < klen; ++k) {\n                    target[keys[k]] = helpers.clone(source[keys[k]]);\n                }\n                return target;\n            }\n            return source;\n        },\n        _merger: function (key, target, source, options) {\n            var tval = target[key];\n            var sval = source[key];\n            if (helpers.isObject(tval) && helpers.isObject(sval)) {\n                helpers.merge(tval, sval, options);\n            } else {\n                target[key] = helpers.clone(sval);\n            }\n        },\n        _mergerIf: function (key, target, source) {\n            var tval = target[key];\n            var sval = source[key];\n            if (helpers.isObject(tval) && helpers.isObject(sval)) {\n                helpers.mergeIf(tval, sval);\n            } else if (!target.hasOwnProperty(key)) {\n                target[key] = helpers.clone(sval);\n            }\n        },\n        merge: function (target, source, options) {\n            var sources = helpers.isArray(source) ? source : [source];\n            var ilen = sources.length;\n            var merge, i, keys, klen, k;\n            if (!helpers.isObject(target)) {\n                return target;\n            }\n            options = options || {};\n            merge = options.merger || helpers._merger;\n            for (i = 0; i < ilen; ++i) {\n                source = sources[i];\n                if (!helpers.isObject(source)) {\n                    continue;\n                }\n                keys = Object.keys(source);\n                for (k = 0, klen = keys.length; k < klen; ++k) {\n                    merge(keys[k], target, source, options);\n                }\n            }\n            return target;\n        },\n        mergeIf: function (target, source) {\n            return helpers.merge(target, source, { merger: helpers._mergerIf });\n        },\n        extend: function (target) {\n            var setFn = function (value, key) {\n                target[key] = value;\n            };\n            for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n                helpers.each(arguments[i], setFn);\n            }\n            return target;\n        },\n        inherits: function (extensions) {\n            var me = this;\n            var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n                return me.apply(this, arguments);\n            };\n            var Surrogate = function () {\n                this.constructor = ChartElement;\n            };\n            Surrogate.prototype = me.prototype;\n            ChartElement.prototype = new Surrogate();\n            ChartElement.extend = helpers.inherits;\n            if (extensions) {\n                helpers.extend(ChartElement.prototype, extensions);\n            }\n            ChartElement.__super__ = me.prototype;\n            return ChartElement;\n        }\n    };\n    module.exports = helpers;\n    helpers.callCallback = helpers.callback;\n    helpers.indexOf = function (array, item, fromIndex) {\n        return Array.prototype.indexOf.call(array, item, fromIndex);\n    };\n    helpers.getValueOrDefault = helpers.valueOrDefault;\n    helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/helpers/helpers.easing',['./helpers.core'], function (__module__0) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var helpers = __module__0;\n    var effects = {\n        linear: function (t) {\n            return t;\n        },\n        easeInQuad: function (t) {\n            return t * t;\n        },\n        easeOutQuad: function (t) {\n            return -t * (t - 2);\n        },\n        easeInOutQuad: function (t) {\n            if ((t /= 0.5) < 1) {\n                return 0.5 * t * t;\n            }\n            return -0.5 * (--t * (t - 2) - 1);\n        },\n        easeInCubic: function (t) {\n            return t * t * t;\n        },\n        easeOutCubic: function (t) {\n            return (t = t - 1) * t * t + 1;\n        },\n        easeInOutCubic: function (t) {\n            if ((t /= 0.5) < 1) {\n                return 0.5 * t * t * t;\n            }\n            return 0.5 * ((t -= 2) * t * t + 2);\n        },\n        easeInQuart: function (t) {\n            return t * t * t * t;\n        },\n        easeOutQuart: function (t) {\n            return -((t = t - 1) * t * t * t - 1);\n        },\n        easeInOutQuart: function (t) {\n            if ((t /= 0.5) < 1) {\n                return 0.5 * t * t * t * t;\n            }\n            return -0.5 * ((t -= 2) * t * t * t - 2);\n        },\n        easeInQuint: function (t) {\n            return t * t * t * t * t;\n        },\n        easeOutQuint: function (t) {\n            return (t = t - 1) * t * t * t * t + 1;\n        },\n        easeInOutQuint: function (t) {\n            if ((t /= 0.5) < 1) {\n                return 0.5 * t * t * t * t * t;\n            }\n            return 0.5 * ((t -= 2) * t * t * t * t + 2);\n        },\n        easeInSine: function (t) {\n            return -Math.cos(t * (Math.PI / 2)) + 1;\n        },\n        easeOutSine: function (t) {\n            return Math.sin(t * (Math.PI / 2));\n        },\n        easeInOutSine: function (t) {\n            return -0.5 * (Math.cos(Math.PI * t) - 1);\n        },\n        easeInExpo: function (t) {\n            return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n        },\n        easeOutExpo: function (t) {\n            return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n        },\n        easeInOutExpo: function (t) {\n            if (t === 0) {\n                return 0;\n            }\n            if (t === 1) {\n                return 1;\n            }\n            if ((t /= 0.5) < 1) {\n                return 0.5 * Math.pow(2, 10 * (t - 1));\n            }\n            return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n        },\n        easeInCirc: function (t) {\n            if (t >= 1) {\n                return t;\n            }\n            return -(Math.sqrt(1 - t * t) - 1);\n        },\n        easeOutCirc: function (t) {\n            return Math.sqrt(1 - (t = t - 1) * t);\n        },\n        easeInOutCirc: function (t) {\n            if ((t /= 0.5) < 1) {\n                return -0.5 * (Math.sqrt(1 - t * t) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n        },\n        easeInElastic: function (t) {\n            var s = 1.70158;\n            var p = 0;\n            var a = 1;\n            if (t === 0) {\n                return 0;\n            }\n            if (t === 1) {\n                return 1;\n            }\n            if (!p) {\n                p = 0.3;\n            }\n            if (a < 1) {\n                a = 1;\n                s = p / 4;\n            } else {\n                s = p / (2 * Math.PI) * Math.asin(1 / a);\n            }\n            return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n        },\n        easeOutElastic: function (t) {\n            var s = 1.70158;\n            var p = 0;\n            var a = 1;\n            if (t === 0) {\n                return 0;\n            }\n            if (t === 1) {\n                return 1;\n            }\n            if (!p) {\n                p = 0.3;\n            }\n            if (a < 1) {\n                a = 1;\n                s = p / 4;\n            } else {\n                s = p / (2 * Math.PI) * Math.asin(1 / a);\n            }\n            return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n        },\n        easeInOutElastic: function (t) {\n            var s = 1.70158;\n            var p = 0;\n            var a = 1;\n            if (t === 0) {\n                return 0;\n            }\n            if ((t /= 0.5) === 2) {\n                return 1;\n            }\n            if (!p) {\n                p = 0.45;\n            }\n            if (a < 1) {\n                a = 1;\n                s = p / 4;\n            } else {\n                s = p / (2 * Math.PI) * Math.asin(1 / a);\n            }\n            if (t < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n        },\n        easeInBack: function (t) {\n            var s = 1.70158;\n            return t * t * ((s + 1) * t - s);\n        },\n        easeOutBack: function (t) {\n            var s = 1.70158;\n            return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n        },\n        easeInOutBack: function (t) {\n            var s = 1.70158;\n            if ((t /= 0.5) < 1) {\n                return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n            }\n            return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n        },\n        easeInBounce: function (t) {\n            return 1 - effects.easeOutBounce(1 - t);\n        },\n        easeOutBounce: function (t) {\n            if (t < 1 / 2.75) {\n                return 7.5625 * t * t;\n            }\n            if (t < 2 / 2.75) {\n                return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n            }\n            if (t < 2.5 / 2.75) {\n                return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n            }\n            return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n        },\n        easeInOutBounce: function (t) {\n            if (t < 0.5) {\n                return effects.easeInBounce(t * 2) * 0.5;\n            }\n            return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n    module.exports = { effects: effects };\n    helpers.easingEffects = effects;\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/helpers/helpers.canvas',['./helpers.core'], function (__module__0) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var helpers = __module__0;\n    var PI = Math.PI;\n    var RAD_PER_DEG = PI / 180;\n    var DOUBLE_PI = PI * 2;\n    var HALF_PI = PI / 2;\n    var QUARTER_PI = PI / 4;\n    var TWO_THIRDS_PI = PI * 2 / 3;\n    var exports = {\n        clear: function (chart) {\n            chart.ctx.clearRect(0, 0, chart.width, chart.height);\n        },\n        roundedRect: function (ctx, x, y, width, height, radius) {\n            if (radius) {\n                var r = Math.min(radius, height / 2, width / 2);\n                var left = x + r;\n                var top = y + r;\n                var right = x + width - r;\n                var bottom = y + height - r;\n                ctx.moveTo(x, top);\n                if (left < right && top < bottom) {\n                    ctx.arc(left, top, r, -PI, -HALF_PI);\n                    ctx.arc(right, top, r, -HALF_PI, 0);\n                    ctx.arc(right, bottom, r, 0, HALF_PI);\n                    ctx.arc(left, bottom, r, HALF_PI, PI);\n                } else if (left < right) {\n                    ctx.moveTo(left, y);\n                    ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n                    ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n                } else if (top < bottom) {\n                    ctx.arc(left, top, r, -PI, 0);\n                    ctx.arc(left, bottom, r, 0, PI);\n                } else {\n                    ctx.arc(left, top, r, -PI, PI);\n                }\n                ctx.closePath();\n                ctx.moveTo(x, y);\n            } else {\n                ctx.rect(x, y, width, height);\n            }\n        },\n        drawPoint: function (ctx, style, radius, x, y, rotation) {\n            var type, xOffset, yOffset, size, cornerRadius;\n            var rad = (rotation || 0) * RAD_PER_DEG;\n            if (style && typeof style === 'object') {\n                type = style.toString();\n                if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n                    ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n                    return;\n                }\n            }\n            if (isNaN(radius) || radius <= 0) {\n                return;\n            }\n            ctx.beginPath();\n            switch (style) {\n            default:\n                ctx.arc(x, y, radius, 0, DOUBLE_PI);\n                ctx.closePath();\n                break;\n            case 'triangle':\n                ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n                rad += TWO_THIRDS_PI;\n                ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n                rad += TWO_THIRDS_PI;\n                ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n                ctx.closePath();\n                break;\n            case 'rectRounded':\n                cornerRadius = radius * 0.516;\n                size = radius - cornerRadius;\n                xOffset = Math.cos(rad + QUARTER_PI) * size;\n                yOffset = Math.sin(rad + QUARTER_PI) * size;\n                ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n                ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n                ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n                ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n                ctx.closePath();\n                break;\n            case 'rect':\n                if (!rotation) {\n                    size = Math.SQRT1_2 * radius;\n                    ctx.rect(x - size, y - size, 2 * size, 2 * size);\n                    break;\n                }\n                rad += QUARTER_PI;\n            case 'rectRot':\n                xOffset = Math.cos(rad) * radius;\n                yOffset = Math.sin(rad) * radius;\n                ctx.moveTo(x - xOffset, y - yOffset);\n                ctx.lineTo(x + yOffset, y - xOffset);\n                ctx.lineTo(x + xOffset, y + yOffset);\n                ctx.lineTo(x - yOffset, y + xOffset);\n                ctx.closePath();\n                break;\n            case 'crossRot':\n                rad += QUARTER_PI;\n            case 'cross':\n                xOffset = Math.cos(rad) * radius;\n                yOffset = Math.sin(rad) * radius;\n                ctx.moveTo(x - xOffset, y - yOffset);\n                ctx.lineTo(x + xOffset, y + yOffset);\n                ctx.moveTo(x + yOffset, y - xOffset);\n                ctx.lineTo(x - yOffset, y + xOffset);\n                break;\n            case 'star':\n                xOffset = Math.cos(rad) * radius;\n                yOffset = Math.sin(rad) * radius;\n                ctx.moveTo(x - xOffset, y - yOffset);\n                ctx.lineTo(x + xOffset, y + yOffset);\n                ctx.moveTo(x + yOffset, y - xOffset);\n                ctx.lineTo(x - yOffset, y + xOffset);\n                rad += QUARTER_PI;\n                xOffset = Math.cos(rad) * radius;\n                yOffset = Math.sin(rad) * radius;\n                ctx.moveTo(x - xOffset, y - yOffset);\n                ctx.lineTo(x + xOffset, y + yOffset);\n                ctx.moveTo(x + yOffset, y - xOffset);\n                ctx.lineTo(x - yOffset, y + xOffset);\n                break;\n            case 'line':\n                xOffset = Math.cos(rad) * radius;\n                yOffset = Math.sin(rad) * radius;\n                ctx.moveTo(x - xOffset, y - yOffset);\n                ctx.lineTo(x + xOffset, y + yOffset);\n                break;\n            case 'dash':\n                ctx.moveTo(x, y);\n                ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n                break;\n            }\n            ctx.fill();\n            ctx.stroke();\n        },\n        _isPointInArea: function (point, area) {\n            var epsilon = 0.000001;\n            return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n        },\n        clipArea: function (ctx, area) {\n            ctx.save();\n            ctx.beginPath();\n            ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n            ctx.clip();\n        },\n        unclipArea: function (ctx) {\n            ctx.restore();\n        },\n        lineTo: function (ctx, previous, target, flip) {\n            var stepped = target.steppedLine;\n            if (stepped) {\n                if (stepped === 'middle') {\n                    var midpoint = (previous.x + target.x) / 2;\n                    ctx.lineTo(midpoint, flip ? target.y : previous.y);\n                    ctx.lineTo(midpoint, flip ? previous.y : target.y);\n                } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n                    ctx.lineTo(previous.x, target.y);\n                } else {\n                    ctx.lineTo(target.x, previous.y);\n                }\n                ctx.lineTo(target.x, target.y);\n                return;\n            }\n            if (!target.tension) {\n                ctx.lineTo(target.x, target.y);\n                return;\n            }\n            ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n        }\n    };\n    module.exports = exports;\n    helpers.clear = exports.clear;\n    helpers.drawRoundedRectangle = function (ctx) {\n        ctx.beginPath();\n        exports.roundedRect.apply(exports, arguments);\n    };\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/core/core.defaults',['../helpers/helpers.core'], function (__module__0) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var helpers = __module__0;\n    var defaults = {\n        _set: function (scope, values) {\n            return helpers.merge(this[scope] || (this[scope] = {}), values);\n        }\n    };\n    defaults._set('global', {\n        defaultColor: 'rgba(0,0,0,0.1)',\n        defaultFontColor: '#666',\n        defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n        defaultFontSize: 12,\n        defaultFontStyle: 'normal',\n        defaultLineHeight: 1.2,\n        showLines: true\n    });\n    module.exports = defaults;\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/helpers/helpers.options',[\n    '../core/core.defaults',\n    './helpers.core'\n], function (__module__0, __module__1) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var defaults = __module__0;\n    var helpers = __module__1;\n    var valueOrDefault = helpers.valueOrDefault;\n    function toFontString(font) {\n        if (!font || helpers.isNullOrUndef(font.size) || helpers.isNullOrUndef(font.family)) {\n            return null;\n        }\n        return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n    }\n    module.exports = {\n        toLineHeight: function (value, size) {\n            var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n            if (!matches || matches[1] === 'normal') {\n                return size * 1.2;\n            }\n            value = +matches[2];\n            switch (matches[3]) {\n            case 'px':\n                return value;\n            case '%':\n                value /= 100;\n                break;\n            default:\n                break;\n            }\n            return size * value;\n        },\n        toPadding: function (value) {\n            var t, r, b, l;\n            if (helpers.isObject(value)) {\n                t = +value.top || 0;\n                r = +value.right || 0;\n                b = +value.bottom || 0;\n                l = +value.left || 0;\n            } else {\n                t = r = b = l = +value || 0;\n            }\n            return {\n                top: t,\n                right: r,\n                bottom: b,\n                left: l,\n                height: t + b,\n                width: l + r\n            };\n        },\n        _parseFont: function (options) {\n            var globalDefaults = defaults.global;\n            var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n            var font = {\n                family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n                lineHeight: helpers.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n                size: size,\n                style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n                weight: null,\n                string: ''\n            };\n            font.string = toFontString(font);\n            return font;\n        },\n        resolve: function (inputs, context, index) {\n            var i, ilen, value;\n            for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n                value = inputs[i];\n                if (value === undefined) {\n                    continue;\n                }\n                if (context !== undefined && typeof value === 'function') {\n                    value = value(context);\n                }\n                if (index !== undefined && helpers.isArray(value)) {\n                    value = value[index];\n                }\n                if (value !== undefined) {\n                    return value;\n                }\n            }\n        }\n    };\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/helpers/index',[\n    './helpers.core',\n    './helpers.easing',\n    './helpers.canvas',\n    './helpers.options'\n], function (__module__0, __module__1, __module__2, __module__3) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    module.exports = __module__0;\n    module.exports.easing = __module__1;\n    module.exports.canvas = __module__2;\n    module.exports.options = __module__3;\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/core/core.element',[\n    '../../packages/chartjs-color',\n    '../helpers/index'\n], function (__module__0, __module__1) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var color = __module__0;\n    var helpers = __module__1;\n    function interpolate(start, view, model, ease) {\n        var keys = Object.keys(model);\n        var i, ilen, key, actual, origin, target, type, c0, c1;\n        for (i = 0, ilen = keys.length; i < ilen; ++i) {\n            key = keys[i];\n            target = model[key];\n            if (!view.hasOwnProperty(key)) {\n                view[key] = target;\n            }\n            actual = view[key];\n            if (actual === target || key[0] === '_') {\n                continue;\n            }\n            if (!start.hasOwnProperty(key)) {\n                start[key] = actual;\n            }\n            origin = start[key];\n            type = typeof target;\n            if (type === typeof origin) {\n                if (type === 'string') {\n                    c0 = color(origin);\n                    if (c0.valid) {\n                        c1 = color(target);\n                        if (c1.valid) {\n                            view[key] = c1.mix(c0, ease).rgbString();\n                            continue;\n                        }\n                    }\n                } else if (helpers.isFinite(origin) && helpers.isFinite(target)) {\n                    view[key] = origin + (target - origin) * ease;\n                    continue;\n                }\n            }\n            view[key] = target;\n        }\n    }\n    var Element = function (configuration) {\n        helpers.extend(this, configuration);\n        this.initialize.apply(this, arguments);\n    };\n    helpers.extend(Element.prototype, {\n        initialize: function () {\n            this.hidden = false;\n        },\n        pivot: function () {\n            var me = this;\n            if (!me._view) {\n                me._view = helpers.clone(me._model);\n            }\n            me._start = {};\n            return me;\n        },\n        transition: function (ease) {\n            var me = this;\n            var model = me._model;\n            var start = me._start;\n            var view = me._view;\n            if (!model || ease === 1) {\n                me._view = model;\n                me._start = null;\n                return me;\n            }\n            if (!view) {\n                view = me._view = {};\n            }\n            if (!start) {\n                start = me._start = {};\n            }\n            interpolate(start, view, model, ease);\n            return me;\n        },\n        tooltipPosition: function () {\n            return {\n                x: this._model.x,\n                y: this._model.y\n            };\n        },\n        hasValue: function () {\n            return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n        }\n    });\n    Element.extend = helpers.inherits;\n    module.exports = Element;\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/core/core.animation',['./core.element'], function (__module__0) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var Element = __module__0;\n    var exports = Element.extend({\n        chart: null,\n        currentStep: 0,\n        numSteps: 60,\n        easing: '',\n        render: null,\n        onAnimationProgress: null,\n        onAnimationComplete: null\n    });\n    module.exports = exports;\n    Object.defineProperty(exports.prototype, 'animationObject', {\n        get: function () {\n            return this;\n        }\n    });\n    Object.defineProperty(exports.prototype, 'chartInstance', {\n        get: function () {\n            return this.chart;\n        },\n        set: function (value) {\n            this.chart = value;\n        }\n    });\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/core/core.animations',[\n    './core.defaults',\n    '../helpers/index'\n], function (__module__0, __module__1) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var defaults = __module__0;\n    var helpers = __module__1;\n    defaults._set('global', {\n        animation: {\n            duration: 1000,\n            easing: 'easeOutQuart',\n            onProgress: helpers.noop,\n            onComplete: helpers.noop\n        }\n    });\n    module.exports = {\n        animations: [],\n        request: null,\n        addAnimation: function (chart, animation, duration, lazy) {\n            var animations = this.animations;\n            var i, ilen;\n            animation.chart = chart;\n            animation.startTime = Date.now();\n            animation.duration = duration;\n            if (!lazy) {\n                chart.animating = true;\n            }\n            for (i = 0, ilen = animations.length; i < ilen; ++i) {\n                if (animations[i].chart === chart) {\n                    animations[i] = animation;\n                    return;\n                }\n            }\n            animations.push(animation);\n            if (animations.length === 1) {\n                this.requestAnimationFrame();\n            }\n        },\n        cancelAnimation: function (chart) {\n            var index = helpers.findIndex(this.animations, function (animation) {\n                return animation.chart === chart;\n            });\n            if (index !== -1) {\n                this.animations.splice(index, 1);\n                chart.animating = false;\n            }\n        },\n        requestAnimationFrame: function () {\n            var me = this;\n            if (me.request === null) {\n                me.request = helpers.requestAnimFrame.call(window, function () {\n                    me.request = null;\n                    me.startDigest();\n                });\n            }\n        },\n        startDigest: function () {\n            var me = this;\n            me.advance();\n            if (me.animations.length > 0) {\n                me.requestAnimationFrame();\n            }\n        },\n        advance: function () {\n            var animations = this.animations;\n            var animation, chart, numSteps, nextStep;\n            var i = 0;\n            while (i < animations.length) {\n                animation = animations[i];\n                chart = animation.chart;\n                numSteps = animation.numSteps;\n                nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n                animation.currentStep = Math.min(nextStep, numSteps);\n                helpers.callback(animation.render, [\n                    chart,\n                    animation\n                ], chart);\n                helpers.callback(animation.onAnimationProgress, [animation], chart);\n                if (animation.currentStep >= numSteps) {\n                    helpers.callback(animation.onAnimationComplete, [animation], chart);\n                    chart.animating = false;\n                    animations.splice(i, 1);\n                } else {\n                    ++i;\n                }\n            }\n        }\n    };\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/core/core.datasetController',['../helpers/index'], function (__module__0) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var helpers = __module__0;\n    var resolve = helpers.options.resolve;\n    var arrayEvents = [\n        'push',\n        'pop',\n        'shift',\n        'splice',\n        'unshift'\n    ];\n    function listenArrayEvents(array, listener) {\n        if (array._chartjs) {\n            array._chartjs.listeners.push(listener);\n            return;\n        }\n        Object.defineProperty(array, '_chartjs', {\n            configurable: true,\n            enumerable: false,\n            value: { listeners: [listener] }\n        });\n        arrayEvents.forEach(function (key) {\n            var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n            var base = array[key];\n            Object.defineProperty(array, key, {\n                configurable: true,\n                enumerable: false,\n                value: function () {\n                    var args = Array.prototype.slice.call(arguments);\n                    var res = base.apply(this, args);\n                    helpers.each(array._chartjs.listeners, function (object) {\n                        if (typeof object[method] === 'function') {\n                            object[method].apply(object, args);\n                        }\n                    });\n                    return res;\n                }\n            });\n        });\n    }\n    function unlistenArrayEvents(array, listener) {\n        var stub = array._chartjs;\n        if (!stub) {\n            return;\n        }\n        var listeners = stub.listeners;\n        var index = listeners.indexOf(listener);\n        if (index !== -1) {\n            listeners.splice(index, 1);\n        }\n        if (listeners.length > 0) {\n            return;\n        }\n        arrayEvents.forEach(function (key) {\n            delete array[key];\n        });\n        delete array._chartjs;\n    }\n    var DatasetController = function (chart, datasetIndex) {\n        this.initialize(chart, datasetIndex);\n    };\n    helpers.extend(DatasetController.prototype, {\n        datasetElementType: null,\n        dataElementType: null,\n        initialize: function (chart, datasetIndex) {\n            var me = this;\n            me.chart = chart;\n            me.index = datasetIndex;\n            me.linkScales();\n            me.addElements();\n        },\n        updateIndex: function (datasetIndex) {\n            this.index = datasetIndex;\n        },\n        linkScales: function () {\n            var me = this;\n            var meta = me.getMeta();\n            var dataset = me.getDataset();\n            if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n                meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n            }\n            if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n                meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n            }\n        },\n        getDataset: function () {\n            return this.chart.data.datasets[this.index];\n        },\n        getMeta: function () {\n            return this.chart.getDatasetMeta(this.index);\n        },\n        getScaleForId: function (scaleID) {\n            return this.chart.scales[scaleID];\n        },\n        _getValueScaleId: function () {\n            return this.getMeta().yAxisID;\n        },\n        _getIndexScaleId: function () {\n            return this.getMeta().xAxisID;\n        },\n        _getValueScale: function () {\n            return this.getScaleForId(this._getValueScaleId());\n        },\n        _getIndexScale: function () {\n            return this.getScaleForId(this._getIndexScaleId());\n        },\n        reset: function () {\n            this.update(true);\n        },\n        destroy: function () {\n            if (this._data) {\n                unlistenArrayEvents(this._data, this);\n            }\n        },\n        createMetaDataset: function () {\n            var me = this;\n            var type = me.datasetElementType;\n            return type && new type({\n                _chart: me.chart,\n                _datasetIndex: me.index\n            });\n        },\n        createMetaData: function (index) {\n            var me = this;\n            var type = me.dataElementType;\n            return type && new type({\n                _chart: me.chart,\n                _datasetIndex: me.index,\n                _index: index\n            });\n        },\n        addElements: function () {\n            var me = this;\n            var meta = me.getMeta();\n            var data = me.getDataset().data || [];\n            var metaData = meta.data;\n            var i, ilen;\n            for (i = 0, ilen = data.length; i < ilen; ++i) {\n                metaData[i] = metaData[i] || me.createMetaData(i);\n            }\n            meta.dataset = meta.dataset || me.createMetaDataset();\n        },\n        addElementAndReset: function (index) {\n            var element = this.createMetaData(index);\n            this.getMeta().data.splice(index, 0, element);\n            this.updateElement(element, index, true);\n        },\n        buildOrUpdateElements: function () {\n            var me = this;\n            var dataset = me.getDataset();\n            var data = dataset.data || (dataset.data = []);\n            if (me._data !== data) {\n                if (me._data) {\n                    unlistenArrayEvents(me._data, me);\n                }\n                if (data && Object.isExtensible(data)) {\n                    listenArrayEvents(data, me);\n                }\n                me._data = data;\n            }\n            me.resyncElements();\n        },\n        update: helpers.noop,\n        transition: function (easingValue) {\n            var meta = this.getMeta();\n            var elements = meta.data || [];\n            var ilen = elements.length;\n            var i = 0;\n            for (; i < ilen; ++i) {\n                elements[i].transition(easingValue);\n            }\n            if (meta.dataset) {\n                meta.dataset.transition(easingValue);\n            }\n        },\n        draw: function () {\n            var meta = this.getMeta();\n            var elements = meta.data || [];\n            var ilen = elements.length;\n            var i = 0;\n            if (meta.dataset) {\n                meta.dataset.draw();\n            }\n            for (; i < ilen; ++i) {\n                elements[i].draw();\n            }\n        },\n        removeHoverStyle: function (element) {\n            helpers.merge(element._model, element.$previousStyle || {});\n            delete element.$previousStyle;\n        },\n        setHoverStyle: function (element) {\n            var dataset = this.chart.data.datasets[element._datasetIndex];\n            var index = element._index;\n            var custom = element.custom || {};\n            var model = element._model;\n            var getHoverColor = helpers.getHoverColor;\n            element.$previousStyle = {\n                backgroundColor: model.backgroundColor,\n                borderColor: model.borderColor,\n                borderWidth: model.borderWidth\n            };\n            model.backgroundColor = resolve([\n                custom.hoverBackgroundColor,\n                dataset.hoverBackgroundColor,\n                getHoverColor(model.backgroundColor)\n            ], undefined, index);\n            model.borderColor = resolve([\n                custom.hoverBorderColor,\n                dataset.hoverBorderColor,\n                getHoverColor(model.borderColor)\n            ], undefined, index);\n            model.borderWidth = resolve([\n                custom.hoverBorderWidth,\n                dataset.hoverBorderWidth,\n                model.borderWidth\n            ], undefined, index);\n        },\n        resyncElements: function () {\n            var me = this;\n            var meta = me.getMeta();\n            var data = me.getDataset().data;\n            var numMeta = meta.data.length;\n            var numData = data.length;\n            if (numData < numMeta) {\n                meta.data.splice(numData, numMeta - numData);\n            } else if (numData > numMeta) {\n                me.insertElements(numMeta, numData - numMeta);\n            }\n        },\n        insertElements: function (start, count) {\n            for (var i = 0; i < count; ++i) {\n                this.addElementAndReset(start + i);\n            }\n        },\n        onDataPush: function () {\n            var count = arguments.length;\n            this.insertElements(this.getDataset().data.length - count, count);\n        },\n        onDataPop: function () {\n            this.getMeta().data.pop();\n        },\n        onDataShift: function () {\n            this.getMeta().data.shift();\n        },\n        onDataSplice: function (start, count) {\n            this.getMeta().data.splice(start, count);\n            this.insertElements(start, arguments.length - 2);\n        },\n        onDataUnshift: function () {\n            this.insertElements(0, arguments.length);\n        }\n    });\n    DatasetController.extend = helpers.inherits;\n    module.exports = DatasetController;\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/elements/element.arc',[\n    '../core/core.defaults',\n    '../core/core.element',\n    '../helpers/index'\n], function (__module__0, __module__1, __module__2) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var defaults = __module__0;\n    var Element = __module__1;\n    var helpers = __module__2;\n    defaults._set('global', {\n        elements: {\n            arc: {\n                backgroundColor: defaults.global.defaultColor,\n                borderColor: '#fff',\n                borderWidth: 2,\n                borderAlign: 'center'\n            }\n        }\n    });\n    module.exports = Element.extend({\n        inLabelRange: function (mouseX) {\n            var vm = this._view;\n            if (vm) {\n                return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n            }\n            return false;\n        },\n        inRange: function (chartX, chartY) {\n            var vm = this._view;\n            if (vm) {\n                var pointRelativePosition = helpers.getAngleFromPoint(vm, {\n                    x: chartX,\n                    y: chartY\n                });\n                var angle = pointRelativePosition.angle;\n                var distance = pointRelativePosition.distance;\n                var startAngle = vm.startAngle;\n                var endAngle = vm.endAngle;\n                while (endAngle < startAngle) {\n                    endAngle += 2 * Math.PI;\n                }\n                while (angle > endAngle) {\n                    angle -= 2 * Math.PI;\n                }\n                while (angle < startAngle) {\n                    angle += 2 * Math.PI;\n                }\n                var betweenAngles = angle >= startAngle && angle <= endAngle;\n                var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n                return betweenAngles && withinRadius;\n            }\n            return false;\n        },\n        getCenterPoint: function () {\n            var vm = this._view;\n            var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n            var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n            return {\n                x: vm.x + Math.cos(halfAngle) * halfRadius,\n                y: vm.y + Math.sin(halfAngle) * halfRadius\n            };\n        },\n        getArea: function () {\n            var vm = this._view;\n            return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n        },\n        tooltipPosition: function () {\n            var vm = this._view;\n            var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n            var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n            return {\n                x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n                y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n            };\n        },\n        draw: function () {\n            var ctx = this._chart.ctx;\n            var vm = this._view;\n            var sA = vm.startAngle;\n            var eA = vm.endAngle;\n            var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n            var angleMargin;\n            ctx.save();\n            ctx.beginPath();\n            ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n            ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n            ctx.closePath();\n            ctx.fillStyle = vm.backgroundColor;\n            ctx.fill();\n            if (vm.borderWidth) {\n                if (vm.borderAlign === 'inner') {\n                    ctx.beginPath();\n                    angleMargin = pixelMargin / vm.outerRadius;\n                    ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n                    if (vm.innerRadius > pixelMargin) {\n                        angleMargin = pixelMargin / vm.innerRadius;\n                        ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n                    } else {\n                        ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n                    }\n                    ctx.closePath();\n                    ctx.clip();\n                    ctx.beginPath();\n                    ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n                    ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n                    ctx.closePath();\n                    ctx.lineWidth = vm.borderWidth * 2;\n                    ctx.lineJoin = 'round';\n                } else {\n                    ctx.lineWidth = vm.borderWidth;\n                    ctx.lineJoin = 'bevel';\n                }\n                ctx.strokeStyle = vm.borderColor;\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    });\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/elements/element.line',[\n    '../core/core.defaults',\n    '../core/core.element',\n    '../helpers/index'\n], function (__module__0, __module__1, __module__2) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var defaults = __module__0;\n    var Element = __module__1;\n    var helpers = __module__2;\n    var valueOrDefault = helpers.valueOrDefault;\n    var defaultColor = defaults.global.defaultColor;\n    defaults._set('global', {\n        elements: {\n            line: {\n                tension: 0.4,\n                backgroundColor: defaultColor,\n                borderWidth: 3,\n                borderColor: defaultColor,\n                borderCapStyle: 'butt',\n                borderDash: [],\n                borderDashOffset: 0,\n                borderJoinStyle: 'miter',\n                capBezierPoints: true,\n                fill: true\n            }\n        }\n    });\n    module.exports = Element.extend({\n        draw: function () {\n            var me = this;\n            var vm = me._view;\n            var ctx = me._chart.ctx;\n            var spanGaps = vm.spanGaps;\n            var points = me._children.slice();\n            var globalDefaults = defaults.global;\n            var globalOptionLineElements = globalDefaults.elements.line;\n            var lastDrawnIndex = -1;\n            var index, current, previous, currentVM;\n            if (me._loop && points.length) {\n                points.push(points[0]);\n            }\n            ctx.save();\n            ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n            if (ctx.setLineDash) {\n                ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n            }\n            ctx.lineDashOffset = valueOrDefault(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n            ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n            ctx.lineWidth = valueOrDefault(vm.borderWidth, globalOptionLineElements.borderWidth);\n            ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n            ctx.beginPath();\n            lastDrawnIndex = -1;\n            for (index = 0; index < points.length; ++index) {\n                current = points[index];\n                previous = helpers.previousItem(points, index);\n                currentVM = current._view;\n                if (index === 0) {\n                    if (!currentVM.skip) {\n                        ctx.moveTo(currentVM.x, currentVM.y);\n                        lastDrawnIndex = index;\n                    }\n                } else {\n                    previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n                    if (!currentVM.skip) {\n                        if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n                            ctx.moveTo(currentVM.x, currentVM.y);\n                        } else {\n                            helpers.canvas.lineTo(ctx, previous._view, current._view);\n                        }\n                        lastDrawnIndex = index;\n                    }\n                }\n            }\n            ctx.stroke();\n            ctx.restore();\n        }\n    });\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/elements/element.point',[\n    '../core/core.defaults',\n    '../core/core.element',\n    '../helpers/index'\n], function (__module__0, __module__1, __module__2) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var defaults = __module__0;\n    var Element = __module__1;\n    var helpers = __module__2;\n    var valueOrDefault = helpers.valueOrDefault;\n    var defaultColor = defaults.global.defaultColor;\n    defaults._set('global', {\n        elements: {\n            point: {\n                radius: 3,\n                pointStyle: 'circle',\n                backgroundColor: defaultColor,\n                borderColor: defaultColor,\n                borderWidth: 1,\n                hitRadius: 1,\n                hoverRadius: 4,\n                hoverBorderWidth: 1\n            }\n        }\n    });\n    function xRange(mouseX) {\n        var vm = this._view;\n        return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n    }\n    function yRange(mouseY) {\n        var vm = this._view;\n        return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n    }\n    module.exports = Element.extend({\n        inRange: function (mouseX, mouseY) {\n            var vm = this._view;\n            return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n        },\n        inLabelRange: xRange,\n        inXRange: xRange,\n        inYRange: yRange,\n        getCenterPoint: function () {\n            var vm = this._view;\n            return {\n                x: vm.x,\n                y: vm.y\n            };\n        },\n        getArea: function () {\n            return Math.PI * Math.pow(this._view.radius, 2);\n        },\n        tooltipPosition: function () {\n            var vm = this._view;\n            return {\n                x: vm.x,\n                y: vm.y,\n                padding: vm.radius + vm.borderWidth\n            };\n        },\n        draw: function (chartArea) {\n            var vm = this._view;\n            var ctx = this._chart.ctx;\n            var pointStyle = vm.pointStyle;\n            var rotation = vm.rotation;\n            var radius = vm.radius;\n            var x = vm.x;\n            var y = vm.y;\n            var globalDefaults = defaults.global;\n            var defaultColor = globalDefaults.defaultColor;\n            if (vm.skip) {\n                return;\n            }\n            if (chartArea === undefined || helpers.canvas._isPointInArea(vm, chartArea)) {\n                ctx.strokeStyle = vm.borderColor || defaultColor;\n                ctx.lineWidth = valueOrDefault(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n                ctx.fillStyle = vm.backgroundColor || defaultColor;\n                helpers.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n            }\n        }\n    });\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/elements/element.rectangle',[\n    '../core/core.defaults',\n    '../core/core.element',\n    '../helpers/index'\n], function (__module__0, __module__1, __module__2) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var defaults = __module__0;\n    var Element = __module__1;\n    var helpers = __module__2;\n    var defaultColor = defaults.global.defaultColor;\n    defaults._set('global', {\n        elements: {\n            rectangle: {\n                backgroundColor: defaultColor,\n                borderColor: defaultColor,\n                borderSkipped: 'bottom',\n                borderWidth: 0\n            }\n        }\n    });\n    function isVertical(vm) {\n        return vm && vm.width !== undefined;\n    }\n    function getBarBounds(vm) {\n        var x1, x2, y1, y2, half;\n        if (isVertical(vm)) {\n            half = vm.width / 2;\n            x1 = vm.x - half;\n            x2 = vm.x + half;\n            y1 = Math.min(vm.y, vm.base);\n            y2 = Math.max(vm.y, vm.base);\n        } else {\n            half = vm.height / 2;\n            x1 = Math.min(vm.x, vm.base);\n            x2 = Math.max(vm.x, vm.base);\n            y1 = vm.y - half;\n            y2 = vm.y + half;\n        }\n        return {\n            left: x1,\n            top: y1,\n            right: x2,\n            bottom: y2\n        };\n    }\n    function swap(orig, v1, v2) {\n        return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n    }\n    function parseBorderSkipped(vm) {\n        var edge = vm.borderSkipped;\n        var res = {};\n        if (!edge) {\n            return res;\n        }\n        if (vm.horizontal) {\n            if (vm.base > vm.x) {\n                edge = swap(edge, 'left', 'right');\n            }\n        } else if (vm.base < vm.y) {\n            edge = swap(edge, 'bottom', 'top');\n        }\n        res[edge] = true;\n        return res;\n    }\n    function parseBorderWidth(vm, maxW, maxH) {\n        var value = vm.borderWidth;\n        var skip = parseBorderSkipped(vm);\n        var t, r, b, l;\n        if (helpers.isObject(value)) {\n            t = +value.top || 0;\n            r = +value.right || 0;\n            b = +value.bottom || 0;\n            l = +value.left || 0;\n        } else {\n            t = r = b = l = +value || 0;\n        }\n        return {\n            t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n            r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n            b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n            l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n        };\n    }\n    function boundingRects(vm) {\n        var bounds = getBarBounds(vm);\n        var width = bounds.right - bounds.left;\n        var height = bounds.bottom - bounds.top;\n        var border = parseBorderWidth(vm, width / 2, height / 2);\n        return {\n            outer: {\n                x: bounds.left,\n                y: bounds.top,\n                w: width,\n                h: height\n            },\n            inner: {\n                x: bounds.left + border.l,\n                y: bounds.top + border.t,\n                w: width - border.l - border.r,\n                h: height - border.t - border.b\n            }\n        };\n    }\n    function inRange(vm, x, y) {\n        var skipX = x === null;\n        var skipY = y === null;\n        var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n        return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n    }\n    module.exports = Element.extend({\n        draw: function () {\n            var ctx = this._chart.ctx;\n            var vm = this._view;\n            var rects = boundingRects(vm);\n            var outer = rects.outer;\n            var inner = rects.inner;\n            ctx.fillStyle = vm.backgroundColor;\n            ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n            if (outer.w === inner.w && outer.h === inner.h) {\n                return;\n            }\n            ctx.save();\n            ctx.beginPath();\n            ctx.rect(outer.x, outer.y, outer.w, outer.h);\n            ctx.clip();\n            ctx.fillStyle = vm.borderColor;\n            ctx.rect(inner.x, inner.y, inner.w, inner.h);\n            ctx.fill('evenodd');\n            ctx.restore();\n        },\n        height: function () {\n            var vm = this._view;\n            return vm.base - vm.y;\n        },\n        inRange: function (mouseX, mouseY) {\n            return inRange(this._view, mouseX, mouseY);\n        },\n        inLabelRange: function (mouseX, mouseY) {\n            var vm = this._view;\n            return isVertical(vm) ? inRange(vm, mouseX, null) : inRange(vm, null, mouseY);\n        },\n        inXRange: function (mouseX) {\n            return inRange(this._view, mouseX, null);\n        },\n        inYRange: function (mouseY) {\n            return inRange(this._view, null, mouseY);\n        },\n        getCenterPoint: function () {\n            var vm = this._view;\n            var x, y;\n            if (isVertical(vm)) {\n                x = vm.x;\n                y = (vm.y + vm.base) / 2;\n            } else {\n                x = (vm.x + vm.base) / 2;\n                y = vm.y;\n            }\n            return {\n                x: x,\n                y: y\n            };\n        },\n        getArea: function () {\n            var vm = this._view;\n            return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n        },\n        tooltipPosition: function () {\n            var vm = this._view;\n            return {\n                x: vm.x,\n                y: vm.y\n            };\n        }\n    });\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/elements/index',[\n    './element.arc',\n    './element.line',\n    './element.point',\n    './element.rectangle'\n], function (__module__0, __module__1, __module__2, __module__3) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    module.exports = {};\n    module.exports.Arc = __module__0;\n    module.exports.Line = __module__1;\n    module.exports.Point = __module__2;\n    module.exports.Rectangle = __module__3;\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/controllers/controller.bar',[\n    '../core/core.datasetController',\n    '../core/core.defaults',\n    '../elements/index',\n    '../helpers/index'\n], function (__module__0, __module__1, __module__2, __module__3) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var DatasetController = __module__0;\n    var defaults = __module__1;\n    var elements = __module__2;\n    var helpers = __module__3;\n    var resolve = helpers.options.resolve;\n    defaults._set('bar', {\n        hover: { mode: 'label' },\n        scales: {\n            xAxes: [{\n                    type: 'category',\n                    categoryPercentage: 0.8,\n                    barPercentage: 0.9,\n                    offset: true,\n                    gridLines: { offsetGridLines: true }\n                }],\n            yAxes: [{ type: 'linear' }]\n        }\n    });\n    function computeMinSampleSize(scale, pixels) {\n        var min = scale.isHorizontal() ? scale.width : scale.height;\n        var ticks = scale.getTicks();\n        var prev, curr, i, ilen;\n        for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n            min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n        }\n        for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n            curr = scale.getPixelForTick(i);\n            min = i > 0 ? Math.min(min, curr - prev) : min;\n            prev = curr;\n        }\n        return min;\n    }\n    function computeFitCategoryTraits(index, ruler, options) {\n        var thickness = options.barThickness;\n        var count = ruler.stackCount;\n        var curr = ruler.pixels[index];\n        var size, ratio;\n        if (helpers.isNullOrUndef(thickness)) {\n            size = ruler.min * options.categoryPercentage;\n            ratio = options.barPercentage;\n        } else {\n            size = thickness * count;\n            ratio = 1;\n        }\n        return {\n            chunk: size / count,\n            ratio: ratio,\n            start: curr - size / 2\n        };\n    }\n    function computeFlexCategoryTraits(index, ruler, options) {\n        var pixels = ruler.pixels;\n        var curr = pixels[index];\n        var prev = index > 0 ? pixels[index - 1] : null;\n        var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n        var percent = options.categoryPercentage;\n        var start, size;\n        if (prev === null) {\n            prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n        }\n        if (next === null) {\n            next = curr + curr - prev;\n        }\n        start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n        size = Math.abs(next - prev) / 2 * percent;\n        return {\n            chunk: size / ruler.stackCount,\n            ratio: options.barPercentage,\n            start: start\n        };\n    }\n    module.exports = DatasetController.extend({\n        dataElementType: elements.Rectangle,\n        initialize: function () {\n            var me = this;\n            var meta;\n            DatasetController.prototype.initialize.apply(me, arguments);\n            meta = me.getMeta();\n            meta.stack = me.getDataset().stack;\n            meta.bar = true;\n        },\n        update: function (reset) {\n            var me = this;\n            var rects = me.getMeta().data;\n            var i, ilen;\n            me._ruler = me.getRuler();\n            for (i = 0, ilen = rects.length; i < ilen; ++i) {\n                me.updateElement(rects[i], i, reset);\n            }\n        },\n        updateElement: function (rectangle, index, reset) {\n            var me = this;\n            var meta = me.getMeta();\n            var dataset = me.getDataset();\n            var options = me._resolveElementOptions(rectangle, index);\n            rectangle._xScale = me.getScaleForId(meta.xAxisID);\n            rectangle._yScale = me.getScaleForId(meta.yAxisID);\n            rectangle._datasetIndex = me.index;\n            rectangle._index = index;\n            rectangle._model = {\n                backgroundColor: options.backgroundColor,\n                borderColor: options.borderColor,\n                borderSkipped: options.borderSkipped,\n                borderWidth: options.borderWidth,\n                datasetLabel: dataset.label,\n                label: me.chart.data.labels[index]\n            };\n            me._updateElementGeometry(rectangle, index, reset);\n            rectangle.pivot();\n        },\n        _updateElementGeometry: function (rectangle, index, reset) {\n            var me = this;\n            var model = rectangle._model;\n            var vscale = me._getValueScale();\n            var base = vscale.getBasePixel();\n            var horizontal = vscale.isHorizontal();\n            var ruler = me._ruler || me.getRuler();\n            var vpixels = me.calculateBarValuePixels(me.index, index);\n            var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n            model.horizontal = horizontal;\n            model.base = reset ? base : vpixels.base;\n            model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n            model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n            model.height = horizontal ? ipixels.size : undefined;\n            model.width = horizontal ? undefined : ipixels.size;\n        },\n        _getStacks: function (last) {\n            var me = this;\n            var chart = me.chart;\n            var scale = me._getIndexScale();\n            var stacked = scale.options.stacked;\n            var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n            var stacks = [];\n            var i, meta;\n            for (i = 0; i < ilen; ++i) {\n                meta = chart.getDatasetMeta(i);\n                if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n                    stacks.push(meta.stack);\n                }\n            }\n            return stacks;\n        },\n        getStackCount: function () {\n            return this._getStacks().length;\n        },\n        getStackIndex: function (datasetIndex, name) {\n            var stacks = this._getStacks(datasetIndex);\n            var index = name !== undefined ? stacks.indexOf(name) : -1;\n            return index === -1 ? stacks.length - 1 : index;\n        },\n        getRuler: function () {\n            var me = this;\n            var scale = me._getIndexScale();\n            var stackCount = me.getStackCount();\n            var datasetIndex = me.index;\n            var isHorizontal = scale.isHorizontal();\n            var start = isHorizontal ? scale.left : scale.top;\n            var end = start + (isHorizontal ? scale.width : scale.height);\n            var pixels = [];\n            var i, ilen, min;\n            for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n                pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n            }\n            min = helpers.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n            return {\n                min: min,\n                pixels: pixels,\n                start: start,\n                end: end,\n                stackCount: stackCount,\n                scale: scale\n            };\n        },\n        calculateBarValuePixels: function (datasetIndex, index) {\n            var me = this;\n            var chart = me.chart;\n            var meta = me.getMeta();\n            var scale = me._getValueScale();\n            var isHorizontal = scale.isHorizontal();\n            var datasets = chart.data.datasets;\n            var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n            var minBarLength = scale.options.minBarLength;\n            var stacked = scale.options.stacked;\n            var stack = meta.stack;\n            var start = 0;\n            var i, imeta, ivalue, base, head, size;\n            if (stacked || stacked === undefined && stack !== undefined) {\n                for (i = 0; i < datasetIndex; ++i) {\n                    imeta = chart.getDatasetMeta(i);\n                    if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n                        ivalue = +scale.getRightValue(datasets[i].data[index]);\n                        if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n                            start += ivalue;\n                        }\n                    }\n                }\n            }\n            base = scale.getPixelForValue(start);\n            head = scale.getPixelForValue(start + value);\n            size = head - base;\n            if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n                size = minBarLength;\n                if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n                    head = base - minBarLength;\n                } else {\n                    head = base + minBarLength;\n                }\n            }\n            return {\n                size: size,\n                base: base,\n                head: head,\n                center: head + size / 2\n            };\n        },\n        calculateBarIndexPixels: function (datasetIndex, index, ruler) {\n            var me = this;\n            var options = ruler.scale.options;\n            var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n            var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n            var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            var size = Math.min(helpers.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n            return {\n                base: center - size / 2,\n                head: center + size / 2,\n                center: center,\n                size: size\n            };\n        },\n        draw: function () {\n            var me = this;\n            var chart = me.chart;\n            var scale = me._getValueScale();\n            var rects = me.getMeta().data;\n            var dataset = me.getDataset();\n            var ilen = rects.length;\n            var i = 0;\n            helpers.canvas.clipArea(chart.ctx, chart.chartArea);\n            for (; i < ilen; ++i) {\n                if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n                    rects[i].draw();\n                }\n            }\n            helpers.canvas.unclipArea(chart.ctx);\n        },\n        _resolveElementOptions: function (rectangle, index) {\n            var me = this;\n            var chart = me.chart;\n            var datasets = chart.data.datasets;\n            var dataset = datasets[me.index];\n            var custom = rectangle.custom || {};\n            var options = chart.options.elements.rectangle;\n            var values = {};\n            var i, ilen, key;\n            var context = {\n                chart: chart,\n                dataIndex: index,\n                dataset: dataset,\n                datasetIndex: me.index\n            };\n            var keys = [\n                'backgroundColor',\n                'borderColor',\n                'borderSkipped',\n                'borderWidth'\n            ];\n            for (i = 0, ilen = keys.length; i < ilen; ++i) {\n                key = keys[i];\n                values[key] = resolve([\n                    custom[key],\n                    dataset[key],\n                    options[key]\n                ], context, index);\n            }\n            return values;\n        }\n    });\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/controllers/controller.bubble',[\n    '../core/core.datasetController',\n    '../core/core.defaults',\n    '../elements/index',\n    '../helpers/index'\n], function (__module__0, __module__1, __module__2, __module__3) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var DatasetController = __module__0;\n    var defaults = __module__1;\n    var elements = __module__2;\n    var helpers = __module__3;\n    var valueOrDefault = helpers.valueOrDefault;\n    var resolve = helpers.options.resolve;\n    defaults._set('bubble', {\n        hover: { mode: 'single' },\n        scales: {\n            xAxes: [{\n                    type: 'linear',\n                    position: 'bottom',\n                    id: 'x-axis-0'\n                }],\n            yAxes: [{\n                    type: 'linear',\n                    position: 'left',\n                    id: 'y-axis-0'\n                }]\n        },\n        tooltips: {\n            callbacks: {\n                title: function () {\n                    return '';\n                },\n                label: function (item, data) {\n                    var datasetLabel = data.datasets[item.datasetIndex].label || '';\n                    var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n                    return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n                }\n            }\n        }\n    });\n    module.exports = DatasetController.extend({\n        dataElementType: elements.Point,\n        update: function (reset) {\n            var me = this;\n            var meta = me.getMeta();\n            var points = meta.data;\n            helpers.each(points, function (point, index) {\n                me.updateElement(point, index, reset);\n            });\n        },\n        updateElement: function (point, index, reset) {\n            var me = this;\n            var meta = me.getMeta();\n            var custom = point.custom || {};\n            var xScale = me.getScaleForId(meta.xAxisID);\n            var yScale = me.getScaleForId(meta.yAxisID);\n            var options = me._resolveElementOptions(point, index);\n            var data = me.getDataset().data[index];\n            var dsIndex = me.index;\n            var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n            var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n            point._xScale = xScale;\n            point._yScale = yScale;\n            point._options = options;\n            point._datasetIndex = dsIndex;\n            point._index = index;\n            point._model = {\n                backgroundColor: options.backgroundColor,\n                borderColor: options.borderColor,\n                borderWidth: options.borderWidth,\n                hitRadius: options.hitRadius,\n                pointStyle: options.pointStyle,\n                rotation: options.rotation,\n                radius: reset ? 0 : options.radius,\n                skip: custom.skip || isNaN(x) || isNaN(y),\n                x: x,\n                y: y\n            };\n            point.pivot();\n        },\n        setHoverStyle: function (point) {\n            var model = point._model;\n            var options = point._options;\n            var getHoverColor = helpers.getHoverColor;\n            point.$previousStyle = {\n                backgroundColor: model.backgroundColor,\n                borderColor: model.borderColor,\n                borderWidth: model.borderWidth,\n                radius: model.radius\n            };\n            model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n            model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n            model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n            model.radius = options.radius + options.hoverRadius;\n        },\n        _resolveElementOptions: function (point, index) {\n            var me = this;\n            var chart = me.chart;\n            var datasets = chart.data.datasets;\n            var dataset = datasets[me.index];\n            var custom = point.custom || {};\n            var options = chart.options.elements.point;\n            var data = dataset.data[index];\n            var values = {};\n            var i, ilen, key;\n            var context = {\n                chart: chart,\n                dataIndex: index,\n                dataset: dataset,\n                datasetIndex: me.index\n            };\n            var keys = [\n                'backgroundColor',\n                'borderColor',\n                'borderWidth',\n                'hoverBackgroundColor',\n                'hoverBorderColor',\n                'hoverBorderWidth',\n                'hoverRadius',\n                'hitRadius',\n                'pointStyle',\n                'rotation'\n            ];\n            for (i = 0, ilen = keys.length; i < ilen; ++i) {\n                key = keys[i];\n                values[key] = resolve([\n                    custom[key],\n                    dataset[key],\n                    options[key]\n                ], context, index);\n            }\n            values.radius = resolve([\n                custom.radius,\n                data ? data.r : undefined,\n                dataset.radius,\n                options.radius\n            ], context, index);\n            return values;\n        }\n    });\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/controllers/controller.doughnut',[\n    '../core/core.datasetController',\n    '../core/core.defaults',\n    '../elements/index',\n    '../helpers/index'\n], function (__module__0, __module__1, __module__2, __module__3) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var DatasetController = __module__0;\n    var defaults = __module__1;\n    var elements = __module__2;\n    var helpers = __module__3;\n    var resolve = helpers.options.resolve;\n    var valueOrDefault = helpers.valueOrDefault;\n    defaults._set('doughnut', {\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        hover: { mode: 'single' },\n        legendCallback: function (chart) {\n            var text = [];\n            text.push('<ul class=\"' + chart.id + '-legend\">');\n            var data = chart.data;\n            var datasets = data.datasets;\n            var labels = data.labels;\n            if (datasets.length) {\n                for (var i = 0; i < datasets[0].data.length; ++i) {\n                    text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n                    if (labels[i]) {\n                        text.push(labels[i]);\n                    }\n                    text.push('</li>');\n                }\n            }\n            text.push('</ul>');\n            return text.join('');\n        },\n        legend: {\n            labels: {\n                generateLabels: function (chart) {\n                    var data = chart.data;\n                    if (data.labels.length && data.datasets.length) {\n                        return data.labels.map(function (label, i) {\n                            var meta = chart.getDatasetMeta(0);\n                            var ds = data.datasets[0];\n                            var arc = meta.data[i];\n                            var custom = arc && arc.custom || {};\n                            var arcOpts = chart.options.elements.arc;\n                            var fill = resolve([\n                                custom.backgroundColor,\n                                ds.backgroundColor,\n                                arcOpts.backgroundColor\n                            ], undefined, i);\n                            var stroke = resolve([\n                                custom.borderColor,\n                                ds.borderColor,\n                                arcOpts.borderColor\n                            ], undefined, i);\n                            var bw = resolve([\n                                custom.borderWidth,\n                                ds.borderWidth,\n                                arcOpts.borderWidth\n                            ], undefined, i);\n                            return {\n                                text: label,\n                                fillStyle: fill,\n                                strokeStyle: stroke,\n                                lineWidth: bw,\n                                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                                index: i\n                            };\n                        });\n                    }\n                    return [];\n                }\n            },\n            onClick: function (e, legendItem) {\n                var index = legendItem.index;\n                var chart = this.chart;\n                var i, ilen, meta;\n                for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n                    meta = chart.getDatasetMeta(i);\n                    if (meta.data[index]) {\n                        meta.data[index].hidden = !meta.data[index].hidden;\n                    }\n                }\n                chart.update();\n            }\n        },\n        cutoutPercentage: 50,\n        rotation: Math.PI * -0.5,\n        circumference: Math.PI * 2,\n        tooltips: {\n            callbacks: {\n                title: function () {\n                    return '';\n                },\n                label: function (tooltipItem, data) {\n                    var dataLabel = data.labels[tooltipItem.index];\n                    var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n                    if (helpers.isArray(dataLabel)) {\n                        dataLabel = dataLabel.slice();\n                        dataLabel[0] += value;\n                    } else {\n                        dataLabel += value;\n                    }\n                    return dataLabel;\n                }\n            }\n        }\n    });\n    module.exports = DatasetController.extend({\n        dataElementType: elements.Arc,\n        linkScales: helpers.noop,\n        getRingIndex: function (datasetIndex) {\n            var ringIndex = 0;\n            for (var j = 0; j < datasetIndex; ++j) {\n                if (this.chart.isDatasetVisible(j)) {\n                    ++ringIndex;\n                }\n            }\n            return ringIndex;\n        },\n        update: function (reset) {\n            var me = this;\n            var chart = me.chart;\n            var chartArea = chart.chartArea;\n            var opts = chart.options;\n            var availableWidth = chartArea.right - chartArea.left;\n            var availableHeight = chartArea.bottom - chartArea.top;\n            var minSize = Math.min(availableWidth, availableHeight);\n            var offset = {\n                x: 0,\n                y: 0\n            };\n            var meta = me.getMeta();\n            var arcs = meta.data;\n            var cutoutPercentage = opts.cutoutPercentage;\n            var circumference = opts.circumference;\n            var chartWeight = me._getRingWeight(me.index);\n            var i, ilen;\n            if (circumference < Math.PI * 2) {\n                var startAngle = opts.rotation % (Math.PI * 2);\n                startAngle += Math.PI * 2 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n                var endAngle = startAngle + circumference;\n                var start = {\n                    x: Math.cos(startAngle),\n                    y: Math.sin(startAngle)\n                };\n                var end = {\n                    x: Math.cos(endAngle),\n                    y: Math.sin(endAngle)\n                };\n                var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2 && Math.PI * 2 <= endAngle;\n                var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n                var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n                var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n                var cutout = cutoutPercentage / 100;\n                var min = {\n                    x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n                    y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n                };\n                var max = {\n                    x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n                    y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n                };\n                var size = {\n                    width: (max.x - min.x) * 0.5,\n                    height: (max.y - min.y) * 0.5\n                };\n                minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n                offset = {\n                    x: (max.x + min.x) * -0.5,\n                    y: (max.y + min.y) * -0.5\n                };\n            }\n            for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n                arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n            }\n            chart.borderWidth = me.getMaxBorderWidth();\n            chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n            chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n            chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n            chart.offsetX = offset.x * chart.outerRadius;\n            chart.offsetY = offset.y * chart.outerRadius;\n            meta.total = me.calculateTotal();\n            me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n            me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n            for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n                me.updateElement(arcs[i], i, reset);\n            }\n        },\n        updateElement: function (arc, index, reset) {\n            var me = this;\n            var chart = me.chart;\n            var chartArea = chart.chartArea;\n            var opts = chart.options;\n            var animationOpts = opts.animation;\n            var centerX = (chartArea.left + chartArea.right) / 2;\n            var centerY = (chartArea.top + chartArea.bottom) / 2;\n            var startAngle = opts.rotation;\n            var endAngle = opts.rotation;\n            var dataset = me.getDataset();\n            var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2 * Math.PI));\n            var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n            var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n            var options = arc._options || {};\n            helpers.extend(arc, {\n                _datasetIndex: me.index,\n                _index: index,\n                _model: {\n                    backgroundColor: options.backgroundColor,\n                    borderColor: options.borderColor,\n                    borderWidth: options.borderWidth,\n                    borderAlign: options.borderAlign,\n                    x: centerX + chart.offsetX,\n                    y: centerY + chart.offsetY,\n                    startAngle: startAngle,\n                    endAngle: endAngle,\n                    circumference: circumference,\n                    outerRadius: outerRadius,\n                    innerRadius: innerRadius,\n                    label: helpers.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n                }\n            });\n            var model = arc._model;\n            if (!reset || !animationOpts.animateRotate) {\n                if (index === 0) {\n                    model.startAngle = opts.rotation;\n                } else {\n                    model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n                }\n                model.endAngle = model.startAngle + model.circumference;\n            }\n            arc.pivot();\n        },\n        calculateTotal: function () {\n            var dataset = this.getDataset();\n            var meta = this.getMeta();\n            var total = 0;\n            var value;\n            helpers.each(meta.data, function (element, index) {\n                value = dataset.data[index];\n                if (!isNaN(value) && !element.hidden) {\n                    total += Math.abs(value);\n                }\n            });\n            return total;\n        },\n        calculateCircumference: function (value) {\n            var total = this.getMeta().total;\n            if (total > 0 && !isNaN(value)) {\n                return Math.PI * 2 * (Math.abs(value) / total);\n            }\n            return 0;\n        },\n        getMaxBorderWidth: function (arcs) {\n            var me = this;\n            var max = 0;\n            var chart = me.chart;\n            var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n            if (!arcs) {\n                for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n                    if (chart.isDatasetVisible(i)) {\n                        meta = chart.getDatasetMeta(i);\n                        arcs = meta.data;\n                        if (i !== me.index) {\n                            controller = meta.controller;\n                        }\n                        break;\n                    }\n                }\n            }\n            if (!arcs) {\n                return 0;\n            }\n            for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n                arc = arcs[i];\n                options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n                if (options.borderAlign !== 'inner') {\n                    borderWidth = options.borderWidth;\n                    hoverWidth = options.hoverBorderWidth;\n                    max = borderWidth > max ? borderWidth : max;\n                    max = hoverWidth > max ? hoverWidth : max;\n                }\n            }\n            return max;\n        },\n        setHoverStyle: function (arc) {\n            var model = arc._model;\n            var options = arc._options;\n            var getHoverColor = helpers.getHoverColor;\n            arc.$previousStyle = {\n                backgroundColor: model.backgroundColor,\n                borderColor: model.borderColor,\n                borderWidth: model.borderWidth\n            };\n            model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n            model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n            model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n        },\n        _resolveElementOptions: function (arc, index) {\n            var me = this;\n            var chart = me.chart;\n            var dataset = me.getDataset();\n            var custom = arc.custom || {};\n            var options = chart.options.elements.arc;\n            var values = {};\n            var i, ilen, key;\n            var context = {\n                chart: chart,\n                dataIndex: index,\n                dataset: dataset,\n                datasetIndex: me.index\n            };\n            var keys = [\n                'backgroundColor',\n                'borderColor',\n                'borderWidth',\n                'borderAlign',\n                'hoverBackgroundColor',\n                'hoverBorderColor',\n                'hoverBorderWidth'\n            ];\n            for (i = 0, ilen = keys.length; i < ilen; ++i) {\n                key = keys[i];\n                values[key] = resolve([\n                    custom[key],\n                    dataset[key],\n                    options[key]\n                ], context, index);\n            }\n            return values;\n        },\n        _getRingWeightOffset: function (datasetIndex) {\n            var ringWeightOffset = 0;\n            for (var i = 0; i < datasetIndex; ++i) {\n                if (this.chart.isDatasetVisible(i)) {\n                    ringWeightOffset += this._getRingWeight(i);\n                }\n            }\n            return ringWeightOffset;\n        },\n        _getRingWeight: function (dataSetIndex) {\n            return Math.max(valueOrDefault(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n        },\n        _getVisibleDatasetWeightTotal: function () {\n            return this._getRingWeightOffset(this.chart.data.datasets.length);\n        }\n    });\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/controllers/controller.horizontalBar',[\n    './controller.bar',\n    '../core/core.defaults'\n], function (__module__0, __module__1) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var BarController = __module__0;\n    var defaults = __module__1;\n    defaults._set('horizontalBar', {\n        hover: {\n            mode: 'index',\n            axis: 'y'\n        },\n        scales: {\n            xAxes: [{\n                    type: 'linear',\n                    position: 'bottom'\n                }],\n            yAxes: [{\n                    type: 'category',\n                    position: 'left',\n                    categoryPercentage: 0.8,\n                    barPercentage: 0.9,\n                    offset: true,\n                    gridLines: { offsetGridLines: true }\n                }]\n        },\n        elements: { rectangle: { borderSkipped: 'left' } },\n        tooltips: {\n            mode: 'index',\n            axis: 'y'\n        }\n    });\n    module.exports = BarController.extend({\n        _getValueScaleId: function () {\n            return this.getMeta().xAxisID;\n        },\n        _getIndexScaleId: function () {\n            return this.getMeta().yAxisID;\n        }\n    });\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/controllers/controller.line',[\n    '../core/core.datasetController',\n    '../core/core.defaults',\n    '../elements/index',\n    '../helpers/index'\n], function (__module__0, __module__1, __module__2, __module__3) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var DatasetController = __module__0;\n    var defaults = __module__1;\n    var elements = __module__2;\n    var helpers = __module__3;\n    var valueOrDefault = helpers.valueOrDefault;\n    var resolve = helpers.options.resolve;\n    var isPointInArea = helpers.canvas._isPointInArea;\n    defaults._set('line', {\n        showLines: true,\n        spanGaps: false,\n        hover: { mode: 'label' },\n        scales: {\n            xAxes: [{\n                    type: 'category',\n                    id: 'x-axis-0'\n                }],\n            yAxes: [{\n                    type: 'linear',\n                    id: 'y-axis-0'\n                }]\n        }\n    });\n    function lineEnabled(dataset, options) {\n        return valueOrDefault(dataset.showLine, options.showLines);\n    }\n    module.exports = DatasetController.extend({\n        datasetElementType: elements.Line,\n        dataElementType: elements.Point,\n        update: function (reset) {\n            var me = this;\n            var meta = me.getMeta();\n            var line = meta.dataset;\n            var points = meta.data || [];\n            var scale = me.getScaleForId(meta.yAxisID);\n            var dataset = me.getDataset();\n            var showLine = lineEnabled(dataset, me.chart.options);\n            var i, ilen;\n            if (showLine) {\n                if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n                    dataset.lineTension = dataset.tension;\n                }\n                line._scale = scale;\n                line._datasetIndex = me.index;\n                line._children = points;\n                line._model = me._resolveLineOptions(line);\n                line.pivot();\n            }\n            for (i = 0, ilen = points.length; i < ilen; ++i) {\n                me.updateElement(points[i], i, reset);\n            }\n            if (showLine && line._model.tension !== 0) {\n                me.updateBezierControlPoints();\n            }\n            for (i = 0, ilen = points.length; i < ilen; ++i) {\n                points[i].pivot();\n            }\n        },\n        updateElement: function (point, index, reset) {\n            var me = this;\n            var meta = me.getMeta();\n            var custom = point.custom || {};\n            var dataset = me.getDataset();\n            var datasetIndex = me.index;\n            var value = dataset.data[index];\n            var yScale = me.getScaleForId(meta.yAxisID);\n            var xScale = me.getScaleForId(meta.xAxisID);\n            var lineModel = meta.dataset._model;\n            var x, y;\n            var options = me._resolvePointOptions(point, index);\n            x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n            y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n            point._xScale = xScale;\n            point._yScale = yScale;\n            point._options = options;\n            point._datasetIndex = datasetIndex;\n            point._index = index;\n            point._model = {\n                x: x,\n                y: y,\n                skip: custom.skip || isNaN(x) || isNaN(y),\n                radius: options.radius,\n                pointStyle: options.pointStyle,\n                rotation: options.rotation,\n                backgroundColor: options.backgroundColor,\n                borderColor: options.borderColor,\n                borderWidth: options.borderWidth,\n                tension: valueOrDefault(custom.tension, lineModel ? lineModel.tension : 0),\n                steppedLine: lineModel ? lineModel.steppedLine : false,\n                hitRadius: options.hitRadius\n            };\n        },\n        _resolvePointOptions: function (element, index) {\n            var me = this;\n            var chart = me.chart;\n            var dataset = chart.data.datasets[me.index];\n            var custom = element.custom || {};\n            var options = chart.options.elements.point;\n            var values = {};\n            var i, ilen, key;\n            var context = {\n                chart: chart,\n                dataIndex: index,\n                dataset: dataset,\n                datasetIndex: me.index\n            };\n            var ELEMENT_OPTIONS = {\n                backgroundColor: 'pointBackgroundColor',\n                borderColor: 'pointBorderColor',\n                borderWidth: 'pointBorderWidth',\n                hitRadius: 'pointHitRadius',\n                hoverBackgroundColor: 'pointHoverBackgroundColor',\n                hoverBorderColor: 'pointHoverBorderColor',\n                hoverBorderWidth: 'pointHoverBorderWidth',\n                hoverRadius: 'pointHoverRadius',\n                pointStyle: 'pointStyle',\n                radius: 'pointRadius',\n                rotation: 'pointRotation'\n            };\n            var keys = Object.keys(ELEMENT_OPTIONS);\n            for (i = 0, ilen = keys.length; i < ilen; ++i) {\n                key = keys[i];\n                values[key] = resolve([\n                    custom[key],\n                    dataset[ELEMENT_OPTIONS[key]],\n                    dataset[key],\n                    options[key]\n                ], context, index);\n            }\n            return values;\n        },\n        _resolveLineOptions: function (element) {\n            var me = this;\n            var chart = me.chart;\n            var dataset = chart.data.datasets[me.index];\n            var custom = element.custom || {};\n            var options = chart.options;\n            var elementOptions = options.elements.line;\n            var values = {};\n            var i, ilen, key;\n            var keys = [\n                'backgroundColor',\n                'borderWidth',\n                'borderColor',\n                'borderCapStyle',\n                'borderDash',\n                'borderDashOffset',\n                'borderJoinStyle',\n                'fill',\n                'cubicInterpolationMode'\n            ];\n            for (i = 0, ilen = keys.length; i < ilen; ++i) {\n                key = keys[i];\n                values[key] = resolve([\n                    custom[key],\n                    dataset[key],\n                    elementOptions[key]\n                ]);\n            }\n            values.spanGaps = valueOrDefault(dataset.spanGaps, options.spanGaps);\n            values.tension = valueOrDefault(dataset.lineTension, elementOptions.tension);\n            values.steppedLine = resolve([\n                custom.steppedLine,\n                dataset.steppedLine,\n                elementOptions.stepped\n            ]);\n            return values;\n        },\n        calculatePointY: function (value, index, datasetIndex) {\n            var me = this;\n            var chart = me.chart;\n            var meta = me.getMeta();\n            var yScale = me.getScaleForId(meta.yAxisID);\n            var sumPos = 0;\n            var sumNeg = 0;\n            var i, ds, dsMeta;\n            if (yScale.options.stacked) {\n                for (i = 0; i < datasetIndex; i++) {\n                    ds = chart.data.datasets[i];\n                    dsMeta = chart.getDatasetMeta(i);\n                    if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n                        var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n                        if (stackedRightValue < 0) {\n                            sumNeg += stackedRightValue || 0;\n                        } else {\n                            sumPos += stackedRightValue || 0;\n                        }\n                    }\n                }\n                var rightValue = Number(yScale.getRightValue(value));\n                if (rightValue < 0) {\n                    return yScale.getPixelForValue(sumNeg + rightValue);\n                }\n                return yScale.getPixelForValue(sumPos + rightValue);\n            }\n            return yScale.getPixelForValue(value);\n        },\n        updateBezierControlPoints: function () {\n            var me = this;\n            var chart = me.chart;\n            var meta = me.getMeta();\n            var lineModel = meta.dataset._model;\n            var area = chart.chartArea;\n            var points = meta.data || [];\n            var i, ilen, model, controlPoints;\n            if (lineModel.spanGaps) {\n                points = points.filter(function (pt) {\n                    return !pt._model.skip;\n                });\n            }\n            function capControlPoint(pt, min, max) {\n                return Math.max(Math.min(pt, max), min);\n            }\n            if (lineModel.cubicInterpolationMode === 'monotone') {\n                helpers.splineCurveMonotone(points);\n            } else {\n                for (i = 0, ilen = points.length; i < ilen; ++i) {\n                    model = points[i]._model;\n                    controlPoints = helpers.splineCurve(helpers.previousItem(points, i)._model, model, helpers.nextItem(points, i)._model, lineModel.tension);\n                    model.controlPointPreviousX = controlPoints.previous.x;\n                    model.controlPointPreviousY = controlPoints.previous.y;\n                    model.controlPointNextX = controlPoints.next.x;\n                    model.controlPointNextY = controlPoints.next.y;\n                }\n            }\n            if (chart.options.elements.line.capBezierPoints) {\n                for (i = 0, ilen = points.length; i < ilen; ++i) {\n                    model = points[i]._model;\n                    if (isPointInArea(model, area)) {\n                        if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n                            model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n                            model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n                        }\n                        if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n                            model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n                            model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n                        }\n                    }\n                }\n            }\n        },\n        draw: function () {\n            var me = this;\n            var chart = me.chart;\n            var meta = me.getMeta();\n            var points = meta.data || [];\n            var area = chart.chartArea;\n            var ilen = points.length;\n            var halfBorderWidth;\n            var i = 0;\n            if (lineEnabled(me.getDataset(), chart.options)) {\n                halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n                helpers.canvas.clipArea(chart.ctx, {\n                    left: area.left,\n                    right: area.right,\n                    top: area.top - halfBorderWidth,\n                    bottom: area.bottom + halfBorderWidth\n                });\n                meta.dataset.draw();\n                helpers.canvas.unclipArea(chart.ctx);\n            }\n            for (; i < ilen; ++i) {\n                points[i].draw(area);\n            }\n        },\n        setHoverStyle: function (point) {\n            var model = point._model;\n            var options = point._options;\n            var getHoverColor = helpers.getHoverColor;\n            point.$previousStyle = {\n                backgroundColor: model.backgroundColor,\n                borderColor: model.borderColor,\n                borderWidth: model.borderWidth,\n                radius: model.radius\n            };\n            model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n            model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n            model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n            model.radius = valueOrDefault(options.hoverRadius, options.radius);\n        }\n    });\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/controllers/controller.polarArea',[\n    '../core/core.datasetController',\n    '../core/core.defaults',\n    '../elements/index',\n    '../helpers/index'\n], function (__module__0, __module__1, __module__2, __module__3) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var DatasetController = __module__0;\n    var defaults = __module__1;\n    var elements = __module__2;\n    var helpers = __module__3;\n    var resolve = helpers.options.resolve;\n    defaults._set('polarArea', {\n        scale: {\n            type: 'radialLinear',\n            angleLines: { display: false },\n            gridLines: { circular: true },\n            pointLabels: { display: false },\n            ticks: { beginAtZero: true }\n        },\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        startAngle: -0.5 * Math.PI,\n        legendCallback: function (chart) {\n            var text = [];\n            text.push('<ul class=\"' + chart.id + '-legend\">');\n            var data = chart.data;\n            var datasets = data.datasets;\n            var labels = data.labels;\n            if (datasets.length) {\n                for (var i = 0; i < datasets[0].data.length; ++i) {\n                    text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n                    if (labels[i]) {\n                        text.push(labels[i]);\n                    }\n                    text.push('</li>');\n                }\n            }\n            text.push('</ul>');\n            return text.join('');\n        },\n        legend: {\n            labels: {\n                generateLabels: function (chart) {\n                    var data = chart.data;\n                    if (data.labels.length && data.datasets.length) {\n                        return data.labels.map(function (label, i) {\n                            var meta = chart.getDatasetMeta(0);\n                            var ds = data.datasets[0];\n                            var arc = meta.data[i];\n                            var custom = arc.custom || {};\n                            var arcOpts = chart.options.elements.arc;\n                            var fill = resolve([\n                                custom.backgroundColor,\n                                ds.backgroundColor,\n                                arcOpts.backgroundColor\n                            ], undefined, i);\n                            var stroke = resolve([\n                                custom.borderColor,\n                                ds.borderColor,\n                                arcOpts.borderColor\n                            ], undefined, i);\n                            var bw = resolve([\n                                custom.borderWidth,\n                                ds.borderWidth,\n                                arcOpts.borderWidth\n                            ], undefined, i);\n                            return {\n                                text: label,\n                                fillStyle: fill,\n                                strokeStyle: stroke,\n                                lineWidth: bw,\n                                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                                index: i\n                            };\n                        });\n                    }\n                    return [];\n                }\n            },\n            onClick: function (e, legendItem) {\n                var index = legendItem.index;\n                var chart = this.chart;\n                var i, ilen, meta;\n                for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n                    meta = chart.getDatasetMeta(i);\n                    meta.data[index].hidden = !meta.data[index].hidden;\n                }\n                chart.update();\n            }\n        },\n        tooltips: {\n            callbacks: {\n                title: function () {\n                    return '';\n                },\n                label: function (item, data) {\n                    return data.labels[item.index] + ': ' + item.yLabel;\n                }\n            }\n        }\n    });\n    module.exports = DatasetController.extend({\n        dataElementType: elements.Arc,\n        linkScales: helpers.noop,\n        update: function (reset) {\n            var me = this;\n            var dataset = me.getDataset();\n            var meta = me.getMeta();\n            var start = me.chart.options.startAngle || 0;\n            var starts = me._starts = [];\n            var angles = me._angles = [];\n            var arcs = meta.data;\n            var i, ilen, angle;\n            me._updateRadius();\n            meta.count = me.countVisibleElements();\n            for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n                starts[i] = start;\n                angle = me._computeAngle(i);\n                angles[i] = angle;\n                start += angle;\n            }\n            for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n                arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n                me.updateElement(arcs[i], i, reset);\n            }\n        },\n        _updateRadius: function () {\n            var me = this;\n            var chart = me.chart;\n            var chartArea = chart.chartArea;\n            var opts = chart.options;\n            var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n            chart.outerRadius = Math.max(minSize / 2, 0);\n            chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n            chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n            me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n            me.innerRadius = me.outerRadius - chart.radiusLength;\n        },\n        updateElement: function (arc, index, reset) {\n            var me = this;\n            var chart = me.chart;\n            var dataset = me.getDataset();\n            var opts = chart.options;\n            var animationOpts = opts.animation;\n            var scale = chart.scale;\n            var labels = chart.data.labels;\n            var centerX = scale.xCenter;\n            var centerY = scale.yCenter;\n            var datasetStartAngle = opts.startAngle;\n            var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n            var startAngle = me._starts[index];\n            var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n            var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n            var options = arc._options || {};\n            helpers.extend(arc, {\n                _datasetIndex: me.index,\n                _index: index,\n                _scale: scale,\n                _model: {\n                    backgroundColor: options.backgroundColor,\n                    borderColor: options.borderColor,\n                    borderWidth: options.borderWidth,\n                    borderAlign: options.borderAlign,\n                    x: centerX,\n                    y: centerY,\n                    innerRadius: 0,\n                    outerRadius: reset ? resetRadius : distance,\n                    startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n                    endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n                    label: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n                }\n            });\n            arc.pivot();\n        },\n        countVisibleElements: function () {\n            var dataset = this.getDataset();\n            var meta = this.getMeta();\n            var count = 0;\n            helpers.each(meta.data, function (element, index) {\n                if (!isNaN(dataset.data[index]) && !element.hidden) {\n                    count++;\n                }\n            });\n            return count;\n        },\n        setHoverStyle: function (arc) {\n            var model = arc._model;\n            var options = arc._options;\n            var getHoverColor = helpers.getHoverColor;\n            var valueOrDefault = helpers.valueOrDefault;\n            arc.$previousStyle = {\n                backgroundColor: model.backgroundColor,\n                borderColor: model.borderColor,\n                borderWidth: model.borderWidth\n            };\n            model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n            model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n            model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n        },\n        _resolveElementOptions: function (arc, index) {\n            var me = this;\n            var chart = me.chart;\n            var dataset = me.getDataset();\n            var custom = arc.custom || {};\n            var options = chart.options.elements.arc;\n            var values = {};\n            var i, ilen, key;\n            var context = {\n                chart: chart,\n                dataIndex: index,\n                dataset: dataset,\n                datasetIndex: me.index\n            };\n            var keys = [\n                'backgroundColor',\n                'borderColor',\n                'borderWidth',\n                'borderAlign',\n                'hoverBackgroundColor',\n                'hoverBorderColor',\n                'hoverBorderWidth'\n            ];\n            for (i = 0, ilen = keys.length; i < ilen; ++i) {\n                key = keys[i];\n                values[key] = resolve([\n                    custom[key],\n                    dataset[key],\n                    options[key]\n                ], context, index);\n            }\n            return values;\n        },\n        _computeAngle: function (index) {\n            var me = this;\n            var count = this.getMeta().count;\n            var dataset = me.getDataset();\n            var meta = me.getMeta();\n            if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n                return 0;\n            }\n            var context = {\n                chart: me.chart,\n                dataIndex: index,\n                dataset: dataset,\n                datasetIndex: me.index\n            };\n            return resolve([\n                me.chart.options.elements.arc.angle,\n                2 * Math.PI / count\n            ], context, index);\n        }\n    });\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/controllers/controller.pie',[\n    './controller.doughnut',\n    '../core/core.defaults',\n    '../helpers/index'\n], function (__module__0, __module__1, __module__2) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var DoughnutController = __module__0;\n    var defaults = __module__1;\n    var helpers = __module__2;\n    defaults._set('pie', helpers.clone(defaults.doughnut));\n    defaults._set('pie', { cutoutPercentage: 0 });\n    module.exports = DoughnutController;\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/controllers/controller.radar',[\n    '../core/core.datasetController',\n    '../core/core.defaults',\n    '../elements/index',\n    '../helpers/index'\n], function (__module__0, __module__1, __module__2, __module__3) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var DatasetController = __module__0;\n    var defaults = __module__1;\n    var elements = __module__2;\n    var helpers = __module__3;\n    var valueOrDefault = helpers.valueOrDefault;\n    var resolve = helpers.options.resolve;\n    defaults._set('radar', {\n        scale: { type: 'radialLinear' },\n        elements: { line: { tension: 0 } }\n    });\n    module.exports = DatasetController.extend({\n        datasetElementType: elements.Line,\n        dataElementType: elements.Point,\n        linkScales: helpers.noop,\n        update: function (reset) {\n            var me = this;\n            var meta = me.getMeta();\n            var line = meta.dataset;\n            var points = meta.data || [];\n            var scale = me.chart.scale;\n            var dataset = me.getDataset();\n            var i, ilen;\n            if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n                dataset.lineTension = dataset.tension;\n            }\n            line._scale = scale;\n            line._datasetIndex = me.index;\n            line._children = points;\n            line._loop = true;\n            line._model = me._resolveLineOptions(line);\n            line.pivot();\n            for (i = 0, ilen = points.length; i < ilen; ++i) {\n                me.updateElement(points[i], i, reset);\n            }\n            me.updateBezierControlPoints();\n            for (i = 0, ilen = points.length; i < ilen; ++i) {\n                points[i].pivot();\n            }\n        },\n        updateElement: function (point, index, reset) {\n            var me = this;\n            var custom = point.custom || {};\n            var dataset = me.getDataset();\n            var scale = me.chart.scale;\n            var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n            var options = me._resolvePointOptions(point, index);\n            var lineModel = me.getMeta().dataset._model;\n            var x = reset ? scale.xCenter : pointPosition.x;\n            var y = reset ? scale.yCenter : pointPosition.y;\n            point._scale = scale;\n            point._options = options;\n            point._datasetIndex = me.index;\n            point._index = index;\n            point._model = {\n                x: x,\n                y: y,\n                skip: custom.skip || isNaN(x) || isNaN(y),\n                radius: options.radius,\n                pointStyle: options.pointStyle,\n                rotation: options.rotation,\n                backgroundColor: options.backgroundColor,\n                borderColor: options.borderColor,\n                borderWidth: options.borderWidth,\n                tension: valueOrDefault(custom.tension, lineModel ? lineModel.tension : 0),\n                hitRadius: options.hitRadius\n            };\n        },\n        _resolvePointOptions: function (element, index) {\n            var me = this;\n            var chart = me.chart;\n            var dataset = chart.data.datasets[me.index];\n            var custom = element.custom || {};\n            var options = chart.options.elements.point;\n            var values = {};\n            var i, ilen, key;\n            var context = {\n                chart: chart,\n                dataIndex: index,\n                dataset: dataset,\n                datasetIndex: me.index\n            };\n            var ELEMENT_OPTIONS = {\n                backgroundColor: 'pointBackgroundColor',\n                borderColor: 'pointBorderColor',\n                borderWidth: 'pointBorderWidth',\n                hitRadius: 'pointHitRadius',\n                hoverBackgroundColor: 'pointHoverBackgroundColor',\n                hoverBorderColor: 'pointHoverBorderColor',\n                hoverBorderWidth: 'pointHoverBorderWidth',\n                hoverRadius: 'pointHoverRadius',\n                pointStyle: 'pointStyle',\n                radius: 'pointRadius',\n                rotation: 'pointRotation'\n            };\n            var keys = Object.keys(ELEMENT_OPTIONS);\n            for (i = 0, ilen = keys.length; i < ilen; ++i) {\n                key = keys[i];\n                values[key] = resolve([\n                    custom[key],\n                    dataset[ELEMENT_OPTIONS[key]],\n                    dataset[key],\n                    options[key]\n                ], context, index);\n            }\n            return values;\n        },\n        _resolveLineOptions: function (element) {\n            var me = this;\n            var chart = me.chart;\n            var dataset = chart.data.datasets[me.index];\n            var custom = element.custom || {};\n            var options = chart.options.elements.line;\n            var values = {};\n            var i, ilen, key;\n            var keys = [\n                'backgroundColor',\n                'borderWidth',\n                'borderColor',\n                'borderCapStyle',\n                'borderDash',\n                'borderDashOffset',\n                'borderJoinStyle',\n                'fill'\n            ];\n            for (i = 0, ilen = keys.length; i < ilen; ++i) {\n                key = keys[i];\n                values[key] = resolve([\n                    custom[key],\n                    dataset[key],\n                    options[key]\n                ]);\n            }\n            values.tension = valueOrDefault(dataset.lineTension, options.tension);\n            return values;\n        },\n        updateBezierControlPoints: function () {\n            var me = this;\n            var meta = me.getMeta();\n            var area = me.chart.chartArea;\n            var points = meta.data || [];\n            var i, ilen, model, controlPoints;\n            function capControlPoint(pt, min, max) {\n                return Math.max(Math.min(pt, max), min);\n            }\n            for (i = 0, ilen = points.length; i < ilen; ++i) {\n                model = points[i]._model;\n                controlPoints = helpers.splineCurve(helpers.previousItem(points, i, true)._model, model, helpers.nextItem(points, i, true)._model, model.tension);\n                model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n                model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n                model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n                model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n            }\n        },\n        setHoverStyle: function (point) {\n            var model = point._model;\n            var options = point._options;\n            var getHoverColor = helpers.getHoverColor;\n            point.$previousStyle = {\n                backgroundColor: model.backgroundColor,\n                borderColor: model.borderColor,\n                borderWidth: model.borderWidth,\n                radius: model.radius\n            };\n            model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n            model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n            model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n            model.radius = valueOrDefault(options.hoverRadius, options.radius);\n        }\n    });\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/controllers/controller.scatter',[\n    './controller.line',\n    '../core/core.defaults'\n], function (__module__0, __module__1) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var LineController = __module__0;\n    var defaults = __module__1;\n    defaults._set('scatter', {\n        hover: { mode: 'single' },\n        scales: {\n            xAxes: [{\n                    id: 'x-axis-1',\n                    type: 'linear',\n                    position: 'bottom'\n                }],\n            yAxes: [{\n                    id: 'y-axis-1',\n                    type: 'linear',\n                    position: 'left'\n                }]\n        },\n        showLines: false,\n        tooltips: {\n            callbacks: {\n                title: function () {\n                    return '';\n                },\n                label: function (item) {\n                    return '(' + item.xLabel + ', ' + item.yLabel + ')';\n                }\n            }\n        }\n    });\n    module.exports = LineController;\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/controllers/index',[\n    './controller.bar',\n    './controller.bubble',\n    './controller.doughnut',\n    './controller.horizontalBar',\n    './controller.line',\n    './controller.polarArea',\n    './controller.pie',\n    './controller.radar',\n    './controller.scatter'\n], function (__module__0, __module__1, __module__2, __module__3, __module__4, __module__5, __module__6, __module__7, __module__8) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var bar = __module__0;\n    var bubble = __module__1;\n    var doughnut = __module__2;\n    var horizontalBar = __module__3;\n    var line = __module__4;\n    var polarArea = __module__5;\n    var pie = __module__6;\n    var radar = __module__7;\n    var scatter = __module__8;\n    module.exports = {\n        bar: bar,\n        bubble: bubble,\n        doughnut: doughnut,\n        horizontalBar: horizontalBar,\n        line: line,\n        polarArea: polarArea,\n        pie: pie,\n        radar: radar,\n        scatter: scatter\n    };\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/core/core.interaction',['../helpers/index'], function (__module__0) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var helpers = __module__0;\n    function getRelativePosition(e, chart) {\n        if (e.native) {\n            return {\n                x: e.x,\n                y: e.y\n            };\n        }\n        return helpers.getRelativePosition(e, chart);\n    }\n    function parseVisibleItems(chart, handler) {\n        var datasets = chart.data.datasets;\n        var meta, i, j, ilen, jlen;\n        for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n            if (!chart.isDatasetVisible(i)) {\n                continue;\n            }\n            meta = chart.getDatasetMeta(i);\n            for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n                var element = meta.data[j];\n                if (!element._view.skip) {\n                    handler(element);\n                }\n            }\n        }\n    }\n    function getIntersectItems(chart, position) {\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n            if (element.inRange(position.x, position.y)) {\n                elements.push(element);\n            }\n        });\n        return elements;\n    }\n    function getNearestItems(chart, position, intersect, distanceMetric) {\n        var minDistance = Number.POSITIVE_INFINITY;\n        var nearestItems = [];\n        parseVisibleItems(chart, function (element) {\n            if (intersect && !element.inRange(position.x, position.y)) {\n                return;\n            }\n            var center = element.getCenterPoint();\n            var distance = distanceMetric(position, center);\n            if (distance < minDistance) {\n                nearestItems = [element];\n                minDistance = distance;\n            } else if (distance === minDistance) {\n                nearestItems.push(element);\n            }\n        });\n        return nearestItems;\n    }\n    function getDistanceMetricForAxis(axis) {\n        var useX = axis.indexOf('x') !== -1;\n        var useY = axis.indexOf('y') !== -1;\n        return function (pt1, pt2) {\n            var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n            var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n            return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n        };\n    }\n    function indexMode(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'x';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n        var elements = [];\n        if (!items.length) {\n            return [];\n        }\n        chart.data.datasets.forEach(function (dataset, datasetIndex) {\n            if (chart.isDatasetVisible(datasetIndex)) {\n                var meta = chart.getDatasetMeta(datasetIndex);\n                var element = meta.data[items[0]._index];\n                if (element && !element._view.skip) {\n                    elements.push(element);\n                }\n            }\n        });\n        return elements;\n    }\n    module.exports = {\n        modes: {\n            single: function (chart, e) {\n                var position = getRelativePosition(e, chart);\n                var elements = [];\n                parseVisibleItems(chart, function (element) {\n                    if (element.inRange(position.x, position.y)) {\n                        elements.push(element);\n                        return elements;\n                    }\n                });\n                return elements.slice(0, 1);\n            },\n            label: indexMode,\n            index: indexMode,\n            dataset: function (chart, e, options) {\n                var position = getRelativePosition(e, chart);\n                options.axis = options.axis || 'xy';\n                var distanceMetric = getDistanceMetricForAxis(options.axis);\n                var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n                if (items.length > 0) {\n                    items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n                }\n                return items;\n            },\n            'x-axis': function (chart, e) {\n                return indexMode(chart, e, { intersect: false });\n            },\n            point: function (chart, e) {\n                var position = getRelativePosition(e, chart);\n                return getIntersectItems(chart, position);\n            },\n            nearest: function (chart, e, options) {\n                var position = getRelativePosition(e, chart);\n                options.axis = options.axis || 'xy';\n                var distanceMetric = getDistanceMetricForAxis(options.axis);\n                return getNearestItems(chart, position, options.intersect, distanceMetric);\n            },\n            x: function (chart, e, options) {\n                var position = getRelativePosition(e, chart);\n                var items = [];\n                var intersectsItem = false;\n                parseVisibleItems(chart, function (element) {\n                    if (element.inXRange(position.x)) {\n                        items.push(element);\n                    }\n                    if (element.inRange(position.x, position.y)) {\n                        intersectsItem = true;\n                    }\n                });\n                if (options.intersect && !intersectsItem) {\n                    items = [];\n                }\n                return items;\n            },\n            y: function (chart, e, options) {\n                var position = getRelativePosition(e, chart);\n                var items = [];\n                var intersectsItem = false;\n                parseVisibleItems(chart, function (element) {\n                    if (element.inYRange(position.y)) {\n                        items.push(element);\n                    }\n                    if (element.inRange(position.x, position.y)) {\n                        intersectsItem = true;\n                    }\n                });\n                if (options.intersect && !intersectsItem) {\n                    items = [];\n                }\n                return items;\n            }\n        }\n    };\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/core/core.layouts',[\n    './core.defaults',\n    '../helpers/index'\n], function (__module__0, __module__1) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var defaults = __module__0;\n    var helpers = __module__1;\n    function filterByPosition(array, position) {\n        return helpers.where(array, function (v) {\n            return v.position === position;\n        });\n    }\n    function sortByWeight(array, reverse) {\n        array.forEach(function (v, i) {\n            v._tmpIndex_ = i;\n            return v;\n        });\n        array.sort(function (a, b) {\n            var v0 = reverse ? b : a;\n            var v1 = reverse ? a : b;\n            return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n        });\n        array.forEach(function (v) {\n            delete v._tmpIndex_;\n        });\n    }\n    function findMaxPadding(boxes) {\n        var top = 0;\n        var left = 0;\n        var bottom = 0;\n        var right = 0;\n        helpers.each(boxes, function (box) {\n            if (box.getPadding) {\n                var boxPadding = box.getPadding();\n                top = Math.max(top, boxPadding.top);\n                left = Math.max(left, boxPadding.left);\n                bottom = Math.max(bottom, boxPadding.bottom);\n                right = Math.max(right, boxPadding.right);\n            }\n        });\n        return {\n            top: top,\n            left: left,\n            bottom: bottom,\n            right: right\n        };\n    }\n    function addSizeByPosition(boxes, size) {\n        helpers.each(boxes, function (box) {\n            size[box.position] += box.isHorizontal() ? box.height : box.width;\n        });\n    }\n    defaults._set('global', {\n        layout: {\n            padding: {\n                top: 0,\n                right: 0,\n                bottom: 0,\n                left: 0\n            }\n        }\n    });\n    module.exports = {\n        defaults: {},\n        addBox: function (chart, item) {\n            if (!chart.boxes) {\n                chart.boxes = [];\n            }\n            item.fullWidth = item.fullWidth || false;\n            item.position = item.position || 'top';\n            item.weight = item.weight || 0;\n            chart.boxes.push(item);\n        },\n        removeBox: function (chart, layoutItem) {\n            var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n            if (index !== -1) {\n                chart.boxes.splice(index, 1);\n            }\n        },\n        configure: function (chart, item, options) {\n            var props = [\n                'fullWidth',\n                'position',\n                'weight'\n            ];\n            var ilen = props.length;\n            var i = 0;\n            var prop;\n            for (; i < ilen; ++i) {\n                prop = props[i];\n                if (options.hasOwnProperty(prop)) {\n                    item[prop] = options[prop];\n                }\n            }\n        },\n        update: function (chart, width, height) {\n            if (!chart) {\n                return;\n            }\n            var layoutOptions = chart.options.layout || {};\n            var padding = helpers.options.toPadding(layoutOptions.padding);\n            var leftPadding = padding.left;\n            var rightPadding = padding.right;\n            var topPadding = padding.top;\n            var bottomPadding = padding.bottom;\n            var leftBoxes = filterByPosition(chart.boxes, 'left');\n            var rightBoxes = filterByPosition(chart.boxes, 'right');\n            var topBoxes = filterByPosition(chart.boxes, 'top');\n            var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n            var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n            sortByWeight(leftBoxes, true);\n            sortByWeight(rightBoxes, false);\n            sortByWeight(topBoxes, true);\n            sortByWeight(bottomBoxes, false);\n            var verticalBoxes = leftBoxes.concat(rightBoxes);\n            var horizontalBoxes = topBoxes.concat(bottomBoxes);\n            var outerBoxes = verticalBoxes.concat(horizontalBoxes);\n            var chartWidth = width - leftPadding - rightPadding;\n            var chartHeight = height - topPadding - bottomPadding;\n            var chartAreaWidth = chartWidth / 2;\n            var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length;\n            var maxChartAreaWidth = chartWidth;\n            var maxChartAreaHeight = chartHeight;\n            var outerBoxSizes = {\n                top: topPadding,\n                left: leftPadding,\n                bottom: bottomPadding,\n                right: rightPadding\n            };\n            var minBoxSizes = [];\n            var maxPadding;\n            function getMinimumBoxSize(box) {\n                var minSize;\n                var isHorizontal = box.isHorizontal();\n                if (isHorizontal) {\n                    minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n                    maxChartAreaHeight -= minSize.height;\n                } else {\n                    minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n                    maxChartAreaWidth -= minSize.width;\n                }\n                minBoxSizes.push({\n                    horizontal: isHorizontal,\n                    width: minSize.width,\n                    box: box\n                });\n            }\n            helpers.each(outerBoxes, getMinimumBoxSize);\n            maxPadding = findMaxPadding(outerBoxes);\n            function fitBox(box) {\n                var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minBox) {\n                    return minBox.box === box;\n                });\n                if (minBoxSize) {\n                    if (minBoxSize.horizontal) {\n                        var scaleMargin = {\n                            left: Math.max(outerBoxSizes.left, maxPadding.left),\n                            right: Math.max(outerBoxSizes.right, maxPadding.right),\n                            top: 0,\n                            bottom: 0\n                        };\n                        box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n                    } else {\n                        box.update(minBoxSize.width, maxChartAreaHeight);\n                    }\n                }\n            }\n            helpers.each(verticalBoxes, fitBox);\n            addSizeByPosition(verticalBoxes, outerBoxSizes);\n            helpers.each(horizontalBoxes, fitBox);\n            addSizeByPosition(horizontalBoxes, outerBoxSizes);\n            function finalFitVerticalBox(box) {\n                var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minSize) {\n                    return minSize.box === box;\n                });\n                var scaleMargin = {\n                    left: 0,\n                    right: 0,\n                    top: outerBoxSizes.top,\n                    bottom: outerBoxSizes.bottom\n                };\n                if (minBoxSize) {\n                    box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n                }\n            }\n            helpers.each(verticalBoxes, finalFitVerticalBox);\n            outerBoxSizes = {\n                top: topPadding,\n                left: leftPadding,\n                bottom: bottomPadding,\n                right: rightPadding\n            };\n            addSizeByPosition(outerBoxes, outerBoxSizes);\n            var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n            outerBoxSizes.left += leftPaddingAddition;\n            outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n            var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n            outerBoxSizes.top += topPaddingAddition;\n            outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0);\n            var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n            var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n            if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n                helpers.each(verticalBoxes, function (box) {\n                    box.height = newMaxChartAreaHeight;\n                });\n                helpers.each(horizontalBoxes, function (box) {\n                    if (!box.fullWidth) {\n                        box.width = newMaxChartAreaWidth;\n                    }\n                });\n                maxChartAreaHeight = newMaxChartAreaHeight;\n                maxChartAreaWidth = newMaxChartAreaWidth;\n            }\n            var left = leftPadding + leftPaddingAddition;\n            var top = topPadding + topPaddingAddition;\n            function placeBox(box) {\n                if (box.isHorizontal()) {\n                    box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n                    box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n                    box.top = top;\n                    box.bottom = top + box.height;\n                    top = box.bottom;\n                } else {\n                    box.left = left;\n                    box.right = left + box.width;\n                    box.top = outerBoxSizes.top;\n                    box.bottom = outerBoxSizes.top + maxChartAreaHeight;\n                    left = box.right;\n                }\n            }\n            helpers.each(leftBoxes.concat(topBoxes), placeBox);\n            left += maxChartAreaWidth;\n            top += maxChartAreaHeight;\n            helpers.each(rightBoxes, placeBox);\n            helpers.each(bottomBoxes, placeBox);\n            chart.chartArea = {\n                left: outerBoxSizes.left,\n                top: outerBoxSizes.top,\n                right: outerBoxSizes.left + maxChartAreaWidth,\n                bottom: outerBoxSizes.top + maxChartAreaHeight\n            };\n            helpers.each(chartAreaBoxes, function (box) {\n                box.left = chart.chartArea.left;\n                box.top = chart.chartArea.top;\n                box.right = chart.chartArea.right;\n                box.bottom = chart.chartArea.bottom;\n                box.update(maxChartAreaWidth, maxChartAreaHeight);\n            });\n        }\n    };\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/platforms/platform.basic',[], function () {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    module.exports = {\n        acquireContext: function (item) {\n            if (item && item.canvas) {\n                item = item.canvas;\n            }\n            return item && item.getContext('2d') || null;\n        }\n    };\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/platforms/platform.dom.css',[], function() { return \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\"; });\ndefine('skylark-chartjs/platforms/platform.dom',[\n    '../helpers/index',\n    './platform.dom.css'\n], function (__module__0, __module__1) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var helpers = __module__0;\n    var stylesheet = __module__1;\n    var EXPANDO_KEY = '$chartjs';\n    var CSS_PREFIX = 'chartjs-';\n    var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n    var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n    var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n    var ANIMATION_START_EVENTS = [\n        'animationstart',\n        'webkitAnimationStart'\n    ];\n    var EVENT_TYPES = {\n        touchstart: 'mousedown',\n        touchmove: 'mousemove',\n        touchend: 'mouseup',\n        pointerenter: 'mouseenter',\n        pointerdown: 'mousedown',\n        pointermove: 'mousemove',\n        pointerup: 'mouseup',\n        pointerleave: 'mouseout',\n        pointerout: 'mouseout'\n    };\n    function readUsedSize(element, property) {\n        var value = helpers.getStyle(element, property);\n        var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n        return matches ? Number(matches[1]) : undefined;\n    }\n    function initCanvas(canvas, config) {\n        var style = canvas.style;\n        var renderHeight = canvas.getAttribute('height');\n        var renderWidth = canvas.getAttribute('width');\n        canvas[EXPANDO_KEY] = {\n            initial: {\n                height: renderHeight,\n                width: renderWidth,\n                style: {\n                    display: style.display,\n                    height: style.height,\n                    width: style.width\n                }\n            }\n        };\n        style.display = style.display || 'block';\n        if (renderWidth === null || renderWidth === '') {\n            var displayWidth = readUsedSize(canvas, 'width');\n            if (displayWidth !== undefined) {\n                canvas.width = displayWidth;\n            }\n        }\n        if (renderHeight === null || renderHeight === '') {\n            if (canvas.style.height === '') {\n                canvas.height = canvas.width / (config.options.aspectRatio || 2);\n            } else {\n                var displayHeight = readUsedSize(canvas, 'height');\n                if (displayWidth !== undefined) {\n                    canvas.height = displayHeight;\n                }\n            }\n        }\n        return canvas;\n    }\n    var supportsEventListenerOptions = function () {\n        var supports = false;\n        try {\n            var options = Object.defineProperty({}, 'passive', {\n                get: function () {\n                    supports = true;\n                }\n            });\n            window.addEventListener('e', null, options);\n        } catch (e) {\n        }\n        return supports;\n    }();\n    var eventListenerOptions = supportsEventListenerOptions ? { passive: true } : false;\n    function addListener(node, type, listener) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n    function removeListener(node, type, listener) {\n        node.removeEventListener(type, listener, eventListenerOptions);\n    }\n    function createEvent(type, chart, x, y, nativeEvent) {\n        return {\n            type: type,\n            chart: chart,\n            native: nativeEvent || null,\n            x: x !== undefined ? x : null,\n            y: y !== undefined ? y : null\n        };\n    }\n    function fromNativeEvent(event, chart) {\n        var type = EVENT_TYPES[event.type] || event.type;\n        var pos = helpers.getRelativePosition(event, chart);\n        return createEvent(type, chart, pos.x, pos.y, event);\n    }\n    function throttled(fn, thisArg) {\n        var ticking = false;\n        var args = [];\n        return function () {\n            args = Array.prototype.slice.call(arguments);\n            thisArg = thisArg || this;\n            if (!ticking) {\n                ticking = true;\n                helpers.requestAnimFrame.call(window, function () {\n                    ticking = false;\n                    fn.apply(thisArg, args);\n                });\n            }\n        };\n    }\n    function createDiv(cls) {\n        var el = document.createElement('div');\n        el.className = cls || '';\n        return el;\n    }\n    function createResizer(handler) {\n        var maxSize = 1000000;\n        var resizer = createDiv(CSS_SIZE_MONITOR);\n        var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n        var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n        expand.appendChild(createDiv());\n        shrink.appendChild(createDiv());\n        resizer.appendChild(expand);\n        resizer.appendChild(shrink);\n        resizer._reset = function () {\n            expand.scrollLeft = maxSize;\n            expand.scrollTop = maxSize;\n            shrink.scrollLeft = maxSize;\n            shrink.scrollTop = maxSize;\n        };\n        var onScroll = function () {\n            resizer._reset();\n            handler();\n        };\n        addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n        addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n        return resizer;\n    }\n    function watchForRender(node, handler) {\n        var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n        var proxy = expando.renderProxy = function (e) {\n            if (e.animationName === CSS_RENDER_ANIMATION) {\n                handler();\n            }\n        };\n        helpers.each(ANIMATION_START_EVENTS, function (type) {\n            addListener(node, type, proxy);\n        });\n        expando.reflow = !!node.offsetParent;\n        node.classList.add(CSS_RENDER_MONITOR);\n    }\n    function unwatchForRender(node) {\n        var expando = node[EXPANDO_KEY] || {};\n        var proxy = expando.renderProxy;\n        if (proxy) {\n            helpers.each(ANIMATION_START_EVENTS, function (type) {\n                removeListener(node, type, proxy);\n            });\n            delete expando.renderProxy;\n        }\n        node.classList.remove(CSS_RENDER_MONITOR);\n    }\n    function addResizeListener(node, listener, chart) {\n        var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n        var resizer = expando.resizer = createResizer(throttled(function () {\n            if (expando.resizer) {\n                var container = chart.options.maintainAspectRatio && node.parentNode;\n                var w = container ? container.clientWidth : 0;\n                listener(createEvent('resize', chart));\n                if (container && container.clientWidth < w && chart.canvas) {\n                    listener(createEvent('resize', chart));\n                }\n            }\n        }));\n        watchForRender(node, function () {\n            if (expando.resizer) {\n                var container = node.parentNode;\n                if (container && container !== resizer.parentNode) {\n                    container.insertBefore(resizer, container.firstChild);\n                }\n                resizer._reset();\n            }\n        });\n    }\n    function removeResizeListener(node) {\n        var expando = node[EXPANDO_KEY] || {};\n        var resizer = expando.resizer;\n        delete expando.resizer;\n        unwatchForRender(node);\n        if (resizer && resizer.parentNode) {\n            resizer.parentNode.removeChild(resizer);\n        }\n    }\n    function injectCSS(platform, css) {\n        var style = platform._style || document.createElement('style');\n        if (!platform._style) {\n            platform._style = style;\n            css = '/* Chart.js */\\n' + css;\n            style.setAttribute('type', 'text/css');\n            document.getElementsByTagName('head')[0].appendChild(style);\n        }\n        style.appendChild(document.createTextNode(css));\n    }\n    module.exports = {\n        disableCSSInjection: false,\n        _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n        _ensureLoaded: function () {\n            if (this._loaded) {\n                return;\n            }\n            this._loaded = true;\n            if (!this.disableCSSInjection) {\n                injectCSS(this, stylesheet);\n            }\n        },\n        acquireContext: function (item, config) {\n            if (typeof item === 'string') {\n                item = document.getElementById(item);\n            } else if (item.length) {\n                item = item[0];\n            }\n            if (item && item.canvas) {\n                item = item.canvas;\n            }\n            var context = item && item.getContext && item.getContext('2d');\n            this._ensureLoaded();\n            if (context && context.canvas === item) {\n                initCanvas(item, config);\n                return context;\n            }\n            return null;\n        },\n        releaseContext: function (context) {\n            var canvas = context.canvas;\n            if (!canvas[EXPANDO_KEY]) {\n                return;\n            }\n            var initial = canvas[EXPANDO_KEY].initial;\n            [\n                'height',\n                'width'\n            ].forEach(function (prop) {\n                var value = initial[prop];\n                if (helpers.isNullOrUndef(value)) {\n                    canvas.removeAttribute(prop);\n                } else {\n                    canvas.setAttribute(prop, value);\n                }\n            });\n            helpers.each(initial.style || {}, function (value, key) {\n                canvas.style[key] = value;\n            });\n            canvas.width = canvas.width;\n            delete canvas[EXPANDO_KEY];\n        },\n        addEventListener: function (chart, type, listener) {\n            var canvas = chart.canvas;\n            if (type === 'resize') {\n                addResizeListener(canvas, listener, chart);\n                return;\n            }\n            var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n            var proxies = expando.proxies || (expando.proxies = {});\n            var proxy = proxies[chart.id + '_' + type] = function (event) {\n                listener(fromNativeEvent(event, chart));\n            };\n            addListener(canvas, type, proxy);\n        },\n        removeEventListener: function (chart, type, listener) {\n            var canvas = chart.canvas;\n            if (type === 'resize') {\n                removeResizeListener(canvas);\n                return;\n            }\n            var expando = listener[EXPANDO_KEY] || {};\n            var proxies = expando.proxies || {};\n            var proxy = proxies[chart.id + '_' + type];\n            if (!proxy) {\n                return;\n            }\n            removeListener(canvas, type, proxy);\n        }\n    };\n    helpers.addEvent = addListener;\n    helpers.removeEvent = removeListener;\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/platforms/platform',[\n    '../helpers/index',\n    './platform.basic',\n    './platform.dom'\n], function (__module__0, __module__1, __module__2) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var helpers = __module__0;\n    var basic = __module__1;\n    var dom = __module__2;\n    var implementation = dom._enabled ? dom : basic;\n    module.exports = helpers.extend({\n        initialize: function () {\n        },\n        acquireContext: function () {\n        },\n        releaseContext: function () {\n        },\n        addEventListener: function () {\n        },\n        removeEventListener: function () {\n        }\n    }, implementation);\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/core/core.plugins',[\n    './core.defaults',\n    '../helpers/index'\n], function (__module__0, __module__1) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var defaults = __module__0;\n    var helpers = __module__1;\n    defaults._set('global', { plugins: {} });\n    module.exports = {\n        _plugins: [],\n        _cacheId: 0,\n        register: function (plugins) {\n            var p = this._plugins;\n            [].concat(plugins).forEach(function (plugin) {\n                if (p.indexOf(plugin) === -1) {\n                    p.push(plugin);\n                }\n            });\n            this._cacheId++;\n        },\n        unregister: function (plugins) {\n            var p = this._plugins;\n            [].concat(plugins).forEach(function (plugin) {\n                var idx = p.indexOf(plugin);\n                if (idx !== -1) {\n                    p.splice(idx, 1);\n                }\n            });\n            this._cacheId++;\n        },\n        clear: function () {\n            this._plugins = [];\n            this._cacheId++;\n        },\n        count: function () {\n            return this._plugins.length;\n        },\n        getAll: function () {\n            return this._plugins;\n        },\n        notify: function (chart, hook, args) {\n            var descriptors = this.descriptors(chart);\n            var ilen = descriptors.length;\n            var i, descriptor, plugin, params, method;\n            for (i = 0; i < ilen; ++i) {\n                descriptor = descriptors[i];\n                plugin = descriptor.plugin;\n                method = plugin[hook];\n                if (typeof method === 'function') {\n                    params = [chart].concat(args || []);\n                    params.push(descriptor.options);\n                    if (method.apply(plugin, params) === false) {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        },\n        descriptors: function (chart) {\n            var cache = chart.$plugins || (chart.$plugins = {});\n            if (cache.id === this._cacheId) {\n                return cache.descriptors;\n            }\n            var plugins = [];\n            var descriptors = [];\n            var config = chart && chart.config || {};\n            var options = config.options && config.options.plugins || {};\n            this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n                var idx = plugins.indexOf(plugin);\n                if (idx !== -1) {\n                    return;\n                }\n                var id = plugin.id;\n                var opts = options[id];\n                if (opts === false) {\n                    return;\n                }\n                if (opts === true) {\n                    opts = helpers.clone(defaults.global.plugins[id]);\n                }\n                plugins.push(plugin);\n                descriptors.push({\n                    plugin: plugin,\n                    options: opts || {}\n                });\n            });\n            cache.descriptors = descriptors;\n            cache.id = this._cacheId;\n            return descriptors;\n        },\n        _invalidate: function (chart) {\n            delete chart.$plugins;\n        }\n    };\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/core/core.scaleService',[\n    './core.defaults',\n    '../helpers/index',\n    './core.layouts'\n], function (__module__0, __module__1, __module__2) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var defaults = __module__0;\n    var helpers = __module__1;\n    var layouts = __module__2;\n    module.exports = {\n        constructors: {},\n        defaults: {},\n        registerScaleType: function (type, scaleConstructor, scaleDefaults) {\n            this.constructors[type] = scaleConstructor;\n            this.defaults[type] = helpers.clone(scaleDefaults);\n        },\n        getScaleConstructor: function (type) {\n            return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n        },\n        getScaleDefaults: function (type) {\n            return this.defaults.hasOwnProperty(type) ? helpers.merge({}, [\n                defaults.scale,\n                this.defaults[type]\n            ]) : {};\n        },\n        updateScaleDefaults: function (type, additions) {\n            var me = this;\n            if (me.defaults.hasOwnProperty(type)) {\n                me.defaults[type] = helpers.extend(me.defaults[type], additions);\n            }\n        },\n        addScalesToLayout: function (chart) {\n            helpers.each(chart.scales, function (scale) {\n                scale.fullWidth = scale.options.fullWidth;\n                scale.position = scale.options.position;\n                scale.weight = scale.options.weight;\n                layouts.addBox(chart, scale);\n            });\n        }\n    };\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/core/core.tooltip',[\n    './core.defaults',\n    './core.element',\n    '../helpers/index'\n], function (__module__0, __module__1, __module__2) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var defaults = __module__0;\n    var Element = __module__1;\n    var helpers = __module__2;\n    var valueOrDefault = helpers.valueOrDefault;\n    defaults._set('global', {\n        tooltips: {\n            enabled: true,\n            custom: null,\n            mode: 'nearest',\n            position: 'average',\n            intersect: true,\n            backgroundColor: 'rgba(0,0,0,0.8)',\n            titleFontStyle: 'bold',\n            titleSpacing: 2,\n            titleMarginBottom: 6,\n            titleFontColor: '#fff',\n            titleAlign: 'left',\n            bodySpacing: 2,\n            bodyFontColor: '#fff',\n            bodyAlign: 'left',\n            footerFontStyle: 'bold',\n            footerSpacing: 2,\n            footerMarginTop: 6,\n            footerFontColor: '#fff',\n            footerAlign: 'left',\n            yPadding: 6,\n            xPadding: 6,\n            caretPadding: 2,\n            caretSize: 5,\n            cornerRadius: 6,\n            multiKeyBackground: '#fff',\n            displayColors: true,\n            borderColor: 'rgba(0,0,0,0)',\n            borderWidth: 0,\n            callbacks: {\n                beforeTitle: helpers.noop,\n                title: function (tooltipItems, data) {\n                    var title = '';\n                    var labels = data.labels;\n                    var labelCount = labels ? labels.length : 0;\n                    if (tooltipItems.length > 0) {\n                        var item = tooltipItems[0];\n                        if (item.label) {\n                            title = item.label;\n                        } else if (item.xLabel) {\n                            title = item.xLabel;\n                        } else if (labelCount > 0 && item.index < labelCount) {\n                            title = labels[item.index];\n                        }\n                    }\n                    return title;\n                },\n                afterTitle: helpers.noop,\n                beforeBody: helpers.noop,\n                beforeLabel: helpers.noop,\n                label: function (tooltipItem, data) {\n                    var label = data.datasets[tooltipItem.datasetIndex].label || '';\n                    if (label) {\n                        label += ': ';\n                    }\n                    if (!helpers.isNullOrUndef(tooltipItem.value)) {\n                        label += tooltipItem.value;\n                    } else {\n                        label += tooltipItem.yLabel;\n                    }\n                    return label;\n                },\n                labelColor: function (tooltipItem, chart) {\n                    var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n                    var activeElement = meta.data[tooltipItem.index];\n                    var view = activeElement._view;\n                    return {\n                        borderColor: view.borderColor,\n                        backgroundColor: view.backgroundColor\n                    };\n                },\n                labelTextColor: function () {\n                    return this._options.bodyFontColor;\n                },\n                afterLabel: helpers.noop,\n                afterBody: helpers.noop,\n                beforeFooter: helpers.noop,\n                footer: helpers.noop,\n                afterFooter: helpers.noop\n            }\n        }\n    });\n    var positioners = {\n        average: function (elements) {\n            if (!elements.length) {\n                return false;\n            }\n            var i, len;\n            var x = 0;\n            var y = 0;\n            var count = 0;\n            for (i = 0, len = elements.length; i < len; ++i) {\n                var el = elements[i];\n                if (el && el.hasValue()) {\n                    var pos = el.tooltipPosition();\n                    x += pos.x;\n                    y += pos.y;\n                    ++count;\n                }\n            }\n            return {\n                x: x / count,\n                y: y / count\n            };\n        },\n        nearest: function (elements, eventPosition) {\n            var x = eventPosition.x;\n            var y = eventPosition.y;\n            var minDistance = Number.POSITIVE_INFINITY;\n            var i, len, nearestElement;\n            for (i = 0, len = elements.length; i < len; ++i) {\n                var el = elements[i];\n                if (el && el.hasValue()) {\n                    var center = el.getCenterPoint();\n                    var d = helpers.distanceBetweenPoints(eventPosition, center);\n                    if (d < minDistance) {\n                        minDistance = d;\n                        nearestElement = el;\n                    }\n                }\n            }\n            if (nearestElement) {\n                var tp = nearestElement.tooltipPosition();\n                x = tp.x;\n                y = tp.y;\n            }\n            return {\n                x: x,\n                y: y\n            };\n        }\n    };\n    function pushOrConcat(base, toPush) {\n        if (toPush) {\n            if (helpers.isArray(toPush)) {\n                Array.prototype.push.apply(base, toPush);\n            } else {\n                base.push(toPush);\n            }\n        }\n        return base;\n    }\n    function splitNewlines(str) {\n        if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n            return str.split('\\n');\n        }\n        return str;\n    }\n    function createTooltipItem(element) {\n        var xScale = element._xScale;\n        var yScale = element._yScale || element._scale;\n        var index = element._index;\n        var datasetIndex = element._datasetIndex;\n        var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n        var indexScale = controller._getIndexScale();\n        var valueScale = controller._getValueScale();\n        return {\n            xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n            yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n            label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n            value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n            index: index,\n            datasetIndex: datasetIndex,\n            x: element._model.x,\n            y: element._model.y\n        };\n    }\n    function getBaseModel(tooltipOpts) {\n        var globalDefaults = defaults.global;\n        return {\n            xPadding: tooltipOpts.xPadding,\n            yPadding: tooltipOpts.yPadding,\n            xAlign: tooltipOpts.xAlign,\n            yAlign: tooltipOpts.yAlign,\n            bodyFontColor: tooltipOpts.bodyFontColor,\n            _bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n            _bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n            _bodyAlign: tooltipOpts.bodyAlign,\n            bodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n            bodySpacing: tooltipOpts.bodySpacing,\n            titleFontColor: tooltipOpts.titleFontColor,\n            _titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n            _titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n            titleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n            _titleAlign: tooltipOpts.titleAlign,\n            titleSpacing: tooltipOpts.titleSpacing,\n            titleMarginBottom: tooltipOpts.titleMarginBottom,\n            footerFontColor: tooltipOpts.footerFontColor,\n            _footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n            _footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n            footerFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n            _footerAlign: tooltipOpts.footerAlign,\n            footerSpacing: tooltipOpts.footerSpacing,\n            footerMarginTop: tooltipOpts.footerMarginTop,\n            caretSize: tooltipOpts.caretSize,\n            cornerRadius: tooltipOpts.cornerRadius,\n            backgroundColor: tooltipOpts.backgroundColor,\n            opacity: 0,\n            legendColorBackground: tooltipOpts.multiKeyBackground,\n            displayColors: tooltipOpts.displayColors,\n            borderColor: tooltipOpts.borderColor,\n            borderWidth: tooltipOpts.borderWidth\n        };\n    }\n    function getTooltipSize(tooltip, model) {\n        var ctx = tooltip._chart.ctx;\n        var height = model.yPadding * 2;\n        var width = 0;\n        var body = model.body;\n        var combinedBodyLength = body.reduce(function (count, bodyItem) {\n            return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n        }, 0);\n        combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n        var titleLineCount = model.title.length;\n        var footerLineCount = model.footer.length;\n        var titleFontSize = model.titleFontSize;\n        var bodyFontSize = model.bodyFontSize;\n        var footerFontSize = model.footerFontSize;\n        height += titleLineCount * titleFontSize;\n        height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0;\n        height += titleLineCount ? model.titleMarginBottom : 0;\n        height += combinedBodyLength * bodyFontSize;\n        height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0;\n        height += footerLineCount ? model.footerMarginTop : 0;\n        height += footerLineCount * footerFontSize;\n        height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0;\n        var widthPadding = 0;\n        var maxLineWidth = function (line) {\n            width = Math.max(width, ctx.measureText(line).width + widthPadding);\n        };\n        ctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n        helpers.each(model.title, maxLineWidth);\n        ctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n        helpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n        widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n        helpers.each(body, function (bodyItem) {\n            helpers.each(bodyItem.before, maxLineWidth);\n            helpers.each(bodyItem.lines, maxLineWidth);\n            helpers.each(bodyItem.after, maxLineWidth);\n        });\n        widthPadding = 0;\n        ctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n        helpers.each(model.footer, maxLineWidth);\n        width += 2 * model.xPadding;\n        return {\n            width: width,\n            height: height\n        };\n    }\n    function determineAlignment(tooltip, size) {\n        var model = tooltip._model;\n        var chart = tooltip._chart;\n        var chartArea = tooltip._chart.chartArea;\n        var xAlign = 'center';\n        var yAlign = 'center';\n        if (model.y < size.height) {\n            yAlign = 'top';\n        } else if (model.y > chart.height - size.height) {\n            yAlign = 'bottom';\n        }\n        var lf, rf;\n        var olf, orf;\n        var yf;\n        var midX = (chartArea.left + chartArea.right) / 2;\n        var midY = (chartArea.top + chartArea.bottom) / 2;\n        if (yAlign === 'center') {\n            lf = function (x) {\n                return x <= midX;\n            };\n            rf = function (x) {\n                return x > midX;\n            };\n        } else {\n            lf = function (x) {\n                return x <= size.width / 2;\n            };\n            rf = function (x) {\n                return x >= chart.width - size.width / 2;\n            };\n        }\n        olf = function (x) {\n            return x + size.width + model.caretSize + model.caretPadding > chart.width;\n        };\n        orf = function (x) {\n            return x - size.width - model.caretSize - model.caretPadding < 0;\n        };\n        yf = function (y) {\n            return y <= midY ? 'top' : 'bottom';\n        };\n        if (lf(model.x)) {\n            xAlign = 'left';\n            if (olf(model.x)) {\n                xAlign = 'center';\n                yAlign = yf(model.y);\n            }\n        } else if (rf(model.x)) {\n            xAlign = 'right';\n            if (orf(model.x)) {\n                xAlign = 'center';\n                yAlign = yf(model.y);\n            }\n        }\n        var opts = tooltip._options;\n        return {\n            xAlign: opts.xAlign ? opts.xAlign : xAlign,\n            yAlign: opts.yAlign ? opts.yAlign : yAlign\n        };\n    }\n    function getBackgroundPoint(vm, size, alignment, chart) {\n        var x = vm.x;\n        var y = vm.y;\n        var caretSize = vm.caretSize;\n        var caretPadding = vm.caretPadding;\n        var cornerRadius = vm.cornerRadius;\n        var xAlign = alignment.xAlign;\n        var yAlign = alignment.yAlign;\n        var paddingAndSize = caretSize + caretPadding;\n        var radiusAndPadding = cornerRadius + caretPadding;\n        if (xAlign === 'right') {\n            x -= size.width;\n        } else if (xAlign === 'center') {\n            x -= size.width / 2;\n            if (x + size.width > chart.width) {\n                x = chart.width - size.width;\n            }\n            if (x < 0) {\n                x = 0;\n            }\n        }\n        if (yAlign === 'top') {\n            y += paddingAndSize;\n        } else if (yAlign === 'bottom') {\n            y -= size.height + paddingAndSize;\n        } else {\n            y -= size.height / 2;\n        }\n        if (yAlign === 'center') {\n            if (xAlign === 'left') {\n                x += paddingAndSize;\n            } else if (xAlign === 'right') {\n                x -= paddingAndSize;\n            }\n        } else if (xAlign === 'left') {\n            x -= radiusAndPadding;\n        } else if (xAlign === 'right') {\n            x += radiusAndPadding;\n        }\n        return {\n            x: x,\n            y: y\n        };\n    }\n    function getAlignedX(vm, align) {\n        return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n    }\n    function getBeforeAfterBodyLines(callback) {\n        return pushOrConcat([], splitNewlines(callback));\n    }\n    var exports = Element.extend({\n        initialize: function () {\n            this._model = getBaseModel(this._options);\n            this._lastActive = [];\n        },\n        getTitle: function () {\n            var me = this;\n            var opts = me._options;\n            var callbacks = opts.callbacks;\n            var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n            var title = callbacks.title.apply(me, arguments);\n            var afterTitle = callbacks.afterTitle.apply(me, arguments);\n            var lines = [];\n            lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n            lines = pushOrConcat(lines, splitNewlines(title));\n            lines = pushOrConcat(lines, splitNewlines(afterTitle));\n            return lines;\n        },\n        getBeforeBody: function () {\n            return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n        },\n        getBody: function (tooltipItems, data) {\n            var me = this;\n            var callbacks = me._options.callbacks;\n            var bodyItems = [];\n            helpers.each(tooltipItems, function (tooltipItem) {\n                var bodyItem = {\n                    before: [],\n                    lines: [],\n                    after: []\n                };\n                pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n                pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n                pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n                bodyItems.push(bodyItem);\n            });\n            return bodyItems;\n        },\n        getAfterBody: function () {\n            return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n        },\n        getFooter: function () {\n            var me = this;\n            var callbacks = me._options.callbacks;\n            var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n            var footer = callbacks.footer.apply(me, arguments);\n            var afterFooter = callbacks.afterFooter.apply(me, arguments);\n            var lines = [];\n            lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n            lines = pushOrConcat(lines, splitNewlines(footer));\n            lines = pushOrConcat(lines, splitNewlines(afterFooter));\n            return lines;\n        },\n        update: function (changed) {\n            var me = this;\n            var opts = me._options;\n            var existingModel = me._model;\n            var model = me._model = getBaseModel(opts);\n            var active = me._active;\n            var data = me._data;\n            var alignment = {\n                xAlign: existingModel.xAlign,\n                yAlign: existingModel.yAlign\n            };\n            var backgroundPoint = {\n                x: existingModel.x,\n                y: existingModel.y\n            };\n            var tooltipSize = {\n                width: existingModel.width,\n                height: existingModel.height\n            };\n            var tooltipPosition = {\n                x: existingModel.caretX,\n                y: existingModel.caretY\n            };\n            var i, len;\n            if (active.length) {\n                model.opacity = 1;\n                var labelColors = [];\n                var labelTextColors = [];\n                tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n                var tooltipItems = [];\n                for (i = 0, len = active.length; i < len; ++i) {\n                    tooltipItems.push(createTooltipItem(active[i]));\n                }\n                if (opts.filter) {\n                    tooltipItems = tooltipItems.filter(function (a) {\n                        return opts.filter(a, data);\n                    });\n                }\n                if (opts.itemSort) {\n                    tooltipItems = tooltipItems.sort(function (a, b) {\n                        return opts.itemSort(a, b, data);\n                    });\n                }\n                helpers.each(tooltipItems, function (tooltipItem) {\n                    labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n                    labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n                });\n                model.title = me.getTitle(tooltipItems, data);\n                model.beforeBody = me.getBeforeBody(tooltipItems, data);\n                model.body = me.getBody(tooltipItems, data);\n                model.afterBody = me.getAfterBody(tooltipItems, data);\n                model.footer = me.getFooter(tooltipItems, data);\n                model.x = tooltipPosition.x;\n                model.y = tooltipPosition.y;\n                model.caretPadding = opts.caretPadding;\n                model.labelColors = labelColors;\n                model.labelTextColors = labelTextColors;\n                model.dataPoints = tooltipItems;\n                tooltipSize = getTooltipSize(this, model);\n                alignment = determineAlignment(this, tooltipSize);\n                backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n            } else {\n                model.opacity = 0;\n            }\n            model.xAlign = alignment.xAlign;\n            model.yAlign = alignment.yAlign;\n            model.x = backgroundPoint.x;\n            model.y = backgroundPoint.y;\n            model.width = tooltipSize.width;\n            model.height = tooltipSize.height;\n            model.caretX = tooltipPosition.x;\n            model.caretY = tooltipPosition.y;\n            me._model = model;\n            if (changed && opts.custom) {\n                opts.custom.call(me, model);\n            }\n            return me;\n        },\n        drawCaret: function (tooltipPoint, size) {\n            var ctx = this._chart.ctx;\n            var vm = this._view;\n            var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n            ctx.lineTo(caretPosition.x1, caretPosition.y1);\n            ctx.lineTo(caretPosition.x2, caretPosition.y2);\n            ctx.lineTo(caretPosition.x3, caretPosition.y3);\n        },\n        getCaretPosition: function (tooltipPoint, size, vm) {\n            var x1, x2, x3, y1, y2, y3;\n            var caretSize = vm.caretSize;\n            var cornerRadius = vm.cornerRadius;\n            var xAlign = vm.xAlign;\n            var yAlign = vm.yAlign;\n            var ptX = tooltipPoint.x;\n            var ptY = tooltipPoint.y;\n            var width = size.width;\n            var height = size.height;\n            if (yAlign === 'center') {\n                y2 = ptY + height / 2;\n                if (xAlign === 'left') {\n                    x1 = ptX;\n                    x2 = x1 - caretSize;\n                    x3 = x1;\n                    y1 = y2 + caretSize;\n                    y3 = y2 - caretSize;\n                } else {\n                    x1 = ptX + width;\n                    x2 = x1 + caretSize;\n                    x3 = x1;\n                    y1 = y2 - caretSize;\n                    y3 = y2 + caretSize;\n                }\n            } else {\n                if (xAlign === 'left') {\n                    x2 = ptX + cornerRadius + caretSize;\n                    x1 = x2 - caretSize;\n                    x3 = x2 + caretSize;\n                } else if (xAlign === 'right') {\n                    x2 = ptX + width - cornerRadius - caretSize;\n                    x1 = x2 - caretSize;\n                    x3 = x2 + caretSize;\n                } else {\n                    x2 = vm.caretX;\n                    x1 = x2 - caretSize;\n                    x3 = x2 + caretSize;\n                }\n                if (yAlign === 'top') {\n                    y1 = ptY;\n                    y2 = y1 - caretSize;\n                    y3 = y1;\n                } else {\n                    y1 = ptY + height;\n                    y2 = y1 + caretSize;\n                    y3 = y1;\n                    var tmp = x3;\n                    x3 = x1;\n                    x1 = tmp;\n                }\n            }\n            return {\n                x1: x1,\n                x2: x2,\n                x3: x3,\n                y1: y1,\n                y2: y2,\n                y3: y3\n            };\n        },\n        drawTitle: function (pt, vm, ctx) {\n            var title = vm.title;\n            if (title.length) {\n                pt.x = getAlignedX(vm, vm._titleAlign);\n                ctx.textAlign = vm._titleAlign;\n                ctx.textBaseline = 'top';\n                var titleFontSize = vm.titleFontSize;\n                var titleSpacing = vm.titleSpacing;\n                ctx.fillStyle = vm.titleFontColor;\n                ctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n                var i, len;\n                for (i = 0, len = title.length; i < len; ++i) {\n                    ctx.fillText(title[i], pt.x, pt.y);\n                    pt.y += titleFontSize + titleSpacing;\n                    if (i + 1 === title.length) {\n                        pt.y += vm.titleMarginBottom - titleSpacing;\n                    }\n                }\n            }\n        },\n        drawBody: function (pt, vm, ctx) {\n            var bodyFontSize = vm.bodyFontSize;\n            var bodySpacing = vm.bodySpacing;\n            var bodyAlign = vm._bodyAlign;\n            var body = vm.body;\n            var drawColorBoxes = vm.displayColors;\n            var labelColors = vm.labelColors;\n            var xLinePadding = 0;\n            var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n            var textColor;\n            ctx.textAlign = bodyAlign;\n            ctx.textBaseline = 'top';\n            ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n            pt.x = getAlignedX(vm, bodyAlign);\n            var fillLineOfText = function (line) {\n                ctx.fillText(line, pt.x + xLinePadding, pt.y);\n                pt.y += bodyFontSize + bodySpacing;\n            };\n            ctx.fillStyle = vm.bodyFontColor;\n            helpers.each(vm.beforeBody, fillLineOfText);\n            xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0;\n            helpers.each(body, function (bodyItem, i) {\n                textColor = vm.labelTextColors[i];\n                ctx.fillStyle = textColor;\n                helpers.each(bodyItem.before, fillLineOfText);\n                helpers.each(bodyItem.lines, function (line) {\n                    if (drawColorBoxes) {\n                        ctx.fillStyle = vm.legendColorBackground;\n                        ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n                        ctx.lineWidth = 1;\n                        ctx.strokeStyle = labelColors[i].borderColor;\n                        ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n                        ctx.fillStyle = labelColors[i].backgroundColor;\n                        ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n                        ctx.fillStyle = textColor;\n                    }\n                    fillLineOfText(line);\n                });\n                helpers.each(bodyItem.after, fillLineOfText);\n            });\n            xLinePadding = 0;\n            helpers.each(vm.afterBody, fillLineOfText);\n            pt.y -= bodySpacing;\n        },\n        drawFooter: function (pt, vm, ctx) {\n            var footer = vm.footer;\n            if (footer.length) {\n                pt.x = getAlignedX(vm, vm._footerAlign);\n                pt.y += vm.footerMarginTop;\n                ctx.textAlign = vm._footerAlign;\n                ctx.textBaseline = 'top';\n                ctx.fillStyle = vm.footerFontColor;\n                ctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n                helpers.each(footer, function (line) {\n                    ctx.fillText(line, pt.x, pt.y);\n                    pt.y += vm.footerFontSize + vm.footerSpacing;\n                });\n            }\n        },\n        drawBackground: function (pt, vm, ctx, tooltipSize) {\n            ctx.fillStyle = vm.backgroundColor;\n            ctx.strokeStyle = vm.borderColor;\n            ctx.lineWidth = vm.borderWidth;\n            var xAlign = vm.xAlign;\n            var yAlign = vm.yAlign;\n            var x = pt.x;\n            var y = pt.y;\n            var width = tooltipSize.width;\n            var height = tooltipSize.height;\n            var radius = vm.cornerRadius;\n            ctx.beginPath();\n            ctx.moveTo(x + radius, y);\n            if (yAlign === 'top') {\n                this.drawCaret(pt, tooltipSize);\n            }\n            ctx.lineTo(x + width - radius, y);\n            ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n            if (yAlign === 'center' && xAlign === 'right') {\n                this.drawCaret(pt, tooltipSize);\n            }\n            ctx.lineTo(x + width, y + height - radius);\n            ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n            if (yAlign === 'bottom') {\n                this.drawCaret(pt, tooltipSize);\n            }\n            ctx.lineTo(x + radius, y + height);\n            ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n            if (yAlign === 'center' && xAlign === 'left') {\n                this.drawCaret(pt, tooltipSize);\n            }\n            ctx.lineTo(x, y + radius);\n            ctx.quadraticCurveTo(x, y, x + radius, y);\n            ctx.closePath();\n            ctx.fill();\n            if (vm.borderWidth > 0) {\n                ctx.stroke();\n            }\n        },\n        draw: function () {\n            var ctx = this._chart.ctx;\n            var vm = this._view;\n            if (vm.opacity === 0) {\n                return;\n            }\n            var tooltipSize = {\n                width: vm.width,\n                height: vm.height\n            };\n            var pt = {\n                x: vm.x,\n                y: vm.y\n            };\n            var opacity = Math.abs(vm.opacity < 0.001) ? 0 : vm.opacity;\n            var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n            if (this._options.enabled && hasTooltipContent) {\n                ctx.save();\n                ctx.globalAlpha = opacity;\n                this.drawBackground(pt, vm, ctx, tooltipSize);\n                pt.y += vm.yPadding;\n                this.drawTitle(pt, vm, ctx);\n                this.drawBody(pt, vm, ctx);\n                this.drawFooter(pt, vm, ctx);\n                ctx.restore();\n            }\n        },\n        handleEvent: function (e) {\n            var me = this;\n            var options = me._options;\n            var changed = false;\n            me._lastActive = me._lastActive || [];\n            if (e.type === 'mouseout') {\n                me._active = [];\n            } else {\n                me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n            }\n            changed = !helpers.arrayEquals(me._active, me._lastActive);\n            if (changed) {\n                me._lastActive = me._active;\n                if (options.enabled || options.custom) {\n                    me._eventPosition = {\n                        x: e.x,\n                        y: e.y\n                    };\n                    me.update(true);\n                    me.pivot();\n                }\n            }\n            return changed;\n        }\n    });\n    exports.positioners = positioners;\n    module.exports = exports;\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/core/core.controller',[\n    './core.animation',\n    './core.animations',\n    '../controllers/index',\n    './core.defaults',\n    '../helpers/index',\n    './core.interaction',\n    './core.layouts',\n    '../platforms/platform',\n    './core.plugins',\n    '../core/core.scaleService',\n    './core.tooltip'\n], function (__module__0, __module__1, __module__2, __module__3, __module__4, __module__5, __module__6, __module__7, __module__8, __module__9, __module__10) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var Animation = __module__0;\n    var animations = __module__1;\n    var controllers = __module__2;\n    var defaults = __module__3;\n    var helpers = __module__4;\n    var Interaction = __module__5;\n    var layouts = __module__6;\n    var platform = __module__7;\n    var plugins = __module__8;\n    var scaleService = __module__9;\n    var Tooltip = __module__10;\n    var valueOrDefault = helpers.valueOrDefault;\n    defaults._set('global', {\n        elements: {},\n        events: [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ],\n        hover: {\n            onHover: null,\n            mode: 'nearest',\n            intersect: true,\n            animationDuration: 400\n        },\n        onClick: null,\n        maintainAspectRatio: true,\n        responsive: true,\n        responsiveAnimationDuration: 0\n    });\n    function mergeScaleConfig() {\n        return helpers.merge({}, [].slice.call(arguments), {\n            merger: function (key, target, source, options) {\n                if (key === 'xAxes' || key === 'yAxes') {\n                    var slen = source[key].length;\n                    var i, type, scale;\n                    if (!target[key]) {\n                        target[key] = [];\n                    }\n                    for (i = 0; i < slen; ++i) {\n                        scale = source[key][i];\n                        type = valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n                        if (i >= target[key].length) {\n                            target[key].push({});\n                        }\n                        if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n                            helpers.merge(target[key][i], [\n                                scaleService.getScaleDefaults(type),\n                                scale\n                            ]);\n                        } else {\n                            helpers.merge(target[key][i], scale);\n                        }\n                    }\n                } else {\n                    helpers._merger(key, target, source, options);\n                }\n            }\n        });\n    }\n    function mergeConfig() {\n        return helpers.merge({}, [].slice.call(arguments), {\n            merger: function (key, target, source, options) {\n                var tval = target[key] || {};\n                var sval = source[key];\n                if (key === 'scales') {\n                    target[key] = mergeScaleConfig(tval, sval);\n                } else if (key === 'scale') {\n                    target[key] = helpers.merge(tval, [\n                        scaleService.getScaleDefaults(sval.type),\n                        sval\n                    ]);\n                } else {\n                    helpers._merger(key, target, source, options);\n                }\n            }\n        });\n    }\n    function initConfig(config) {\n        config = config || {};\n        var data = config.data = config.data || {};\n        data.datasets = data.datasets || [];\n        data.labels = data.labels || [];\n        config.options = mergeConfig(defaults.global, defaults[config.type], config.options || {});\n        return config;\n    }\n    function updateConfig(chart) {\n        var newOptions = chart.options;\n        helpers.each(chart.scales, function (scale) {\n            layouts.removeBox(chart, scale);\n        });\n        newOptions = mergeConfig(defaults.global, defaults[chart.config.type], newOptions);\n        chart.options = chart.config.options = newOptions;\n        chart.ensureScalesHaveIDs();\n        chart.buildOrUpdateScales();\n        chart.tooltip._options = newOptions.tooltips;\n        chart.tooltip.initialize();\n    }\n    function positionIsHorizontal(position) {\n        return position === 'top' || position === 'bottom';\n    }\n    var Chart = function (item, config) {\n        this.construct(item, config);\n        return this;\n    };\n    helpers.extend(Chart.prototype, {\n        construct: function (item, config) {\n            var me = this;\n            config = initConfig(config);\n            var context = platform.acquireContext(item, config);\n            var canvas = context && context.canvas;\n            var height = canvas && canvas.height;\n            var width = canvas && canvas.width;\n            me.id = helpers.uid();\n            me.ctx = context;\n            me.canvas = canvas;\n            me.config = config;\n            me.width = width;\n            me.height = height;\n            me.aspectRatio = height ? width / height : null;\n            me.options = config.options;\n            me._bufferedRender = false;\n            me.chart = me;\n            me.controller = me;\n            Chart.instances[me.id] = me;\n            Object.defineProperty(me, 'data', {\n                get: function () {\n                    return me.config.data;\n                },\n                set: function (value) {\n                    me.config.data = value;\n                }\n            });\n            if (!context || !canvas) {\n                console.error(\"Failed to create chart: can't acquire context from the given item\");\n                return;\n            }\n            me.initialize();\n            me.update();\n        },\n        initialize: function () {\n            var me = this;\n            plugins.notify(me, 'beforeInit');\n            helpers.retinaScale(me, me.options.devicePixelRatio);\n            me.bindEvents();\n            if (me.options.responsive) {\n                me.resize(true);\n            }\n            me.ensureScalesHaveIDs();\n            me.buildOrUpdateScales();\n            me.initToolTip();\n            plugins.notify(me, 'afterInit');\n            return me;\n        },\n        clear: function () {\n            helpers.canvas.clear(this);\n            return this;\n        },\n        stop: function () {\n            animations.cancelAnimation(this);\n            return this;\n        },\n        resize: function (silent) {\n            var me = this;\n            var options = me.options;\n            var canvas = me.canvas;\n            var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null;\n            var newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n            var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n            if (me.width === newWidth && me.height === newHeight) {\n                return;\n            }\n            canvas.width = me.width = newWidth;\n            canvas.height = me.height = newHeight;\n            canvas.style.width = newWidth + 'px';\n            canvas.style.height = newHeight + 'px';\n            helpers.retinaScale(me, options.devicePixelRatio);\n            if (!silent) {\n                var newSize = {\n                    width: newWidth,\n                    height: newHeight\n                };\n                plugins.notify(me, 'resize', [newSize]);\n                if (options.onResize) {\n                    options.onResize(me, newSize);\n                }\n                me.stop();\n                me.update({ duration: options.responsiveAnimationDuration });\n            }\n        },\n        ensureScalesHaveIDs: function () {\n            var options = this.options;\n            var scalesOptions = options.scales || {};\n            var scaleOptions = options.scale;\n            helpers.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n                xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n            });\n            helpers.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n                yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n            });\n            if (scaleOptions) {\n                scaleOptions.id = scaleOptions.id || 'scale';\n            }\n        },\n        buildOrUpdateScales: function () {\n            var me = this;\n            var options = me.options;\n            var scales = me.scales || {};\n            var items = [];\n            var updated = Object.keys(scales).reduce(function (obj, id) {\n                obj[id] = false;\n                return obj;\n            }, {});\n            if (options.scales) {\n                items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n                    return {\n                        options: xAxisOptions,\n                        dtype: 'category',\n                        dposition: 'bottom'\n                    };\n                }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n                    return {\n                        options: yAxisOptions,\n                        dtype: 'linear',\n                        dposition: 'left'\n                    };\n                }));\n            }\n            if (options.scale) {\n                items.push({\n                    options: options.scale,\n                    dtype: 'radialLinear',\n                    isDefault: true,\n                    dposition: 'chartArea'\n                });\n            }\n            helpers.each(items, function (item) {\n                var scaleOptions = item.options;\n                var id = scaleOptions.id;\n                var scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n                if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n                    scaleOptions.position = item.dposition;\n                }\n                updated[id] = true;\n                var scale = null;\n                if (id in scales && scales[id].type === scaleType) {\n                    scale = scales[id];\n                    scale.options = scaleOptions;\n                    scale.ctx = me.ctx;\n                    scale.chart = me;\n                } else {\n                    var scaleClass = scaleService.getScaleConstructor(scaleType);\n                    if (!scaleClass) {\n                        return;\n                    }\n                    scale = new scaleClass({\n                        id: id,\n                        type: scaleType,\n                        options: scaleOptions,\n                        ctx: me.ctx,\n                        chart: me\n                    });\n                    scales[scale.id] = scale;\n                }\n                scale.mergeTicksOptions();\n                if (item.isDefault) {\n                    me.scale = scale;\n                }\n            });\n            helpers.each(updated, function (hasUpdated, id) {\n                if (!hasUpdated) {\n                    delete scales[id];\n                }\n            });\n            me.scales = scales;\n            scaleService.addScalesToLayout(this);\n        },\n        buildOrUpdateControllers: function () {\n            var me = this;\n            var newControllers = [];\n            helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n                var meta = me.getDatasetMeta(datasetIndex);\n                var type = dataset.type || me.config.type;\n                if (meta.type && meta.type !== type) {\n                    me.destroyDatasetMeta(datasetIndex);\n                    meta = me.getDatasetMeta(datasetIndex);\n                }\n                meta.type = type;\n                if (meta.controller) {\n                    meta.controller.updateIndex(datasetIndex);\n                    meta.controller.linkScales();\n                } else {\n                    var ControllerClass = controllers[meta.type];\n                    if (ControllerClass === undefined) {\n                        throw new Error('\"' + meta.type + '\" is not a chart type.');\n                    }\n                    meta.controller = new ControllerClass(me, datasetIndex);\n                    newControllers.push(meta.controller);\n                }\n            }, me);\n            return newControllers;\n        },\n        resetElements: function () {\n            var me = this;\n            helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n                me.getDatasetMeta(datasetIndex).controller.reset();\n            }, me);\n        },\n        reset: function () {\n            this.resetElements();\n            this.tooltip.initialize();\n        },\n        update: function (config) {\n            var me = this;\n            if (!config || typeof config !== 'object') {\n                config = {\n                    duration: config,\n                    lazy: arguments[1]\n                };\n            }\n            updateConfig(me);\n            plugins._invalidate(me);\n            if (plugins.notify(me, 'beforeUpdate') === false) {\n                return;\n            }\n            me.tooltip._data = me.data;\n            var newControllers = me.buildOrUpdateControllers();\n            helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n                me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n            }, me);\n            me.updateLayout();\n            if (me.options.animation && me.options.animation.duration) {\n                helpers.each(newControllers, function (controller) {\n                    controller.reset();\n                });\n            }\n            me.updateDatasets();\n            me.tooltip.initialize();\n            me.lastActive = [];\n            plugins.notify(me, 'afterUpdate');\n            if (me._bufferedRender) {\n                me._bufferedRequest = {\n                    duration: config.duration,\n                    easing: config.easing,\n                    lazy: config.lazy\n                };\n            } else {\n                me.render(config);\n            }\n        },\n        updateLayout: function () {\n            var me = this;\n            if (plugins.notify(me, 'beforeLayout') === false) {\n                return;\n            }\n            layouts.update(this, this.width, this.height);\n            plugins.notify(me, 'afterScaleUpdate');\n            plugins.notify(me, 'afterLayout');\n        },\n        updateDatasets: function () {\n            var me = this;\n            if (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n                return;\n            }\n            for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n                me.updateDataset(i);\n            }\n            plugins.notify(me, 'afterDatasetsUpdate');\n        },\n        updateDataset: function (index) {\n            var me = this;\n            var meta = me.getDatasetMeta(index);\n            var args = {\n                meta: meta,\n                index: index\n            };\n            if (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n                return;\n            }\n            meta.controller.update();\n            plugins.notify(me, 'afterDatasetUpdate', [args]);\n        },\n        render: function (config) {\n            var me = this;\n            if (!config || typeof config !== 'object') {\n                config = {\n                    duration: config,\n                    lazy: arguments[1]\n                };\n            }\n            var animationOptions = me.options.animation;\n            var duration = valueOrDefault(config.duration, animationOptions && animationOptions.duration);\n            var lazy = config.lazy;\n            if (plugins.notify(me, 'beforeRender') === false) {\n                return;\n            }\n            var onComplete = function (animation) {\n                plugins.notify(me, 'afterRender');\n                helpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n            };\n            if (animationOptions && duration) {\n                var animation = new Animation({\n                    numSteps: duration / 16.66,\n                    easing: config.easing || animationOptions.easing,\n                    render: function (chart, animationObject) {\n                        var easingFunction = helpers.easing.effects[animationObject.easing];\n                        var currentStep = animationObject.currentStep;\n                        var stepDecimal = currentStep / animationObject.numSteps;\n                        chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n                    },\n                    onAnimationProgress: animationOptions.onProgress,\n                    onAnimationComplete: onComplete\n                });\n                animations.addAnimation(me, animation, duration, lazy);\n            } else {\n                me.draw();\n                onComplete(new Animation({\n                    numSteps: 0,\n                    chart: me\n                }));\n            }\n            return me;\n        },\n        draw: function (easingValue) {\n            var me = this;\n            me.clear();\n            if (helpers.isNullOrUndef(easingValue)) {\n                easingValue = 1;\n            }\n            me.transition(easingValue);\n            if (me.width <= 0 || me.height <= 0) {\n                return;\n            }\n            if (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n                return;\n            }\n            helpers.each(me.boxes, function (box) {\n                box.draw(me.chartArea);\n            }, me);\n            me.drawDatasets(easingValue);\n            me._drawTooltip(easingValue);\n            plugins.notify(me, 'afterDraw', [easingValue]);\n        },\n        transition: function (easingValue) {\n            var me = this;\n            for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n                if (me.isDatasetVisible(i)) {\n                    me.getDatasetMeta(i).controller.transition(easingValue);\n                }\n            }\n            me.tooltip.transition(easingValue);\n        },\n        drawDatasets: function (easingValue) {\n            var me = this;\n            if (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n                return;\n            }\n            for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n                if (me.isDatasetVisible(i)) {\n                    me.drawDataset(i, easingValue);\n                }\n            }\n            plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n        },\n        drawDataset: function (index, easingValue) {\n            var me = this;\n            var meta = me.getDatasetMeta(index);\n            var args = {\n                meta: meta,\n                index: index,\n                easingValue: easingValue\n            };\n            if (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n                return;\n            }\n            meta.controller.draw(easingValue);\n            plugins.notify(me, 'afterDatasetDraw', [args]);\n        },\n        _drawTooltip: function (easingValue) {\n            var me = this;\n            var tooltip = me.tooltip;\n            var args = {\n                tooltip: tooltip,\n                easingValue: easingValue\n            };\n            if (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n                return;\n            }\n            tooltip.draw();\n            plugins.notify(me, 'afterTooltipDraw', [args]);\n        },\n        getElementAtEvent: function (e) {\n            return Interaction.modes.single(this, e);\n        },\n        getElementsAtEvent: function (e) {\n            return Interaction.modes.label(this, e, { intersect: true });\n        },\n        getElementsAtXAxis: function (e) {\n            return Interaction.modes['x-axis'](this, e, { intersect: true });\n        },\n        getElementsAtEventForMode: function (e, mode, options) {\n            var method = Interaction.modes[mode];\n            if (typeof method === 'function') {\n                return method(this, e, options);\n            }\n            return [];\n        },\n        getDatasetAtEvent: function (e) {\n            return Interaction.modes.dataset(this, e, { intersect: true });\n        },\n        getDatasetMeta: function (datasetIndex) {\n            var me = this;\n            var dataset = me.data.datasets[datasetIndex];\n            if (!dataset._meta) {\n                dataset._meta = {};\n            }\n            var meta = dataset._meta[me.id];\n            if (!meta) {\n                meta = dataset._meta[me.id] = {\n                    type: null,\n                    data: [],\n                    dataset: null,\n                    controller: null,\n                    hidden: null,\n                    xAxisID: null,\n                    yAxisID: null\n                };\n            }\n            return meta;\n        },\n        getVisibleDatasetCount: function () {\n            var count = 0;\n            for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n                if (this.isDatasetVisible(i)) {\n                    count++;\n                }\n            }\n            return count;\n        },\n        isDatasetVisible: function (datasetIndex) {\n            var meta = this.getDatasetMeta(datasetIndex);\n            return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n        },\n        generateLegend: function () {\n            return this.options.legendCallback(this);\n        },\n        destroyDatasetMeta: function (datasetIndex) {\n            var id = this.id;\n            var dataset = this.data.datasets[datasetIndex];\n            var meta = dataset._meta && dataset._meta[id];\n            if (meta) {\n                meta.controller.destroy();\n                delete dataset._meta[id];\n            }\n        },\n        destroy: function () {\n            var me = this;\n            var canvas = me.canvas;\n            var i, ilen;\n            me.stop();\n            for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n                me.destroyDatasetMeta(i);\n            }\n            if (canvas) {\n                me.unbindEvents();\n                helpers.canvas.clear(me);\n                platform.releaseContext(me.ctx);\n                me.canvas = null;\n                me.ctx = null;\n            }\n            plugins.notify(me, 'destroy');\n            delete Chart.instances[me.id];\n        },\n        toBase64Image: function () {\n            return this.canvas.toDataURL.apply(this.canvas, arguments);\n        },\n        initToolTip: function () {\n            var me = this;\n            me.tooltip = new Tooltip({\n                _chart: me,\n                _chartInstance: me,\n                _data: me.data,\n                _options: me.options.tooltips\n            }, me);\n        },\n        bindEvents: function () {\n            var me = this;\n            var listeners = me._listeners = {};\n            var listener = function () {\n                me.eventHandler.apply(me, arguments);\n            };\n            helpers.each(me.options.events, function (type) {\n                platform.addEventListener(me, type, listener);\n                listeners[type] = listener;\n            });\n            if (me.options.responsive) {\n                listener = function () {\n                    me.resize();\n                };\n                platform.addEventListener(me, 'resize', listener);\n                listeners.resize = listener;\n            }\n        },\n        unbindEvents: function () {\n            var me = this;\n            var listeners = me._listeners;\n            if (!listeners) {\n                return;\n            }\n            delete me._listeners;\n            helpers.each(listeners, function (listener, type) {\n                platform.removeEventListener(me, type, listener);\n            });\n        },\n        updateHoverStyle: function (elements, mode, enabled) {\n            var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n            var element, i, ilen;\n            for (i = 0, ilen = elements.length; i < ilen; ++i) {\n                element = elements[i];\n                if (element) {\n                    this.getDatasetMeta(element._datasetIndex).controller[method](element);\n                }\n            }\n        },\n        eventHandler: function (e) {\n            var me = this;\n            var tooltip = me.tooltip;\n            if (plugins.notify(me, 'beforeEvent', [e]) === false) {\n                return;\n            }\n            me._bufferedRender = true;\n            me._bufferedRequest = null;\n            var changed = me.handleEvent(e);\n            if (tooltip) {\n                changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n            }\n            plugins.notify(me, 'afterEvent', [e]);\n            var bufferedRequest = me._bufferedRequest;\n            if (bufferedRequest) {\n                me.render(bufferedRequest);\n            } else if (changed && !me.animating) {\n                me.stop();\n                me.render({\n                    duration: me.options.hover.animationDuration,\n                    lazy: true\n                });\n            }\n            me._bufferedRender = false;\n            me._bufferedRequest = null;\n            return me;\n        },\n        handleEvent: function (e) {\n            var me = this;\n            var options = me.options || {};\n            var hoverOptions = options.hover;\n            var changed = false;\n            me.lastActive = me.lastActive || [];\n            if (e.type === 'mouseout') {\n                me.active = [];\n            } else {\n                me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n            }\n            helpers.callback(options.onHover || options.hover.onHover, [\n                e.native,\n                me.active\n            ], me);\n            if (e.type === 'mouseup' || e.type === 'click') {\n                if (options.onClick) {\n                    options.onClick.call(me, e.native, me.active);\n                }\n            }\n            if (me.lastActive.length) {\n                me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n            }\n            if (me.active.length && hoverOptions.mode) {\n                me.updateHoverStyle(me.active, hoverOptions.mode, true);\n            }\n            changed = !helpers.arrayEquals(me.active, me.lastActive);\n            me.lastActive = me.active;\n            return changed;\n        }\n    });\n    Chart.instances = {};\n    module.exports = Chart;\n    Chart.Controller = Chart;\n    Chart.types = {};\n    helpers.configMerge = mergeConfig;\n    helpers.scaleMerge = mergeScaleConfig;\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/core/core.helpers',[\n    '../../packages/chartjs-color',\n    './core.defaults',\n    '../helpers/index'\n], function (__module__0, __module__1, __module__2) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var color = __module__0;\n    var defaults = __module__1;\n    var helpers = __module__2;\n    module.exports = function () {\n        helpers.where = function (collection, filterCallback) {\n            if (helpers.isArray(collection) && Array.prototype.filter) {\n                return collection.filter(filterCallback);\n            }\n            var filtered = [];\n            helpers.each(collection, function (item) {\n                if (filterCallback(item)) {\n                    filtered.push(item);\n                }\n            });\n            return filtered;\n        };\n        helpers.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n            return array.findIndex(callback, scope);\n        } : function (array, callback, scope) {\n            scope = scope === undefined ? array : scope;\n            for (var i = 0, ilen = array.length; i < ilen; ++i) {\n                if (callback.call(scope, array[i], i, array)) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n        helpers.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n            if (helpers.isNullOrUndef(startIndex)) {\n                startIndex = -1;\n            }\n            for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n                var currentItem = arrayToSearch[i];\n                if (filterCallback(currentItem)) {\n                    return currentItem;\n                }\n            }\n        };\n        helpers.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n            if (helpers.isNullOrUndef(startIndex)) {\n                startIndex = arrayToSearch.length;\n            }\n            for (var i = startIndex - 1; i >= 0; i--) {\n                var currentItem = arrayToSearch[i];\n                if (filterCallback(currentItem)) {\n                    return currentItem;\n                }\n            }\n        };\n        helpers.isNumber = function (n) {\n            return !isNaN(parseFloat(n)) && isFinite(n);\n        };\n        helpers.almostEquals = function (x, y, epsilon) {\n            return Math.abs(x - y) < epsilon;\n        };\n        helpers.almostWhole = function (x, epsilon) {\n            var rounded = Math.round(x);\n            return rounded - epsilon < x && rounded + epsilon > x;\n        };\n        helpers.max = function (array) {\n            return array.reduce(function (max, value) {\n                if (!isNaN(value)) {\n                    return Math.max(max, value);\n                }\n                return max;\n            }, Number.NEGATIVE_INFINITY);\n        };\n        helpers.min = function (array) {\n            return array.reduce(function (min, value) {\n                if (!isNaN(value)) {\n                    return Math.min(min, value);\n                }\n                return min;\n            }, Number.POSITIVE_INFINITY);\n        };\n        helpers.sign = Math.sign ? function (x) {\n            return Math.sign(x);\n        } : function (x) {\n            x = +x;\n            if (x === 0 || isNaN(x)) {\n                return x;\n            }\n            return x > 0 ? 1 : -1;\n        };\n        helpers.log10 = Math.log10 ? function (x) {\n            return Math.log10(x);\n        } : function (x) {\n            var exponent = Math.log(x) * Math.LOG10E;\n            var powerOf10 = Math.round(exponent);\n            var isPowerOf10 = x === Math.pow(10, powerOf10);\n            return isPowerOf10 ? powerOf10 : exponent;\n        };\n        helpers.toRadians = function (degrees) {\n            return degrees * (Math.PI / 180);\n        };\n        helpers.toDegrees = function (radians) {\n            return radians * (180 / Math.PI);\n        };\n        helpers._decimalPlaces = function (x) {\n            if (!helpers.isFinite(x)) {\n                return;\n            }\n            var e = 1;\n            var p = 0;\n            while (Math.round(x * e) / e !== x) {\n                e *= 10;\n                p++;\n            }\n            return p;\n        };\n        helpers.getAngleFromPoint = function (centrePoint, anglePoint) {\n            var distanceFromXCenter = anglePoint.x - centrePoint.x;\n            var distanceFromYCenter = anglePoint.y - centrePoint.y;\n            var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n            var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n            if (angle < -0.5 * Math.PI) {\n                angle += 2 * Math.PI;\n            }\n            return {\n                angle: angle,\n                distance: radialDistanceFromCenter\n            };\n        };\n        helpers.distanceBetweenPoints = function (pt1, pt2) {\n            return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n        };\n        helpers.aliasPixel = function (pixelWidth) {\n            return pixelWidth % 2 === 0 ? 0 : 0.5;\n        };\n        helpers._alignPixel = function (chart, pixel, width) {\n            var devicePixelRatio = chart.currentDevicePixelRatio;\n            var halfWidth = width / 2;\n            return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n        };\n        helpers.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n            var previous = firstPoint.skip ? middlePoint : firstPoint;\n            var current = middlePoint;\n            var next = afterPoint.skip ? middlePoint : afterPoint;\n            var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n            var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n            var s01 = d01 / (d01 + d12);\n            var s12 = d12 / (d01 + d12);\n            s01 = isNaN(s01) ? 0 : s01;\n            s12 = isNaN(s12) ? 0 : s12;\n            var fa = t * s01;\n            var fb = t * s12;\n            return {\n                previous: {\n                    x: current.x - fa * (next.x - previous.x),\n                    y: current.y - fa * (next.y - previous.y)\n                },\n                next: {\n                    x: current.x + fb * (next.x - previous.x),\n                    y: current.y + fb * (next.y - previous.y)\n                }\n            };\n        };\n        helpers.EPSILON = Number.EPSILON || 1e-14;\n        helpers.splineCurveMonotone = function (points) {\n            var pointsWithTangents = (points || []).map(function (point) {\n                return {\n                    model: point._model,\n                    deltaK: 0,\n                    mK: 0\n                };\n            });\n            var pointsLen = pointsWithTangents.length;\n            var i, pointBefore, pointCurrent, pointAfter;\n            for (i = 0; i < pointsLen; ++i) {\n                pointCurrent = pointsWithTangents[i];\n                if (pointCurrent.model.skip) {\n                    continue;\n                }\n                pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n                pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n                if (pointAfter && !pointAfter.model.skip) {\n                    var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x;\n                    pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n                }\n                if (!pointBefore || pointBefore.model.skip) {\n                    pointCurrent.mK = pointCurrent.deltaK;\n                } else if (!pointAfter || pointAfter.model.skip) {\n                    pointCurrent.mK = pointBefore.deltaK;\n                } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n                    pointCurrent.mK = 0;\n                } else {\n                    pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n                }\n            }\n            var alphaK, betaK, tauK, squaredMagnitude;\n            for (i = 0; i < pointsLen - 1; ++i) {\n                pointCurrent = pointsWithTangents[i];\n                pointAfter = pointsWithTangents[i + 1];\n                if (pointCurrent.model.skip || pointAfter.model.skip) {\n                    continue;\n                }\n                if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n                    pointCurrent.mK = pointAfter.mK = 0;\n                    continue;\n                }\n                alphaK = pointCurrent.mK / pointCurrent.deltaK;\n                betaK = pointAfter.mK / pointCurrent.deltaK;\n                squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n                if (squaredMagnitude <= 9) {\n                    continue;\n                }\n                tauK = 3 / Math.sqrt(squaredMagnitude);\n                pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n                pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n            }\n            var deltaX;\n            for (i = 0; i < pointsLen; ++i) {\n                pointCurrent = pointsWithTangents[i];\n                if (pointCurrent.model.skip) {\n                    continue;\n                }\n                pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n                pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n                if (pointBefore && !pointBefore.model.skip) {\n                    deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n                    pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n                    pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n                }\n                if (pointAfter && !pointAfter.model.skip) {\n                    deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n                    pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n                    pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n                }\n            }\n        };\n        helpers.nextItem = function (collection, index, loop) {\n            if (loop) {\n                return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n            }\n            return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n        };\n        helpers.previousItem = function (collection, index, loop) {\n            if (loop) {\n                return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n            }\n            return index <= 0 ? collection[0] : collection[index - 1];\n        };\n        helpers.niceNum = function (range, round) {\n            var exponent = Math.floor(helpers.log10(range));\n            var fraction = range / Math.pow(10, exponent);\n            var niceFraction;\n            if (round) {\n                if (fraction < 1.5) {\n                    niceFraction = 1;\n                } else if (fraction < 3) {\n                    niceFraction = 2;\n                } else if (fraction < 7) {\n                    niceFraction = 5;\n                } else {\n                    niceFraction = 10;\n                }\n            } else if (fraction <= 1) {\n                niceFraction = 1;\n            } else if (fraction <= 2) {\n                niceFraction = 2;\n            } else if (fraction <= 5) {\n                niceFraction = 5;\n            } else {\n                niceFraction = 10;\n            }\n            return niceFraction * Math.pow(10, exponent);\n        };\n        helpers.requestAnimFrame = function () {\n            if (typeof window === 'undefined') {\n                return function (callback) {\n                    callback();\n                };\n            }\n            return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n                return window.setTimeout(callback, 1000 / 60);\n            };\n        }();\n        helpers.getRelativePosition = function (evt, chart) {\n            var mouseX, mouseY;\n            var e = evt.originalEvent || evt;\n            var canvas = evt.target || evt.srcElement;\n            var boundingRect = canvas.getBoundingClientRect();\n            var touches = e.touches;\n            if (touches && touches.length > 0) {\n                mouseX = touches[0].clientX;\n                mouseY = touches[0].clientY;\n            } else {\n                mouseX = e.clientX;\n                mouseY = e.clientY;\n            }\n            var paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n            var paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n            var paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n            var paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n            var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n            var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n            mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n            mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n            return {\n                x: mouseX,\n                y: mouseY\n            };\n        };\n        function parseMaxStyle(styleValue, node, parentProperty) {\n            var valueInPixels;\n            if (typeof styleValue === 'string') {\n                valueInPixels = parseInt(styleValue, 10);\n                if (styleValue.indexOf('%') !== -1) {\n                    valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n                }\n            } else {\n                valueInPixels = styleValue;\n            }\n            return valueInPixels;\n        }\n        function isConstrainedValue(value) {\n            return value !== undefined && value !== null && value !== 'none';\n        }\n        function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n            var view = document.defaultView;\n            var parentNode = helpers._getParentNode(domNode);\n            var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n            var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n            var hasCNode = isConstrainedValue(constrainedNode);\n            var hasCContainer = isConstrainedValue(constrainedContainer);\n            var infinity = Number.POSITIVE_INFINITY;\n            if (hasCNode || hasCContainer) {\n                return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n            }\n            return 'none';\n        }\n        helpers.getConstraintWidth = function (domNode) {\n            return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n        };\n        helpers.getConstraintHeight = function (domNode) {\n            return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n        };\n        helpers._calculatePadding = function (container, padding, parentDimension) {\n            padding = helpers.getStyle(container, padding);\n            return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n        };\n        helpers._getParentNode = function (domNode) {\n            var parent = domNode.parentNode;\n            if (parent && parent.toString() === '[object ShadowRoot]') {\n                parent = parent.host;\n            }\n            return parent;\n        };\n        helpers.getMaximumWidth = function (domNode) {\n            var container = helpers._getParentNode(domNode);\n            if (!container) {\n                return domNode.clientWidth;\n            }\n            var clientWidth = container.clientWidth;\n            var paddingLeft = helpers._calculatePadding(container, 'padding-left', clientWidth);\n            var paddingRight = helpers._calculatePadding(container, 'padding-right', clientWidth);\n            var w = clientWidth - paddingLeft - paddingRight;\n            var cw = helpers.getConstraintWidth(domNode);\n            return isNaN(cw) ? w : Math.min(w, cw);\n        };\n        helpers.getMaximumHeight = function (domNode) {\n            var container = helpers._getParentNode(domNode);\n            if (!container) {\n                return domNode.clientHeight;\n            }\n            var clientHeight = container.clientHeight;\n            var paddingTop = helpers._calculatePadding(container, 'padding-top', clientHeight);\n            var paddingBottom = helpers._calculatePadding(container, 'padding-bottom', clientHeight);\n            var h = clientHeight - paddingTop - paddingBottom;\n            var ch = helpers.getConstraintHeight(domNode);\n            return isNaN(ch) ? h : Math.min(h, ch);\n        };\n        helpers.getStyle = function (el, property) {\n            return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n        };\n        helpers.retinaScale = function (chart, forceRatio) {\n            var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n            if (pixelRatio === 1) {\n                return;\n            }\n            var canvas = chart.canvas;\n            var height = chart.height;\n            var width = chart.width;\n            canvas.height = height * pixelRatio;\n            canvas.width = width * pixelRatio;\n            chart.ctx.scale(pixelRatio, pixelRatio);\n            if (!canvas.style.height && !canvas.style.width) {\n                canvas.style.height = height + 'px';\n                canvas.style.width = width + 'px';\n            }\n        };\n        helpers.fontString = function (pixelSize, fontStyle, fontFamily) {\n            return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n        };\n        helpers.longestText = function (ctx, font, arrayOfThings, cache) {\n            cache = cache || {};\n            var data = cache.data = cache.data || {};\n            var gc = cache.garbageCollect = cache.garbageCollect || [];\n            if (cache.font !== font) {\n                data = cache.data = {};\n                gc = cache.garbageCollect = [];\n                cache.font = font;\n            }\n            ctx.font = font;\n            var longest = 0;\n            helpers.each(arrayOfThings, function (thing) {\n                if (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n                    longest = helpers.measureText(ctx, data, gc, longest, thing);\n                } else if (helpers.isArray(thing)) {\n                    helpers.each(thing, function (nestedThing) {\n                        if (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n                            longest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n                        }\n                    });\n                }\n            });\n            var gcLen = gc.length / 2;\n            if (gcLen > arrayOfThings.length) {\n                for (var i = 0; i < gcLen; i++) {\n                    delete data[gc[i]];\n                }\n                gc.splice(0, gcLen);\n            }\n            return longest;\n        };\n        helpers.measureText = function (ctx, data, gc, longest, string) {\n            var textWidth = data[string];\n            if (!textWidth) {\n                textWidth = data[string] = ctx.measureText(string).width;\n                gc.push(string);\n            }\n            if (textWidth > longest) {\n                longest = textWidth;\n            }\n            return longest;\n        };\n        helpers.numberOfLabelLines = function (arrayOfThings) {\n            var numberOfLines = 1;\n            helpers.each(arrayOfThings, function (thing) {\n                if (helpers.isArray(thing)) {\n                    if (thing.length > numberOfLines) {\n                        numberOfLines = thing.length;\n                    }\n                }\n            });\n            return numberOfLines;\n        };\n        helpers.color = !color ? function (value) {\n            console.error('Color.js not found!');\n            return value;\n        } : function (value) {\n            if (value instanceof CanvasGradient) {\n                value = defaults.global.defaultColor;\n            }\n            return color(value);\n        };\n        helpers.getHoverColor = function (colorValue) {\n            return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n        };\n    };\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/core/core.adapters',['../helpers/index'], function (__module__0) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var helpers = __module__0;\n    function abstract() {\n        throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n    }\n    function DateAdapter(options) {\n        this.options = options || {};\n    }\n    helpers.extend(DateAdapter.prototype, {\n        formats: abstract,\n        parse: abstract,\n        format: abstract,\n        add: abstract,\n        diff: abstract,\n        startOf: abstract,\n        endOf: abstract,\n        _create: function (value) {\n            return value;\n        }\n    });\n    DateAdapter.override = function (members) {\n        helpers.extend(DateAdapter.prototype, members);\n    };\n    module.exports._date = DateAdapter;\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/core/core.ticks',['../helpers/index'], function (__module__0) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var helpers = __module__0;\n    module.exports = {\n        formatters: {\n            values: function (value) {\n                return helpers.isArray(value) ? value : '' + value;\n            },\n            linear: function (tickValue, index, ticks) {\n                var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n                if (Math.abs(delta) > 1) {\n                    if (tickValue !== Math.floor(tickValue)) {\n                        delta = tickValue - Math.floor(tickValue);\n                    }\n                }\n                var logDelta = helpers.log10(Math.abs(delta));\n                var tickString = '';\n                if (tickValue !== 0) {\n                    var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n                    if (maxTick < 0.0001) {\n                        var logTick = helpers.log10(Math.abs(tickValue));\n                        tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n                    } else {\n                        var numDecimal = -1 * Math.floor(logDelta);\n                        numDecimal = Math.max(Math.min(numDecimal, 20), 0);\n                        tickString = tickValue.toFixed(numDecimal);\n                    }\n                } else {\n                    tickString = '0';\n                }\n                return tickString;\n            },\n            logarithmic: function (tickValue, index, ticks) {\n                var remain = tickValue / Math.pow(10, Math.floor(helpers.log10(tickValue)));\n                if (tickValue === 0) {\n                    return '0';\n                } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n                    return tickValue.toExponential();\n                }\n                return '';\n            }\n        }\n    };\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/core/core.scale',[\n    './core.defaults',\n    './core.element',\n    '../helpers/index',\n    './core.ticks'\n], function (__module__0, __module__1, __module__2, __module__3) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var defaults = __module__0;\n    var Element = __module__1;\n    var helpers = __module__2;\n    var Ticks = __module__3;\n    var valueOrDefault = helpers.valueOrDefault;\n    var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n    defaults._set('scale', {\n        display: true,\n        position: 'left',\n        offset: false,\n        gridLines: {\n            display: true,\n            color: 'rgba(0, 0, 0, 0.1)',\n            lineWidth: 1,\n            drawBorder: true,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickMarkLength: 10,\n            zeroLineWidth: 1,\n            zeroLineColor: 'rgba(0,0,0,0.25)',\n            zeroLineBorderDash: [],\n            zeroLineBorderDashOffset: 0,\n            offsetGridLines: false,\n            borderDash: [],\n            borderDashOffset: 0\n        },\n        scaleLabel: {\n            display: false,\n            labelString: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            beginAtZero: false,\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            padding: 0,\n            reverse: false,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 0,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {}\n        }\n    });\n    function labelsFromTicks(ticks) {\n        var labels = [];\n        var i, ilen;\n        for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n            labels.push(ticks[i].label);\n        }\n        return labels;\n    }\n    function getPixelForGridLine(scale, index, offsetGridLines) {\n        var lineValue = scale.getPixelForTick(index);\n        if (offsetGridLines) {\n            if (scale.getTicks().length === 1) {\n                lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n            } else if (index === 0) {\n                lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n            } else {\n                lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n            }\n        }\n        return lineValue;\n    }\n    function computeTextSize(context, tick, font) {\n        return helpers.isArray(tick) ? helpers.longestText(context, font, tick) : context.measureText(tick).width;\n    }\n    module.exports = Element.extend({\n        getPadding: function () {\n            var me = this;\n            return {\n                left: me.paddingLeft || 0,\n                top: me.paddingTop || 0,\n                right: me.paddingRight || 0,\n                bottom: me.paddingBottom || 0\n            };\n        },\n        getTicks: function () {\n            return this._ticks;\n        },\n        mergeTicksOptions: function () {\n            var ticks = this.options.ticks;\n            if (ticks.minor === false) {\n                ticks.minor = { display: false };\n            }\n            if (ticks.major === false) {\n                ticks.major = { display: false };\n            }\n            for (var key in ticks) {\n                if (key !== 'major' && key !== 'minor') {\n                    if (typeof ticks.minor[key] === 'undefined') {\n                        ticks.minor[key] = ticks[key];\n                    }\n                    if (typeof ticks.major[key] === 'undefined') {\n                        ticks.major[key] = ticks[key];\n                    }\n                }\n            }\n        },\n        beforeUpdate: function () {\n            helpers.callback(this.options.beforeUpdate, [this]);\n        },\n        update: function (maxWidth, maxHeight, margins) {\n            var me = this;\n            var i, ilen, labels, label, ticks, tick;\n            me.beforeUpdate();\n            me.maxWidth = maxWidth;\n            me.maxHeight = maxHeight;\n            me.margins = helpers.extend({\n                left: 0,\n                right: 0,\n                top: 0,\n                bottom: 0\n            }, margins);\n            me._maxLabelLines = 0;\n            me.longestLabelWidth = 0;\n            me.longestTextCache = me.longestTextCache || {};\n            me.beforeSetDimensions();\n            me.setDimensions();\n            me.afterSetDimensions();\n            me.beforeDataLimits();\n            me.determineDataLimits();\n            me.afterDataLimits();\n            me.beforeBuildTicks();\n            ticks = me.buildTicks() || [];\n            ticks = me.afterBuildTicks(ticks) || ticks;\n            me.beforeTickToLabelConversion();\n            labels = me.convertTicksToLabels(ticks) || me.ticks;\n            me.afterTickToLabelConversion();\n            me.ticks = labels;\n            for (i = 0, ilen = labels.length; i < ilen; ++i) {\n                label = labels[i];\n                tick = ticks[i];\n                if (!tick) {\n                    ticks.push(tick = {\n                        label: label,\n                        major: false\n                    });\n                } else {\n                    tick.label = label;\n                }\n            }\n            me._ticks = ticks;\n            me.beforeCalculateTickRotation();\n            me.calculateTickRotation();\n            me.afterCalculateTickRotation();\n            me.beforeFit();\n            me.fit();\n            me.afterFit();\n            me.afterUpdate();\n            return me.minSize;\n        },\n        afterUpdate: function () {\n            helpers.callback(this.options.afterUpdate, [this]);\n        },\n        beforeSetDimensions: function () {\n            helpers.callback(this.options.beforeSetDimensions, [this]);\n        },\n        setDimensions: function () {\n            var me = this;\n            if (me.isHorizontal()) {\n                me.width = me.maxWidth;\n                me.left = 0;\n                me.right = me.width;\n            } else {\n                me.height = me.maxHeight;\n                me.top = 0;\n                me.bottom = me.height;\n            }\n            me.paddingLeft = 0;\n            me.paddingTop = 0;\n            me.paddingRight = 0;\n            me.paddingBottom = 0;\n        },\n        afterSetDimensions: function () {\n            helpers.callback(this.options.afterSetDimensions, [this]);\n        },\n        beforeDataLimits: function () {\n            helpers.callback(this.options.beforeDataLimits, [this]);\n        },\n        determineDataLimits: helpers.noop,\n        afterDataLimits: function () {\n            helpers.callback(this.options.afterDataLimits, [this]);\n        },\n        beforeBuildTicks: function () {\n            helpers.callback(this.options.beforeBuildTicks, [this]);\n        },\n        buildTicks: helpers.noop,\n        afterBuildTicks: function (ticks) {\n            var me = this;\n            if (helpers.isArray(ticks) && ticks.length) {\n                return helpers.callback(me.options.afterBuildTicks, [\n                    me,\n                    ticks\n                ]);\n            }\n            me.ticks = helpers.callback(me.options.afterBuildTicks, [\n                me,\n                me.ticks\n            ]) || me.ticks;\n            return ticks;\n        },\n        beforeTickToLabelConversion: function () {\n            helpers.callback(this.options.beforeTickToLabelConversion, [this]);\n        },\n        convertTicksToLabels: function () {\n            var me = this;\n            var tickOpts = me.options.ticks;\n            me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n        },\n        afterTickToLabelConversion: function () {\n            helpers.callback(this.options.afterTickToLabelConversion, [this]);\n        },\n        beforeCalculateTickRotation: function () {\n            helpers.callback(this.options.beforeCalculateTickRotation, [this]);\n        },\n        calculateTickRotation: function () {\n            var me = this;\n            var context = me.ctx;\n            var tickOpts = me.options.ticks;\n            var labels = labelsFromTicks(me._ticks);\n            var tickFont = helpers.options._parseFont(tickOpts);\n            context.font = tickFont.string;\n            var labelRotation = tickOpts.minRotation || 0;\n            if (labels.length && me.options.display && me.isHorizontal()) {\n                var originalLabelWidth = helpers.longestText(context, tickFont.string, labels, me.longestTextCache);\n                var labelWidth = originalLabelWidth;\n                var cosRotation, sinRotation;\n                var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n                while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n                    var angleRadians = helpers.toRadians(labelRotation);\n                    cosRotation = Math.cos(angleRadians);\n                    sinRotation = Math.sin(angleRadians);\n                    if (sinRotation * originalLabelWidth > me.maxHeight) {\n                        labelRotation--;\n                        break;\n                    }\n                    labelRotation++;\n                    labelWidth = cosRotation * originalLabelWidth;\n                }\n            }\n            me.labelRotation = labelRotation;\n        },\n        afterCalculateTickRotation: function () {\n            helpers.callback(this.options.afterCalculateTickRotation, [this]);\n        },\n        beforeFit: function () {\n            helpers.callback(this.options.beforeFit, [this]);\n        },\n        fit: function () {\n            var me = this;\n            var minSize = me.minSize = {\n                width: 0,\n                height: 0\n            };\n            var labels = labelsFromTicks(me._ticks);\n            var opts = me.options;\n            var tickOpts = opts.ticks;\n            var scaleLabelOpts = opts.scaleLabel;\n            var gridLineOpts = opts.gridLines;\n            var display = me._isVisible();\n            var position = opts.position;\n            var isHorizontal = me.isHorizontal();\n            var parseFont = helpers.options._parseFont;\n            var tickFont = parseFont(tickOpts);\n            var tickMarkLength = opts.gridLines.tickMarkLength;\n            if (isHorizontal) {\n                minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n            } else {\n                minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n            }\n            if (isHorizontal) {\n                minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n            } else {\n                minSize.height = me.maxHeight;\n            }\n            if (scaleLabelOpts.display && display) {\n                var scaleLabelFont = parseFont(scaleLabelOpts);\n                var scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n                var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n                if (isHorizontal) {\n                    minSize.height += deltaHeight;\n                } else {\n                    minSize.width += deltaHeight;\n                }\n            }\n            if (tickOpts.display && display) {\n                var largestTextWidth = helpers.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n                var tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n                var lineSpace = tickFont.size * 0.5;\n                var tickPadding = me.options.ticks.padding;\n                me._maxLabelLines = tallestLabelHeightInLines;\n                me.longestLabelWidth = largestTextWidth;\n                if (isHorizontal) {\n                    var angleRadians = helpers.toRadians(me.labelRotation);\n                    var cosRotation = Math.cos(angleRadians);\n                    var sinRotation = Math.sin(angleRadians);\n                    var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace;\n                    minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n                    me.ctx.font = tickFont.string;\n                    var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n                    var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n                    var offsetLeft = me.getPixelForTick(0) - me.left;\n                    var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n                    var paddingLeft, paddingRight;\n                    if (me.labelRotation !== 0) {\n                        paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n                        paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n                    } else {\n                        paddingLeft = firstLabelWidth / 2;\n                        paddingRight = lastLabelWidth / 2;\n                    }\n                    me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3;\n                    me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n                } else {\n                    if (tickOpts.mirror) {\n                        largestTextWidth = 0;\n                    } else {\n                        largestTextWidth += tickPadding + lineSpace;\n                    }\n                    minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n                    me.paddingTop = tickFont.size / 2;\n                    me.paddingBottom = tickFont.size / 2;\n                }\n            }\n            me.handleMargins();\n            me.width = minSize.width;\n            me.height = minSize.height;\n        },\n        handleMargins: function () {\n            var me = this;\n            if (me.margins) {\n                me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n                me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n                me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n                me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n            }\n        },\n        afterFit: function () {\n            helpers.callback(this.options.afterFit, [this]);\n        },\n        isHorizontal: function () {\n            return this.options.position === 'top' || this.options.position === 'bottom';\n        },\n        isFullWidth: function () {\n            return this.options.fullWidth;\n        },\n        getRightValue: function (rawValue) {\n            if (helpers.isNullOrUndef(rawValue)) {\n                return NaN;\n            }\n            if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n                return NaN;\n            }\n            if (rawValue) {\n                if (this.isHorizontal()) {\n                    if (rawValue.x !== undefined) {\n                        return this.getRightValue(rawValue.x);\n                    }\n                } else if (rawValue.y !== undefined) {\n                    return this.getRightValue(rawValue.y);\n                }\n            }\n            return rawValue;\n        },\n        getLabelForIndex: helpers.noop,\n        getPixelForValue: helpers.noop,\n        getValueForPixel: helpers.noop,\n        getPixelForTick: function (index) {\n            var me = this;\n            var offset = me.options.offset;\n            if (me.isHorizontal()) {\n                var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n                var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n                var pixel = tickWidth * index + me.paddingLeft;\n                if (offset) {\n                    pixel += tickWidth / 2;\n                }\n                var finalVal = me.left + pixel;\n                finalVal += me.isFullWidth() ? me.margins.left : 0;\n                return finalVal;\n            }\n            var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n            return me.top + index * (innerHeight / (me._ticks.length - 1));\n        },\n        getPixelForDecimal: function (decimal) {\n            var me = this;\n            if (me.isHorizontal()) {\n                var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n                var valueOffset = innerWidth * decimal + me.paddingLeft;\n                var finalVal = me.left + valueOffset;\n                finalVal += me.isFullWidth() ? me.margins.left : 0;\n                return finalVal;\n            }\n            return me.top + decimal * me.height;\n        },\n        getBasePixel: function () {\n            return this.getPixelForValue(this.getBaseValue());\n        },\n        getBaseValue: function () {\n            var me = this;\n            var min = me.min;\n            var max = me.max;\n            return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n        },\n        _autoSkip: function (ticks) {\n            var me = this;\n            var isHorizontal = me.isHorizontal();\n            var optionTicks = me.options.ticks.minor;\n            var tickCount = ticks.length;\n            var skipRatio = false;\n            var maxTicks = optionTicks.maxTicksLimit;\n            var ticksLength = me._tickSize() * (tickCount - 1);\n            var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n            var result = [];\n            var i, tick;\n            if (ticksLength > axisLength) {\n                skipRatio = 1 + Math.floor(ticksLength / axisLength);\n            }\n            if (tickCount > maxTicks) {\n                skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n            }\n            for (i = 0; i < tickCount; i++) {\n                tick = ticks[i];\n                if (skipRatio > 1 && i % skipRatio > 0) {\n                    delete tick.label;\n                }\n                result.push(tick);\n            }\n            return result;\n        },\n        _tickSize: function () {\n            var me = this;\n            var isHorizontal = me.isHorizontal();\n            var optionTicks = me.options.ticks.minor;\n            var rot = helpers.toRadians(me.labelRotation);\n            var cos = Math.abs(Math.cos(rot));\n            var sin = Math.abs(Math.sin(rot));\n            var padding = optionTicks.autoSkipPadding || 0;\n            var w = me.longestLabelWidth + padding || 0;\n            var tickFont = helpers.options._parseFont(optionTicks);\n            var h = me._maxLabelLines * tickFont.lineHeight + padding || 0;\n            return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n        },\n        _isVisible: function () {\n            var me = this;\n            var chart = me.chart;\n            var display = me.options.display;\n            var i, ilen, meta;\n            if (display !== 'auto') {\n                return !!display;\n            }\n            for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        },\n        draw: function (chartArea) {\n            var me = this;\n            var options = me.options;\n            if (!me._isVisible()) {\n                return;\n            }\n            var chart = me.chart;\n            var context = me.ctx;\n            var globalDefaults = defaults.global;\n            var defaultFontColor = globalDefaults.defaultFontColor;\n            var optionTicks = options.ticks.minor;\n            var optionMajorTicks = options.ticks.major || optionTicks;\n            var gridLines = options.gridLines;\n            var scaleLabel = options.scaleLabel;\n            var position = options.position;\n            var isRotated = me.labelRotation !== 0;\n            var isMirrored = optionTicks.mirror;\n            var isHorizontal = me.isHorizontal();\n            var parseFont = helpers.options._parseFont;\n            var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n            var tickFontColor = valueOrDefault(optionTicks.fontColor, defaultFontColor);\n            var tickFont = parseFont(optionTicks);\n            var lineHeight = tickFont.lineHeight;\n            var majorTickFontColor = valueOrDefault(optionMajorTicks.fontColor, defaultFontColor);\n            var majorTickFont = parseFont(optionMajorTicks);\n            var tickPadding = optionTicks.padding;\n            var labelOffset = optionTicks.labelOffset;\n            var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n            var scaleLabelFontColor = valueOrDefault(scaleLabel.fontColor, defaultFontColor);\n            var scaleLabelFont = parseFont(scaleLabel);\n            var scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n            var labelRotationRadians = helpers.toRadians(me.labelRotation);\n            var itemsToDraw = [];\n            var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n            var alignPixel = helpers._alignPixel;\n            var borderValue, tickStart, tickEnd;\n            if (position === 'top') {\n                borderValue = alignPixel(chart, me.bottom, axisWidth);\n                tickStart = me.bottom - tl;\n                tickEnd = borderValue - axisWidth / 2;\n            } else if (position === 'bottom') {\n                borderValue = alignPixel(chart, me.top, axisWidth);\n                tickStart = borderValue + axisWidth / 2;\n                tickEnd = me.top + tl;\n            } else if (position === 'left') {\n                borderValue = alignPixel(chart, me.right, axisWidth);\n                tickStart = me.right - tl;\n                tickEnd = borderValue - axisWidth / 2;\n            } else {\n                borderValue = alignPixel(chart, me.left, axisWidth);\n                tickStart = borderValue + axisWidth / 2;\n                tickEnd = me.left + tl;\n            }\n            var epsilon = 1e-7;\n            helpers.each(ticks, function (tick, index) {\n                if (helpers.isNullOrUndef(tick.label)) {\n                    return;\n                }\n                var label = tick.label;\n                var lineWidth, lineColor, borderDash, borderDashOffset;\n                if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n                    lineWidth = gridLines.zeroLineWidth;\n                    lineColor = gridLines.zeroLineColor;\n                    borderDash = gridLines.zeroLineBorderDash || [];\n                    borderDashOffset = gridLines.zeroLineBorderDashOffset || 0;\n                } else {\n                    lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n                    lineColor = valueAtIndexOrDefault(gridLines.color, index);\n                    borderDash = gridLines.borderDash || [];\n                    borderDashOffset = gridLines.borderDashOffset || 0;\n                }\n                var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n                var labelCount = helpers.isArray(label) ? label.length : 1;\n                var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n                if (isHorizontal) {\n                    var labelYOffset = tl + tickPadding;\n                    if (lineValue < me.left - epsilon) {\n                        lineColor = 'rgba(0,0,0,0)';\n                    }\n                    tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n                    ty1 = tickStart;\n                    ty2 = tickEnd;\n                    labelX = me.getPixelForTick(index) + labelOffset;\n                    if (position === 'top') {\n                        y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n                        y2 = chartArea.bottom;\n                        textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n                        textAlign = !isRotated ? 'center' : 'left';\n                        labelY = me.bottom - labelYOffset;\n                    } else {\n                        y1 = chartArea.top;\n                        y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n                        textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n                        textAlign = !isRotated ? 'center' : 'right';\n                        labelY = me.top + labelYOffset;\n                    }\n                } else {\n                    var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n                    if (lineValue < me.top - epsilon) {\n                        lineColor = 'rgba(0,0,0,0)';\n                    }\n                    tx1 = tickStart;\n                    tx2 = tickEnd;\n                    ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n                    labelY = me.getPixelForTick(index) + labelOffset;\n                    textOffset = (1 - labelCount) * lineHeight / 2;\n                    if (position === 'left') {\n                        x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n                        x2 = chartArea.right;\n                        textAlign = isMirrored ? 'left' : 'right';\n                        labelX = me.right - labelXOffset;\n                    } else {\n                        x1 = chartArea.left;\n                        x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n                        textAlign = isMirrored ? 'right' : 'left';\n                        labelX = me.left + labelXOffset;\n                    }\n                }\n                itemsToDraw.push({\n                    tx1: tx1,\n                    ty1: ty1,\n                    tx2: tx2,\n                    ty2: ty2,\n                    x1: x1,\n                    y1: y1,\n                    x2: x2,\n                    y2: y2,\n                    labelX: labelX,\n                    labelY: labelY,\n                    glWidth: lineWidth,\n                    glColor: lineColor,\n                    glBorderDash: borderDash,\n                    glBorderDashOffset: borderDashOffset,\n                    rotation: -1 * labelRotationRadians,\n                    label: label,\n                    major: tick.major,\n                    textOffset: textOffset,\n                    textAlign: textAlign\n                });\n            });\n            helpers.each(itemsToDraw, function (itemToDraw) {\n                var glWidth = itemToDraw.glWidth;\n                var glColor = itemToDraw.glColor;\n                if (gridLines.display && glWidth && glColor) {\n                    context.save();\n                    context.lineWidth = glWidth;\n                    context.strokeStyle = glColor;\n                    if (context.setLineDash) {\n                        context.setLineDash(itemToDraw.glBorderDash);\n                        context.lineDashOffset = itemToDraw.glBorderDashOffset;\n                    }\n                    context.beginPath();\n                    if (gridLines.drawTicks) {\n                        context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n                        context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n                    }\n                    if (gridLines.drawOnChartArea) {\n                        context.moveTo(itemToDraw.x1, itemToDraw.y1);\n                        context.lineTo(itemToDraw.x2, itemToDraw.y2);\n                    }\n                    context.stroke();\n                    context.restore();\n                }\n                if (optionTicks.display) {\n                    context.save();\n                    context.translate(itemToDraw.labelX, itemToDraw.labelY);\n                    context.rotate(itemToDraw.rotation);\n                    context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n                    context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n                    context.textBaseline = 'middle';\n                    context.textAlign = itemToDraw.textAlign;\n                    var label = itemToDraw.label;\n                    var y = itemToDraw.textOffset;\n                    if (helpers.isArray(label)) {\n                        for (var i = 0; i < label.length; ++i) {\n                            context.fillText('' + label[i], 0, y);\n                            y += lineHeight;\n                        }\n                    } else {\n                        context.fillText(label, 0, y);\n                    }\n                    context.restore();\n                }\n            });\n            if (scaleLabel.display) {\n                var scaleLabelX;\n                var scaleLabelY;\n                var rotation = 0;\n                var halfLineHeight = scaleLabelFont.lineHeight / 2;\n                if (isHorizontal) {\n                    scaleLabelX = me.left + (me.right - me.left) / 2;\n                    scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n                } else {\n                    var isLeft = position === 'left';\n                    scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n                    scaleLabelY = me.top + (me.bottom - me.top) / 2;\n                    rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n                }\n                context.save();\n                context.translate(scaleLabelX, scaleLabelY);\n                context.rotate(rotation);\n                context.textAlign = 'center';\n                context.textBaseline = 'middle';\n                context.fillStyle = scaleLabelFontColor;\n                context.font = scaleLabelFont.string;\n                context.fillText(scaleLabel.labelString, 0, 0);\n                context.restore();\n            }\n            if (axisWidth) {\n                var firstLineWidth = axisWidth;\n                var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n                var x1, x2, y1, y2;\n                if (isHorizontal) {\n                    x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n                    x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n                    y1 = y2 = borderValue;\n                } else {\n                    y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n                    y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n                    x1 = x2 = borderValue;\n                }\n                context.lineWidth = axisWidth;\n                context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n                context.beginPath();\n                context.moveTo(x1, y1);\n                context.lineTo(x2, y2);\n                context.stroke();\n            }\n        }\n    });\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/scales/scale.category',['../core/core.scale'], function (__module__0) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var Scale = __module__0;\n    var defaultConfig = { position: 'bottom' };\n    module.exports = Scale.extend({\n        getLabels: function () {\n            var data = this.chart.data;\n            return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n        },\n        determineDataLimits: function () {\n            var me = this;\n            var labels = me.getLabels();\n            me.minIndex = 0;\n            me.maxIndex = labels.length - 1;\n            var findIndex;\n            if (me.options.ticks.min !== undefined) {\n                findIndex = labels.indexOf(me.options.ticks.min);\n                me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n            }\n            if (me.options.ticks.max !== undefined) {\n                findIndex = labels.indexOf(me.options.ticks.max);\n                me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n            }\n            me.min = labels[me.minIndex];\n            me.max = labels[me.maxIndex];\n        },\n        buildTicks: function () {\n            var me = this;\n            var labels = me.getLabels();\n            me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n        },\n        getLabelForIndex: function (index, datasetIndex) {\n            var me = this;\n            var chart = me.chart;\n            if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n                return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n            }\n            return me.ticks[index - me.minIndex];\n        },\n        getPixelForValue: function (value, index) {\n            var me = this;\n            var offset = me.options.offset;\n            var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1);\n            var valueCategory;\n            if (value !== undefined && value !== null) {\n                valueCategory = me.isHorizontal() ? value.x : value.y;\n            }\n            if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n                var labels = me.getLabels();\n                value = valueCategory || value;\n                var idx = labels.indexOf(value);\n                index = idx !== -1 ? idx : index;\n            }\n            if (me.isHorizontal()) {\n                var valueWidth = me.width / offsetAmt;\n                var widthOffset = valueWidth * (index - me.minIndex);\n                if (offset) {\n                    widthOffset += valueWidth / 2;\n                }\n                return me.left + widthOffset;\n            }\n            var valueHeight = me.height / offsetAmt;\n            var heightOffset = valueHeight * (index - me.minIndex);\n            if (offset) {\n                heightOffset += valueHeight / 2;\n            }\n            return me.top + heightOffset;\n        },\n        getPixelForTick: function (index) {\n            return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n        },\n        getValueForPixel: function (pixel) {\n            var me = this;\n            var offset = me.options.offset;\n            var value;\n            var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n            var horz = me.isHorizontal();\n            var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n            pixel -= horz ? me.left : me.top;\n            if (offset) {\n                pixel -= valueDimension / 2;\n            }\n            if (pixel <= 0) {\n                value = 0;\n            } else {\n                value = Math.round(pixel / valueDimension);\n            }\n            return value + me.minIndex;\n        },\n        getBasePixel: function () {\n            return this.bottom;\n        }\n    });\n    module.exports._defaults = defaultConfig;\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/scales/scale.linearbase',[\n    '../helpers/index',\n    '../core/core.scale'\n], function (__module__0, __module__1) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var helpers = __module__0;\n    var Scale = __module__1;\n    var noop = helpers.noop;\n    var isNullOrUndef = helpers.isNullOrUndef;\n    function generateTicks(generationOptions, dataRange) {\n        var ticks = [];\n        var MIN_SPACING = 1e-14;\n        var stepSize = generationOptions.stepSize;\n        var unit = stepSize || 1;\n        var maxNumSpaces = generationOptions.maxTicks - 1;\n        var min = generationOptions.min;\n        var max = generationOptions.max;\n        var precision = generationOptions.precision;\n        var rmin = dataRange.min;\n        var rmax = dataRange.max;\n        var spacing = helpers.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n        var factor, niceMin, niceMax, numSpaces;\n        if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n            return [\n                rmin,\n                rmax\n            ];\n        }\n        numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n        if (numSpaces > maxNumSpaces) {\n            spacing = helpers.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n        }\n        if (stepSize || isNullOrUndef(precision)) {\n            factor = Math.pow(10, helpers._decimalPlaces(spacing));\n        } else {\n            factor = Math.pow(10, precision);\n            spacing = Math.ceil(spacing * factor) / factor;\n        }\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n        if (stepSize) {\n            if (!isNullOrUndef(min) && helpers.almostWhole(min / spacing, spacing / 1000)) {\n                niceMin = min;\n            }\n            if (!isNullOrUndef(max) && helpers.almostWhole(max / spacing, spacing / 1000)) {\n                niceMax = max;\n            }\n        }\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n        niceMin = Math.round(niceMin * factor) / factor;\n        niceMax = Math.round(niceMax * factor) / factor;\n        ticks.push(isNullOrUndef(min) ? niceMin : min);\n        for (var j = 1; j < numSpaces; ++j) {\n            ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n        }\n        ticks.push(isNullOrUndef(max) ? niceMax : max);\n        return ticks;\n    }\n    module.exports = Scale.extend({\n        getRightValue: function (value) {\n            if (typeof value === 'string') {\n                return +value;\n            }\n            return Scale.prototype.getRightValue.call(this, value);\n        },\n        handleTickRangeOptions: function () {\n            var me = this;\n            var opts = me.options;\n            var tickOpts = opts.ticks;\n            if (tickOpts.beginAtZero) {\n                var minSign = helpers.sign(me.min);\n                var maxSign = helpers.sign(me.max);\n                if (minSign < 0 && maxSign < 0) {\n                    me.max = 0;\n                } else if (minSign > 0 && maxSign > 0) {\n                    me.min = 0;\n                }\n            }\n            var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n            var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n            if (tickOpts.min !== undefined) {\n                me.min = tickOpts.min;\n            } else if (tickOpts.suggestedMin !== undefined) {\n                if (me.min === null) {\n                    me.min = tickOpts.suggestedMin;\n                } else {\n                    me.min = Math.min(me.min, tickOpts.suggestedMin);\n                }\n            }\n            if (tickOpts.max !== undefined) {\n                me.max = tickOpts.max;\n            } else if (tickOpts.suggestedMax !== undefined) {\n                if (me.max === null) {\n                    me.max = tickOpts.suggestedMax;\n                } else {\n                    me.max = Math.max(me.max, tickOpts.suggestedMax);\n                }\n            }\n            if (setMin !== setMax) {\n                if (me.min >= me.max) {\n                    if (setMin) {\n                        me.max = me.min + 1;\n                    } else {\n                        me.min = me.max - 1;\n                    }\n                }\n            }\n            if (me.min === me.max) {\n                me.max++;\n                if (!tickOpts.beginAtZero) {\n                    me.min--;\n                }\n            }\n        },\n        getTickLimit: function () {\n            var me = this;\n            var tickOpts = me.options.ticks;\n            var stepSize = tickOpts.stepSize;\n            var maxTicksLimit = tickOpts.maxTicksLimit;\n            var maxTicks;\n            if (stepSize) {\n                maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n            } else {\n                maxTicks = me._computeTickLimit();\n                maxTicksLimit = maxTicksLimit || 11;\n            }\n            if (maxTicksLimit) {\n                maxTicks = Math.min(maxTicksLimit, maxTicks);\n            }\n            return maxTicks;\n        },\n        _computeTickLimit: function () {\n            return Number.POSITIVE_INFINITY;\n        },\n        handleDirectionalChanges: noop,\n        buildTicks: function () {\n            var me = this;\n            var opts = me.options;\n            var tickOpts = opts.ticks;\n            var maxTicks = me.getTickLimit();\n            maxTicks = Math.max(2, maxTicks);\n            var numericGeneratorOptions = {\n                maxTicks: maxTicks,\n                min: tickOpts.min,\n                max: tickOpts.max,\n                precision: tickOpts.precision,\n                stepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n            };\n            var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n            me.handleDirectionalChanges();\n            me.max = helpers.max(ticks);\n            me.min = helpers.min(ticks);\n            if (tickOpts.reverse) {\n                ticks.reverse();\n                me.start = me.max;\n                me.end = me.min;\n            } else {\n                me.start = me.min;\n                me.end = me.max;\n            }\n        },\n        convertTicksToLabels: function () {\n            var me = this;\n            me.ticksAsNumbers = me.ticks.slice();\n            me.zeroLineIndex = me.ticks.indexOf(0);\n            Scale.prototype.convertTicksToLabels.call(me);\n        }\n    });\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/scales/scale.linear',[\n    '../helpers/index',\n    './scale.linearbase',\n    '../core/core.ticks'\n], function (__module__0, __module__1, __module__2) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var helpers = __module__0;\n    var LinearScaleBase = __module__1;\n    var Ticks = __module__2;\n    var defaultConfig = {\n        position: 'left',\n        ticks: { callback: Ticks.formatters.linear }\n    };\n    module.exports = LinearScaleBase.extend({\n        determineDataLimits: function () {\n            var me = this;\n            var opts = me.options;\n            var chart = me.chart;\n            var data = chart.data;\n            var datasets = data.datasets;\n            var isHorizontal = me.isHorizontal();\n            var DEFAULT_MIN = 0;\n            var DEFAULT_MAX = 1;\n            function IDMatches(meta) {\n                return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n            }\n            me.min = null;\n            me.max = null;\n            var hasStacks = opts.stacked;\n            if (hasStacks === undefined) {\n                helpers.each(datasets, function (dataset, datasetIndex) {\n                    if (hasStacks) {\n                        return;\n                    }\n                    var meta = chart.getDatasetMeta(datasetIndex);\n                    if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n                        hasStacks = true;\n                    }\n                });\n            }\n            if (opts.stacked || hasStacks) {\n                var valuesPerStack = {};\n                helpers.each(datasets, function (dataset, datasetIndex) {\n                    var meta = chart.getDatasetMeta(datasetIndex);\n                    var key = [\n                        meta.type,\n                        opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '',\n                        meta.stack\n                    ].join('.');\n                    if (valuesPerStack[key] === undefined) {\n                        valuesPerStack[key] = {\n                            positiveValues: [],\n                            negativeValues: []\n                        };\n                    }\n                    var positiveValues = valuesPerStack[key].positiveValues;\n                    var negativeValues = valuesPerStack[key].negativeValues;\n                    if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n                        helpers.each(dataset.data, function (rawValue, index) {\n                            var value = +me.getRightValue(rawValue);\n                            if (isNaN(value) || meta.data[index].hidden) {\n                                return;\n                            }\n                            positiveValues[index] = positiveValues[index] || 0;\n                            negativeValues[index] = negativeValues[index] || 0;\n                            if (opts.relativePoints) {\n                                positiveValues[index] = 100;\n                            } else if (value < 0) {\n                                negativeValues[index] += value;\n                            } else {\n                                positiveValues[index] += value;\n                            }\n                        });\n                    }\n                });\n                helpers.each(valuesPerStack, function (valuesForType) {\n                    var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n                    var minVal = helpers.min(values);\n                    var maxVal = helpers.max(values);\n                    me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n                    me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n                });\n            } else {\n                helpers.each(datasets, function (dataset, datasetIndex) {\n                    var meta = chart.getDatasetMeta(datasetIndex);\n                    if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n                        helpers.each(dataset.data, function (rawValue, index) {\n                            var value = +me.getRightValue(rawValue);\n                            if (isNaN(value) || meta.data[index].hidden) {\n                                return;\n                            }\n                            if (me.min === null) {\n                                me.min = value;\n                            } else if (value < me.min) {\n                                me.min = value;\n                            }\n                            if (me.max === null) {\n                                me.max = value;\n                            } else if (value > me.max) {\n                                me.max = value;\n                            }\n                        });\n                    }\n                });\n            }\n            me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n            me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n            this.handleTickRangeOptions();\n        },\n        _computeTickLimit: function () {\n            var me = this;\n            var tickFont;\n            if (me.isHorizontal()) {\n                return Math.ceil(me.width / 40);\n            }\n            tickFont = helpers.options._parseFont(me.options.ticks);\n            return Math.ceil(me.height / tickFont.lineHeight);\n        },\n        handleDirectionalChanges: function () {\n            if (!this.isHorizontal()) {\n                this.ticks.reverse();\n            }\n        },\n        getLabelForIndex: function (index, datasetIndex) {\n            return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n        },\n        getPixelForValue: function (value) {\n            var me = this;\n            var start = me.start;\n            var rightValue = +me.getRightValue(value);\n            var pixel;\n            var range = me.end - start;\n            if (me.isHorizontal()) {\n                pixel = me.left + me.width / range * (rightValue - start);\n            } else {\n                pixel = me.bottom - me.height / range * (rightValue - start);\n            }\n            return pixel;\n        },\n        getValueForPixel: function (pixel) {\n            var me = this;\n            var isHorizontal = me.isHorizontal();\n            var innerDimension = isHorizontal ? me.width : me.height;\n            var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n            return me.start + (me.end - me.start) * offset;\n        },\n        getPixelForTick: function (index) {\n            return this.getPixelForValue(this.ticksAsNumbers[index]);\n        }\n    });\n    module.exports._defaults = defaultConfig;\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/scales/scale.logarithmic',[\n    '../core/core.defaults',\n    '../helpers/index',\n    '../core/core.scale',\n    '../core/core.ticks'\n], function (__module__0, __module__1, __module__2, __module__3) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var defaults = __module__0;\n    var helpers = __module__1;\n    var Scale = __module__2;\n    var Ticks = __module__3;\n    var valueOrDefault = helpers.valueOrDefault;\n    function generateTicks(generationOptions, dataRange) {\n        var ticks = [];\n        var tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n        var endExp = Math.floor(helpers.log10(dataRange.max));\n        var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n        var exp, significand;\n        if (tickVal === 0) {\n            exp = Math.floor(helpers.log10(dataRange.minNotZero));\n            significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n            ticks.push(tickVal);\n            tickVal = significand * Math.pow(10, exp);\n        } else {\n            exp = Math.floor(helpers.log10(tickVal));\n            significand = Math.floor(tickVal / Math.pow(10, exp));\n        }\n        var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n        do {\n            ticks.push(tickVal);\n            ++significand;\n            if (significand === 10) {\n                significand = 1;\n                ++exp;\n                precision = exp >= 0 ? 1 : precision;\n            }\n            tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n        } while (exp < endExp || exp === endExp && significand < endSignificand);\n        var lastTick = valueOrDefault(generationOptions.max, tickVal);\n        ticks.push(lastTick);\n        return ticks;\n    }\n    var defaultConfig = {\n        position: 'left',\n        ticks: { callback: Ticks.formatters.logarithmic }\n    };\n    function nonNegativeOrDefault(value, defaultValue) {\n        return helpers.isFinite(value) && value >= 0 ? value : defaultValue;\n    }\n    module.exports = Scale.extend({\n        determineDataLimits: function () {\n            var me = this;\n            var opts = me.options;\n            var chart = me.chart;\n            var data = chart.data;\n            var datasets = data.datasets;\n            var isHorizontal = me.isHorizontal();\n            function IDMatches(meta) {\n                return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n            }\n            me.min = null;\n            me.max = null;\n            me.minNotZero = null;\n            var hasStacks = opts.stacked;\n            if (hasStacks === undefined) {\n                helpers.each(datasets, function (dataset, datasetIndex) {\n                    if (hasStacks) {\n                        return;\n                    }\n                    var meta = chart.getDatasetMeta(datasetIndex);\n                    if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n                        hasStacks = true;\n                    }\n                });\n            }\n            if (opts.stacked || hasStacks) {\n                var valuesPerStack = {};\n                helpers.each(datasets, function (dataset, datasetIndex) {\n                    var meta = chart.getDatasetMeta(datasetIndex);\n                    var key = [\n                        meta.type,\n                        opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '',\n                        meta.stack\n                    ].join('.');\n                    if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n                        if (valuesPerStack[key] === undefined) {\n                            valuesPerStack[key] = [];\n                        }\n                        helpers.each(dataset.data, function (rawValue, index) {\n                            var values = valuesPerStack[key];\n                            var value = +me.getRightValue(rawValue);\n                            if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                                return;\n                            }\n                            values[index] = values[index] || 0;\n                            values[index] += value;\n                        });\n                    }\n                });\n                helpers.each(valuesPerStack, function (valuesForType) {\n                    if (valuesForType.length > 0) {\n                        var minVal = helpers.min(valuesForType);\n                        var maxVal = helpers.max(valuesForType);\n                        me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n                        me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n                    }\n                });\n            } else {\n                helpers.each(datasets, function (dataset, datasetIndex) {\n                    var meta = chart.getDatasetMeta(datasetIndex);\n                    if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n                        helpers.each(dataset.data, function (rawValue, index) {\n                            var value = +me.getRightValue(rawValue);\n                            if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                                return;\n                            }\n                            if (me.min === null) {\n                                me.min = value;\n                            } else if (value < me.min) {\n                                me.min = value;\n                            }\n                            if (me.max === null) {\n                                me.max = value;\n                            } else if (value > me.max) {\n                                me.max = value;\n                            }\n                            if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                                me.minNotZero = value;\n                            }\n                        });\n                    }\n                });\n            }\n            this.handleTickRangeOptions();\n        },\n        handleTickRangeOptions: function () {\n            var me = this;\n            var tickOpts = me.options.ticks;\n            var DEFAULT_MIN = 1;\n            var DEFAULT_MAX = 10;\n            me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n            me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n            if (me.min === me.max) {\n                if (me.min !== 0 && me.min !== null) {\n                    me.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n                    me.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n                } else {\n                    me.min = DEFAULT_MIN;\n                    me.max = DEFAULT_MAX;\n                }\n            }\n            if (me.min === null) {\n                me.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n            }\n            if (me.max === null) {\n                me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1) : DEFAULT_MAX;\n            }\n            if (me.minNotZero === null) {\n                if (me.min > 0) {\n                    me.minNotZero = me.min;\n                } else if (me.max < 1) {\n                    me.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n                } else {\n                    me.minNotZero = DEFAULT_MIN;\n                }\n            }\n        },\n        buildTicks: function () {\n            var me = this;\n            var tickOpts = me.options.ticks;\n            var reverse = !me.isHorizontal();\n            var generationOptions = {\n                min: nonNegativeOrDefault(tickOpts.min),\n                max: nonNegativeOrDefault(tickOpts.max)\n            };\n            var ticks = me.ticks = generateTicks(generationOptions, me);\n            me.max = helpers.max(ticks);\n            me.min = helpers.min(ticks);\n            if (tickOpts.reverse) {\n                reverse = !reverse;\n                me.start = me.max;\n                me.end = me.min;\n            } else {\n                me.start = me.min;\n                me.end = me.max;\n            }\n            if (reverse) {\n                ticks.reverse();\n            }\n        },\n        convertTicksToLabels: function () {\n            this.tickValues = this.ticks.slice();\n            Scale.prototype.convertTicksToLabels.call(this);\n        },\n        getLabelForIndex: function (index, datasetIndex) {\n            return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n        },\n        getPixelForTick: function (index) {\n            return this.getPixelForValue(this.tickValues[index]);\n        },\n        _getFirstTickValue: function (value) {\n            var exp = Math.floor(helpers.log10(value));\n            var significand = Math.floor(value / Math.pow(10, exp));\n            return significand * Math.pow(10, exp);\n        },\n        getPixelForValue: function (value) {\n            var me = this;\n            var tickOpts = me.options.ticks;\n            var reverse = tickOpts.reverse;\n            var log10 = helpers.log10;\n            var firstTickValue = me._getFirstTickValue(me.minNotZero);\n            var offset = 0;\n            var innerDimension, pixel, start, end, sign;\n            value = +me.getRightValue(value);\n            if (reverse) {\n                start = me.end;\n                end = me.start;\n                sign = -1;\n            } else {\n                start = me.start;\n                end = me.end;\n                sign = 1;\n            }\n            if (me.isHorizontal()) {\n                innerDimension = me.width;\n                pixel = reverse ? me.right : me.left;\n            } else {\n                innerDimension = me.height;\n                sign *= -1;\n                pixel = reverse ? me.top : me.bottom;\n            }\n            if (value !== start) {\n                if (start === 0) {\n                    offset = valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n                    innerDimension -= offset;\n                    start = firstTickValue;\n                }\n                if (value !== 0) {\n                    offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n                }\n                pixel += sign * offset;\n            }\n            return pixel;\n        },\n        getValueForPixel: function (pixel) {\n            var me = this;\n            var tickOpts = me.options.ticks;\n            var reverse = tickOpts.reverse;\n            var log10 = helpers.log10;\n            var firstTickValue = me._getFirstTickValue(me.minNotZero);\n            var innerDimension, start, end, value;\n            if (reverse) {\n                start = me.end;\n                end = me.start;\n            } else {\n                start = me.start;\n                end = me.end;\n            }\n            if (me.isHorizontal()) {\n                innerDimension = me.width;\n                value = reverse ? me.right - pixel : pixel - me.left;\n            } else {\n                innerDimension = me.height;\n                value = reverse ? pixel - me.top : me.bottom - pixel;\n            }\n            if (value !== start) {\n                if (start === 0) {\n                    var offset = valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n                    value -= offset;\n                    innerDimension -= offset;\n                    start = firstTickValue;\n                }\n                value *= log10(end) - log10(start);\n                value /= innerDimension;\n                value = Math.pow(10, log10(start) + value);\n            }\n            return value;\n        }\n    });\n    module.exports._defaults = defaultConfig;\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/scales/scale.radialLinear',[\n    '../core/core.defaults',\n    '../helpers/index',\n    './scale.linearbase',\n    '../core/core.ticks'\n], function (__module__0, __module__1, __module__2, __module__3) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var defaults = __module__0;\n    var helpers = __module__1;\n    var LinearScaleBase = __module__2;\n    var Ticks = __module__3;\n    var valueOrDefault = helpers.valueOrDefault;\n    var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n    var resolve = helpers.options.resolve;\n    var defaultConfig = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            color: 'rgba(0, 0, 0, 0.1)',\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0\n        },\n        gridLines: { circular: false },\n        ticks: {\n            showLabelBackdrop: true,\n            backdropColor: 'rgba(255,255,255,0.75)',\n            backdropPaddingY: 2,\n            backdropPaddingX: 2,\n            callback: Ticks.formatters.linear\n        },\n        pointLabels: {\n            display: true,\n            fontSize: 10,\n            callback: function (label) {\n                return label;\n            }\n        }\n    };\n    function getValueCount(scale) {\n        var opts = scale.options;\n        return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n    }\n    function getTickBackdropHeight(opts) {\n        var tickOpts = opts.ticks;\n        if (tickOpts.display && opts.display) {\n            return valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n        }\n        return 0;\n    }\n    function measureLabelSize(ctx, lineHeight, label) {\n        if (helpers.isArray(label)) {\n            return {\n                w: helpers.longestText(ctx, ctx.font, label),\n                h: label.length * lineHeight\n            };\n        }\n        return {\n            w: ctx.measureText(label).width,\n            h: lineHeight\n        };\n    }\n    function determineLimits(angle, pos, size, min, max) {\n        if (angle === min || angle === max) {\n            return {\n                start: pos - size / 2,\n                end: pos + size / 2\n            };\n        } else if (angle < min || angle > max) {\n            return {\n                start: pos - size,\n                end: pos\n            };\n        }\n        return {\n            start: pos,\n            end: pos + size\n        };\n    }\n    function fitWithPointLabels(scale) {\n        var plFont = helpers.options._parseFont(scale.options.pointLabels);\n        var furthestLimits = {\n            l: 0,\n            r: scale.width,\n            t: 0,\n            b: scale.height - scale.paddingTop\n        };\n        var furthestAngles = {};\n        var i, textSize, pointPosition;\n        scale.ctx.font = plFont.string;\n        scale._pointLabelSizes = [];\n        var valueCount = getValueCount(scale);\n        for (i = 0; i < valueCount; i++) {\n            pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n            textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n            scale._pointLabelSizes[i] = textSize;\n            var angleRadians = scale.getIndexAngle(i);\n            var angle = helpers.toDegrees(angleRadians) % 360;\n            var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n            var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n            if (hLimits.start < furthestLimits.l) {\n                furthestLimits.l = hLimits.start;\n                furthestAngles.l = angleRadians;\n            }\n            if (hLimits.end > furthestLimits.r) {\n                furthestLimits.r = hLimits.end;\n                furthestAngles.r = angleRadians;\n            }\n            if (vLimits.start < furthestLimits.t) {\n                furthestLimits.t = vLimits.start;\n                furthestAngles.t = angleRadians;\n            }\n            if (vLimits.end > furthestLimits.b) {\n                furthestLimits.b = vLimits.end;\n                furthestAngles.b = angleRadians;\n            }\n        }\n        scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n    }\n    function getTextAlignForAngle(angle) {\n        if (angle === 0 || angle === 180) {\n            return 'center';\n        } else if (angle < 180) {\n            return 'left';\n        }\n        return 'right';\n    }\n    function fillText(ctx, text, position, lineHeight) {\n        var y = position.y + lineHeight / 2;\n        var i, ilen;\n        if (helpers.isArray(text)) {\n            for (i = 0, ilen = text.length; i < ilen; ++i) {\n                ctx.fillText(text[i], position.x, y);\n                y += lineHeight;\n            }\n        } else {\n            ctx.fillText(text, position.x, y);\n        }\n    }\n    function adjustPointPositionForLabelHeight(angle, textSize, position) {\n        if (angle === 90 || angle === 270) {\n            position.y -= textSize.h / 2;\n        } else if (angle > 270 || angle < 90) {\n            position.y -= textSize.h;\n        }\n    }\n    function drawPointLabels(scale) {\n        var ctx = scale.ctx;\n        var opts = scale.options;\n        var angleLineOpts = opts.angleLines;\n        var gridLineOpts = opts.gridLines;\n        var pointLabelOpts = opts.pointLabels;\n        var lineWidth = valueOrDefault(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n        var lineColor = valueOrDefault(angleLineOpts.color, gridLineOpts.color);\n        var tickBackdropHeight = getTickBackdropHeight(opts);\n        ctx.save();\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = lineColor;\n        if (ctx.setLineDash) {\n            ctx.setLineDash(resolve([\n                angleLineOpts.borderDash,\n                gridLineOpts.borderDash,\n                []\n            ]));\n            ctx.lineDashOffset = resolve([\n                angleLineOpts.borderDashOffset,\n                gridLineOpts.borderDashOffset,\n                0\n            ]);\n        }\n        var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n        var plFont = helpers.options._parseFont(pointLabelOpts);\n        ctx.font = plFont.string;\n        ctx.textBaseline = 'middle';\n        for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n            if (angleLineOpts.display && lineWidth && lineColor) {\n                var outerPosition = scale.getPointPosition(i, outerDistance);\n                ctx.beginPath();\n                ctx.moveTo(scale.xCenter, scale.yCenter);\n                ctx.lineTo(outerPosition.x, outerPosition.y);\n                ctx.stroke();\n            }\n            if (pointLabelOpts.display) {\n                var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n                var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5);\n                var pointLabelFontColor = valueAtIndexOrDefault(pointLabelOpts.fontColor, i, defaults.global.defaultFontColor);\n                ctx.fillStyle = pointLabelFontColor;\n                var angleRadians = scale.getIndexAngle(i);\n                var angle = helpers.toDegrees(angleRadians);\n                ctx.textAlign = getTextAlignForAngle(angle);\n                adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n                fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n            }\n        }\n        ctx.restore();\n    }\n    function drawRadiusLine(scale, gridLineOpts, radius, index) {\n        var ctx = scale.ctx;\n        var circular = gridLineOpts.circular;\n        var valueCount = getValueCount(scale);\n        var lineColor = valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n        var lineWidth = valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n        var pointPosition;\n        if (!circular && !valueCount || !lineColor || !lineWidth) {\n            return;\n        }\n        ctx.save();\n        ctx.strokeStyle = lineColor;\n        ctx.lineWidth = lineWidth;\n        if (ctx.setLineDash) {\n            ctx.setLineDash(gridLineOpts.borderDash || []);\n            ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0;\n        }\n        ctx.beginPath();\n        if (circular) {\n            ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n        } else {\n            pointPosition = scale.getPointPosition(0, radius);\n            ctx.moveTo(pointPosition.x, pointPosition.y);\n            for (var i = 1; i < valueCount; i++) {\n                pointPosition = scale.getPointPosition(i, radius);\n                ctx.lineTo(pointPosition.x, pointPosition.y);\n            }\n        }\n        ctx.closePath();\n        ctx.stroke();\n        ctx.restore();\n    }\n    function numberOrZero(param) {\n        return helpers.isNumber(param) ? param : 0;\n    }\n    module.exports = LinearScaleBase.extend({\n        setDimensions: function () {\n            var me = this;\n            me.width = me.maxWidth;\n            me.height = me.maxHeight;\n            me.paddingTop = getTickBackdropHeight(me.options) / 2;\n            me.xCenter = Math.floor(me.width / 2);\n            me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n            me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n        },\n        determineDataLimits: function () {\n            var me = this;\n            var chart = me.chart;\n            var min = Number.POSITIVE_INFINITY;\n            var max = Number.NEGATIVE_INFINITY;\n            helpers.each(chart.data.datasets, function (dataset, datasetIndex) {\n                if (chart.isDatasetVisible(datasetIndex)) {\n                    var meta = chart.getDatasetMeta(datasetIndex);\n                    helpers.each(dataset.data, function (rawValue, index) {\n                        var value = +me.getRightValue(rawValue);\n                        if (isNaN(value) || meta.data[index].hidden) {\n                            return;\n                        }\n                        min = Math.min(value, min);\n                        max = Math.max(value, max);\n                    });\n                }\n            });\n            me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n            me.max = max === Number.NEGATIVE_INFINITY ? 0 : max;\n            me.handleTickRangeOptions();\n        },\n        _computeTickLimit: function () {\n            return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n        },\n        convertTicksToLabels: function () {\n            var me = this;\n            LinearScaleBase.prototype.convertTicksToLabels.call(me);\n            me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n        },\n        getLabelForIndex: function (index, datasetIndex) {\n            return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n        },\n        fit: function () {\n            var me = this;\n            var opts = me.options;\n            if (opts.display && opts.pointLabels.display) {\n                fitWithPointLabels(me);\n            } else {\n                me.setCenterPoint(0, 0, 0, 0);\n            }\n        },\n        setReductions: function (largestPossibleRadius, furthestLimits, furthestAngles) {\n            var me = this;\n            var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n            var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n            var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n            var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n            radiusReductionLeft = numberOrZero(radiusReductionLeft);\n            radiusReductionRight = numberOrZero(radiusReductionRight);\n            radiusReductionTop = numberOrZero(radiusReductionTop);\n            radiusReductionBottom = numberOrZero(radiusReductionBottom);\n            me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n            me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n        },\n        setCenterPoint: function (leftMovement, rightMovement, topMovement, bottomMovement) {\n            var me = this;\n            var maxRight = me.width - rightMovement - me.drawingArea;\n            var maxLeft = leftMovement + me.drawingArea;\n            var maxTop = topMovement + me.drawingArea;\n            var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n            me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n            me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n        },\n        getIndexAngle: function (index) {\n            var angleMultiplier = Math.PI * 2 / getValueCount(this);\n            var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n            var startAngleRadians = startAngle * Math.PI * 2 / 360;\n            return index * angleMultiplier + startAngleRadians;\n        },\n        getDistanceFromCenterForValue: function (value) {\n            var me = this;\n            if (value === null) {\n                return 0;\n            }\n            var scalingFactor = me.drawingArea / (me.max - me.min);\n            if (me.options.ticks.reverse) {\n                return (me.max - value) * scalingFactor;\n            }\n            return (value - me.min) * scalingFactor;\n        },\n        getPointPosition: function (index, distanceFromCenter) {\n            var me = this;\n            var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n            return {\n                x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n                y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n            };\n        },\n        getPointPositionForValue: function (index, value) {\n            return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n        },\n        getBasePosition: function () {\n            var me = this;\n            var min = me.min;\n            var max = me.max;\n            return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n        },\n        draw: function () {\n            var me = this;\n            var opts = me.options;\n            var gridLineOpts = opts.gridLines;\n            var tickOpts = opts.ticks;\n            if (opts.display) {\n                var ctx = me.ctx;\n                var startAngle = this.getIndexAngle(0);\n                var tickFont = helpers.options._parseFont(tickOpts);\n                if (opts.angleLines.display || opts.pointLabels.display) {\n                    drawPointLabels(me);\n                }\n                helpers.each(me.ticks, function (label, index) {\n                    if (index > 0 || tickOpts.reverse) {\n                        var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n                        if (gridLineOpts.display && index !== 0) {\n                            drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n                        }\n                        if (tickOpts.display) {\n                            var tickFontColor = valueOrDefault(tickOpts.fontColor, defaults.global.defaultFontColor);\n                            ctx.font = tickFont.string;\n                            ctx.save();\n                            ctx.translate(me.xCenter, me.yCenter);\n                            ctx.rotate(startAngle);\n                            if (tickOpts.showLabelBackdrop) {\n                                var labelWidth = ctx.measureText(label).width;\n                                ctx.fillStyle = tickOpts.backdropColor;\n                                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n                            }\n                            ctx.textAlign = 'center';\n                            ctx.textBaseline = 'middle';\n                            ctx.fillStyle = tickFontColor;\n                            ctx.fillText(label, 0, -yCenterOffset);\n                            ctx.restore();\n                        }\n                    }\n                });\n            }\n        }\n    });\n    module.exports._defaults = defaultConfig;\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/scales/scale.time',[\n    '../core/core.adapters',\n    '../core/core.defaults',\n    '../helpers/index',\n    '../core/core.scale'\n], function (__module__0, __module__1, __module__2, __module__3) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var adapters = __module__0;\n    var defaults = __module__1;\n    var helpers = __module__2;\n    var Scale = __module__3;\n    var valueOrDefault = helpers.valueOrDefault;\n    var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n    var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n    var INTERVALS = {\n        millisecond: {\n            common: true,\n            size: 1,\n            steps: [\n                1,\n                2,\n                5,\n                10,\n                20,\n                50,\n                100,\n                250,\n                500\n            ]\n        },\n        second: {\n            common: true,\n            size: 1000,\n            steps: [\n                1,\n                2,\n                5,\n                10,\n                15,\n                30\n            ]\n        },\n        minute: {\n            common: true,\n            size: 60000,\n            steps: [\n                1,\n                2,\n                5,\n                10,\n                15,\n                30\n            ]\n        },\n        hour: {\n            common: true,\n            size: 3600000,\n            steps: [\n                1,\n                2,\n                3,\n                6,\n                12\n            ]\n        },\n        day: {\n            common: true,\n            size: 86400000,\n            steps: [\n                1,\n                2,\n                5\n            ]\n        },\n        week: {\n            common: false,\n            size: 604800000,\n            steps: [\n                1,\n                2,\n                3,\n                4\n            ]\n        },\n        month: {\n            common: true,\n            size: 2628000000,\n            steps: [\n                1,\n                2,\n                3\n            ]\n        },\n        quarter: {\n            common: false,\n            size: 7884000000,\n            steps: [\n                1,\n                2,\n                3,\n                4\n            ]\n        },\n        year: {\n            common: true,\n            size: 31540000000\n        }\n    };\n    var UNITS = Object.keys(INTERVALS);\n    function sorter(a, b) {\n        return a - b;\n    }\n    function arrayUnique(items) {\n        var hash = {};\n        var out = [];\n        var i, ilen, item;\n        for (i = 0, ilen = items.length; i < ilen; ++i) {\n            item = items[i];\n            if (!hash[item]) {\n                hash[item] = true;\n                out.push(item);\n            }\n        }\n        return out;\n    }\n    function buildLookupTable(timestamps, min, max, distribution) {\n        if (distribution === 'linear' || !timestamps.length) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        var table = [];\n        var items = [min];\n        var i, ilen, prev, curr, next;\n        for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n            curr = timestamps[i];\n            if (curr > min && curr < max) {\n                items.push(curr);\n            }\n        }\n        items.push(max);\n        for (i = 0, ilen = items.length; i < ilen; ++i) {\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n    function lookup(table, key, value) {\n        var lo = 0;\n        var hi = table.length - 1;\n        var mid, i0, i1;\n        while (lo >= 0 && lo <= hi) {\n            mid = lo + hi >> 1;\n            i0 = table[mid - 1] || null;\n            i1 = table[mid];\n            if (!i0) {\n                return {\n                    lo: null,\n                    hi: i1\n                };\n            } else if (i1[key] < value) {\n                lo = mid + 1;\n            } else if (i0[key] > value) {\n                hi = mid - 1;\n            } else {\n                return {\n                    lo: i0,\n                    hi: i1\n                };\n            }\n        }\n        return {\n            lo: i1,\n            hi: null\n        };\n    }\n    function interpolate(table, skey, sval, tkey) {\n        var range = lookup(table, skey, sval);\n        var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n        var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n        var span = next[skey] - prev[skey];\n        var ratio = span ? (sval - prev[skey]) / span : 0;\n        var offset = (next[tkey] - prev[tkey]) * ratio;\n        return prev[tkey] + offset;\n    }\n    function toTimestamp(scale, input) {\n        var adapter = scale._adapter;\n        var options = scale.options.time;\n        var parser = options.parser;\n        var format = parser || options.format;\n        var value = input;\n        if (typeof parser === 'function') {\n            value = parser(value);\n        }\n        if (!helpers.isFinite(value)) {\n            value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n        }\n        if (value !== null) {\n            return +value;\n        }\n        if (!parser && typeof format === 'function') {\n            value = format(input);\n            if (!helpers.isFinite(value)) {\n                value = adapter.parse(value);\n            }\n        }\n        return value;\n    }\n    function parse(scale, input) {\n        if (helpers.isNullOrUndef(input)) {\n            return null;\n        }\n        var options = scale.options.time;\n        var value = toTimestamp(scale, scale.getRightValue(input));\n        if (value === null) {\n            return value;\n        }\n        if (options.round) {\n            value = +scale._adapter.startOf(value, options.round);\n        }\n        return value;\n    }\n    function determineStepSize(min, max, unit, capacity) {\n        var range = max - min;\n        var interval = INTERVALS[unit];\n        var milliseconds = interval.size;\n        var steps = interval.steps;\n        var i, ilen, factor;\n        if (!steps) {\n            return Math.ceil(range / (capacity * milliseconds));\n        }\n        for (i = 0, ilen = steps.length; i < ilen; ++i) {\n            factor = steps[i];\n            if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n                break;\n            }\n        }\n        return factor;\n    }\n    function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n        var ilen = UNITS.length;\n        var i, interval, factor;\n        for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n            interval = INTERVALS[UNITS[i]];\n            factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n            if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n                return UNITS[i];\n            }\n        }\n        return UNITS[ilen - 1];\n    }\n    function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n        var ilen = UNITS.length;\n        var i, unit;\n        for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n            unit = UNITS[i];\n            if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n                return unit;\n            }\n        }\n        return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n    }\n    function determineMajorUnit(unit) {\n        for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n            if (INTERVALS[UNITS[i]].common) {\n                return UNITS[i];\n            }\n        }\n    }\n    function generate(scale, min, max, capacity) {\n        var adapter = scale._adapter;\n        var options = scale.options;\n        var timeOpts = options.time;\n        var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n        var major = determineMajorUnit(minor);\n        var stepSize = valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n        var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        var majorTicksEnabled = options.ticks.major.enabled;\n        var interval = INTERVALS[minor];\n        var first = min;\n        var last = max;\n        var ticks = [];\n        var time;\n        if (!stepSize) {\n            stepSize = determineStepSize(min, max, minor, capacity);\n        }\n        if (weekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n            last = +adapter.startOf(last, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, weekday ? 'day' : minor);\n        last = +adapter.startOf(last, weekday ? 'day' : minor);\n        if (last < max) {\n            last = +adapter.add(last, 1, minor);\n        }\n        time = first;\n        if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n            time = +adapter.startOf(time, major);\n            time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n        }\n        for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n            ticks.push(+time);\n        }\n        ticks.push(+time);\n        return ticks;\n    }\n    function computeOffsets(table, ticks, min, max, options) {\n        var start = 0;\n        var end = 0;\n        var first, last;\n        if (options.offset && ticks.length) {\n            if (!options.time.min) {\n                first = interpolate(table, 'time', ticks[0], 'pos');\n                if (ticks.length === 1) {\n                    start = 1 - first;\n                } else {\n                    start = (interpolate(table, 'time', ticks[1], 'pos') - first) / 2;\n                }\n            }\n            if (!options.time.max) {\n                last = interpolate(table, 'time', ticks[ticks.length - 1], 'pos');\n                if (ticks.length === 1) {\n                    end = last;\n                } else {\n                    end = (last - interpolate(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n                }\n            }\n        }\n        return {\n            start: start,\n            end: end\n        };\n    }\n    function ticksFromTimestamps(scale, values, majorUnit) {\n        var ticks = [];\n        var i, ilen, value, major;\n        for (i = 0, ilen = values.length; i < ilen; ++i) {\n            value = values[i];\n            major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n            ticks.push({\n                value: value,\n                major: major\n            });\n        }\n        return ticks;\n    }\n    var defaultConfig = {\n        position: 'bottom',\n        distribution: 'linear',\n        bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            format: false,\n            unit: false,\n            round: false,\n            displayFormat: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n            autoSkip: false,\n            source: 'auto',\n            major: { enabled: false }\n        }\n    };\n    module.exports = Scale.extend({\n        initialize: function () {\n            this.mergeTicksOptions();\n            Scale.prototype.initialize.call(this);\n        },\n        update: function () {\n            var me = this;\n            var options = me.options;\n            var time = options.time || (options.time = {});\n            var adapter = me._adapter = new adapters._date(options.adapters.date);\n            if (time.format) {\n                console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n            }\n            helpers.mergeIf(time.displayFormats, adapter.formats());\n            return Scale.prototype.update.apply(me, arguments);\n        },\n        getRightValue: function (rawValue) {\n            if (rawValue && rawValue.t !== undefined) {\n                rawValue = rawValue.t;\n            }\n            return Scale.prototype.getRightValue.call(this, rawValue);\n        },\n        determineDataLimits: function () {\n            var me = this;\n            var chart = me.chart;\n            var adapter = me._adapter;\n            var timeOpts = me.options.time;\n            var unit = timeOpts.unit || 'day';\n            var min = MAX_INTEGER;\n            var max = MIN_INTEGER;\n            var timestamps = [];\n            var datasets = [];\n            var labels = [];\n            var i, j, ilen, jlen, data, timestamp;\n            var dataLabels = chart.data.labels || [];\n            for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n                labels.push(parse(me, dataLabels[i]));\n            }\n            for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n                if (chart.isDatasetVisible(i)) {\n                    data = chart.data.datasets[i].data;\n                    if (helpers.isObject(data[0])) {\n                        datasets[i] = [];\n                        for (j = 0, jlen = data.length; j < jlen; ++j) {\n                            timestamp = parse(me, data[j]);\n                            timestamps.push(timestamp);\n                            datasets[i][j] = timestamp;\n                        }\n                    } else {\n                        for (j = 0, jlen = labels.length; j < jlen; ++j) {\n                            timestamps.push(labels[j]);\n                        }\n                        datasets[i] = labels.slice(0);\n                    }\n                } else {\n                    datasets[i] = [];\n                }\n            }\n            if (labels.length) {\n                labels = arrayUnique(labels).sort(sorter);\n                min = Math.min(min, labels[0]);\n                max = Math.max(max, labels[labels.length - 1]);\n            }\n            if (timestamps.length) {\n                timestamps = arrayUnique(timestamps).sort(sorter);\n                min = Math.min(min, timestamps[0]);\n                max = Math.max(max, timestamps[timestamps.length - 1]);\n            }\n            min = parse(me, timeOpts.min) || min;\n            max = parse(me, timeOpts.max) || max;\n            min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n            max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max;\n            me.min = Math.min(min, max);\n            me.max = Math.max(min + 1, max);\n            me._horizontal = me.isHorizontal();\n            me._table = [];\n            me._timestamps = {\n                data: timestamps,\n                datasets: datasets,\n                labels: labels\n            };\n        },\n        buildTicks: function () {\n            var me = this;\n            var min = me.min;\n            var max = me.max;\n            var options = me.options;\n            var timeOpts = options.time;\n            var timestamps = [];\n            var ticks = [];\n            var i, ilen, timestamp;\n            switch (options.ticks.source) {\n            case 'data':\n                timestamps = me._timestamps.data;\n                break;\n            case 'labels':\n                timestamps = me._timestamps.labels;\n                break;\n            case 'auto':\n            default:\n                timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n            }\n            if (options.bounds === 'ticks' && timestamps.length) {\n                min = timestamps[0];\n                max = timestamps[timestamps.length - 1];\n            }\n            min = parse(me, timeOpts.min) || min;\n            max = parse(me, timeOpts.max) || max;\n            for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n                timestamp = timestamps[i];\n                if (timestamp >= min && timestamp <= max) {\n                    ticks.push(timestamp);\n                }\n            }\n            me.min = min;\n            me.max = max;\n            me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n            me._majorUnit = determineMajorUnit(me._unit);\n            me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n            me._offsets = computeOffsets(me._table, ticks, min, max, options);\n            if (options.ticks.reverse) {\n                ticks.reverse();\n            }\n            return ticksFromTimestamps(me, ticks, me._majorUnit);\n        },\n        getLabelForIndex: function (index, datasetIndex) {\n            var me = this;\n            var adapter = me._adapter;\n            var data = me.chart.data;\n            var timeOpts = me.options.time;\n            var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n            var value = data.datasets[datasetIndex].data[index];\n            if (helpers.isObject(value)) {\n                label = me.getRightValue(value);\n            }\n            if (timeOpts.tooltipFormat) {\n                return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n            }\n            if (typeof label === 'string') {\n                return label;\n            }\n            return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n        },\n        tickFormatFunction: function (time, index, ticks, format) {\n            var me = this;\n            var adapter = me._adapter;\n            var options = me.options;\n            var formats = options.time.displayFormats;\n            var minorFormat = formats[me._unit];\n            var majorUnit = me._majorUnit;\n            var majorFormat = formats[majorUnit];\n            var majorTime = +adapter.startOf(time, majorUnit);\n            var majorTickOpts = options.ticks.major;\n            var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n            var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n            var tickOpts = major ? majorTickOpts : options.ticks.minor;\n            var formatter = valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n            return formatter ? formatter(label, index, ticks) : label;\n        },\n        convertTicksToLabels: function (ticks) {\n            var labels = [];\n            var i, ilen;\n            for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n                labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n            }\n            return labels;\n        },\n        getPixelForOffset: function (time) {\n            var me = this;\n            var isReverse = me.options.ticks.reverse;\n            var size = me._horizontal ? me.width : me.height;\n            var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n            var pos = interpolate(me._table, 'time', time, 'pos');\n            var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n            return isReverse ? start - offset : start + offset;\n        },\n        getPixelForValue: function (value, index, datasetIndex) {\n            var me = this;\n            var time = null;\n            if (index !== undefined && datasetIndex !== undefined) {\n                time = me._timestamps.datasets[datasetIndex][index];\n            }\n            if (time === null) {\n                time = parse(me, value);\n            }\n            if (time !== null) {\n                return me.getPixelForOffset(time);\n            }\n        },\n        getPixelForTick: function (index) {\n            var ticks = this.getTicks();\n            return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n        },\n        getValueForPixel: function (pixel) {\n            var me = this;\n            var size = me._horizontal ? me.width : me.height;\n            var start = me._horizontal ? me.left : me.top;\n            var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n            var time = interpolate(me._table, 'pos', pos, 'time');\n            return me._adapter._create(time);\n        },\n        getLabelWidth: function (label) {\n            var me = this;\n            var ticksOpts = me.options.ticks;\n            var tickLabelWidth = me.ctx.measureText(label).width;\n            var angle = helpers.toRadians(ticksOpts.maxRotation);\n            var cosRotation = Math.cos(angle);\n            var sinRotation = Math.sin(angle);\n            var tickFontSize = valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n            return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n        },\n        getLabelCapacity: function (exampleTime) {\n            var me = this;\n            var format = me.options.time.displayFormats.millisecond;\n            var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n            var tickLabelWidth = me.getLabelWidth(exampleLabel);\n            var innerWidth = me.isHorizontal() ? me.width : me.height;\n            var capacity = Math.floor(innerWidth / tickLabelWidth);\n            return capacity > 0 ? capacity : 1;\n        }\n    });\n    module.exports._defaults = defaultConfig;\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/scales/index',[\n    './scale.category',\n    './scale.linear',\n    './scale.logarithmic',\n    './scale.radialLinear',\n    './scale.time'\n], function (__module__0, __module__1, __module__2, __module__3, __module__4) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var category = __module__0;\n    var linear = __module__1;\n    var logarithmic = __module__2;\n    var radialLinear = __module__3;\n    var time = __module__4;\n    module.exports = {\n        category: category,\n        linear: linear,\n        logarithmic: logarithmic,\n        radialLinear: radialLinear,\n        time: time\n    };\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/adapters/adapter.moment',[\n    'skylark-moment',\n    '../core/core.adapters'\n], function (__module__0, __module__1) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var moment = __module__0;\n    var adapters = __module__1;\n    var FORMATS = {\n        datetime: 'MMM D, YYYY, h:mm:ss a',\n        millisecond: 'h:mm:ss.SSS a',\n        second: 'h:mm:ss a',\n        minute: 'h:mm a',\n        hour: 'hA',\n        day: 'MMM D',\n        week: 'll',\n        month: 'MMM YYYY',\n        quarter: '[Q]Q - YYYY',\n        year: 'YYYY'\n    };\n    adapters._date.override(typeof moment === 'function' ? {\n        _id: 'moment',\n        formats: function () {\n            return FORMATS;\n        },\n        parse: function (value, format) {\n            if (typeof value === 'string' && typeof format === 'string') {\n                value = moment(value, format);\n            } else if (!(value instanceof moment)) {\n                value = moment(value);\n            }\n            return value.isValid() ? value.valueOf() : null;\n        },\n        format: function (time, format) {\n            return moment(time).format(format);\n        },\n        add: function (time, amount, unit) {\n            return moment(time).add(amount, unit).valueOf();\n        },\n        diff: function (max, min, unit) {\n            return moment.duration(moment(max).diff(moment(min))).as(unit);\n        },\n        startOf: function (time, unit, weekday) {\n            time = moment(time);\n            if (unit === 'isoWeek') {\n                return time.isoWeekday(weekday).valueOf();\n            }\n            return time.startOf(unit).valueOf();\n        },\n        endOf: function (time, unit) {\n            return moment(time).endOf(unit).valueOf();\n        },\n        _create: function (time) {\n            return moment(time);\n        }\n    } : {});\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/adapters/index',['./adapter.moment'], function (__module__0) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    __module__0;\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/plugins/plugin.filler',[\n    '../core/core.defaults',\n    '../elements/index',\n    '../helpers/index'\n], function (__module__0, __module__1, __module__2) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var defaults = __module__0;\n    var elements = __module__1;\n    var helpers = __module__2;\n    defaults._set('global', { plugins: { filler: { propagate: true } } });\n    var mappers = {\n        dataset: function (source) {\n            var index = source.fill;\n            var chart = source.chart;\n            var meta = chart.getDatasetMeta(index);\n            var visible = meta && chart.isDatasetVisible(index);\n            var points = visible && meta.dataset._children || [];\n            var length = points.length || 0;\n            return !length ? null : function (point, i) {\n                return i < length && points[i]._view || null;\n            };\n        },\n        boundary: function (source) {\n            var boundary = source.boundary;\n            var x = boundary ? boundary.x : null;\n            var y = boundary ? boundary.y : null;\n            return function (point) {\n                return {\n                    x: x === null ? point.x : x,\n                    y: y === null ? point.y : y\n                };\n            };\n        }\n    };\n    function decodeFill(el, index, count) {\n        var model = el._model || {};\n        var fill = model.fill;\n        var target;\n        if (fill === undefined) {\n            fill = !!model.backgroundColor;\n        }\n        if (fill === false || fill === null) {\n            return false;\n        }\n        if (fill === true) {\n            return 'origin';\n        }\n        target = parseFloat(fill, 10);\n        if (isFinite(target) && Math.floor(target) === target) {\n            if (fill[0] === '-' || fill[0] === '+') {\n                target = index + target;\n            }\n            if (target === index || target < 0 || target >= count) {\n                return false;\n            }\n            return target;\n        }\n        switch (fill) {\n        case 'bottom':\n            return 'start';\n        case 'top':\n            return 'end';\n        case 'zero':\n            return 'origin';\n        case 'origin':\n        case 'start':\n        case 'end':\n            return fill;\n        default:\n            return false;\n        }\n    }\n    function computeBoundary(source) {\n        var model = source.el._model || {};\n        var scale = source.el._scale || {};\n        var fill = source.fill;\n        var target = null;\n        var horizontal;\n        if (isFinite(fill)) {\n            return null;\n        }\n        if (fill === 'start') {\n            target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n        } else if (fill === 'end') {\n            target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n        } else if (model.scaleZero !== undefined) {\n            target = model.scaleZero;\n        } else if (scale.getBasePosition) {\n            target = scale.getBasePosition();\n        } else if (scale.getBasePixel) {\n            target = scale.getBasePixel();\n        }\n        if (target !== undefined && target !== null) {\n            if (target.x !== undefined && target.y !== undefined) {\n                return target;\n            }\n            if (helpers.isFinite(target)) {\n                horizontal = scale.isHorizontal();\n                return {\n                    x: horizontal ? target : null,\n                    y: horizontal ? null : target\n                };\n            }\n        }\n        return null;\n    }\n    function resolveTarget(sources, index, propagate) {\n        var source = sources[index];\n        var fill = source.fill;\n        var visited = [index];\n        var target;\n        if (!propagate) {\n            return fill;\n        }\n        while (fill !== false && visited.indexOf(fill) === -1) {\n            if (!isFinite(fill)) {\n                return fill;\n            }\n            target = sources[fill];\n            if (!target) {\n                return false;\n            }\n            if (target.visible) {\n                return fill;\n            }\n            visited.push(fill);\n            fill = target.fill;\n        }\n        return false;\n    }\n    function createMapper(source) {\n        var fill = source.fill;\n        var type = 'dataset';\n        if (fill === false) {\n            return null;\n        }\n        if (!isFinite(fill)) {\n            type = 'boundary';\n        }\n        return mappers[type](source);\n    }\n    function isDrawable(point) {\n        return point && !point.skip;\n    }\n    function drawArea(ctx, curve0, curve1, len0, len1) {\n        var i;\n        if (!len0 || !len1) {\n            return;\n        }\n        ctx.moveTo(curve0[0].x, curve0[0].y);\n        for (i = 1; i < len0; ++i) {\n            helpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n        }\n        ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n        for (i = len1 - 1; i > 0; --i) {\n            helpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n        }\n    }\n    function doFill(ctx, points, mapper, view, color, loop) {\n        var count = points.length;\n        var span = view.spanGaps;\n        var curve0 = [];\n        var curve1 = [];\n        var len0 = 0;\n        var len1 = 0;\n        var i, ilen, index, p0, p1, d0, d1;\n        ctx.beginPath();\n        for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n            index = i % count;\n            p0 = points[index]._view;\n            p1 = mapper(p0, index, view);\n            d0 = isDrawable(p0);\n            d1 = isDrawable(p1);\n            if (d0 && d1) {\n                len0 = curve0.push(p0);\n                len1 = curve1.push(p1);\n            } else if (len0 && len1) {\n                if (!span) {\n                    drawArea(ctx, curve0, curve1, len0, len1);\n                    len0 = len1 = 0;\n                    curve0 = [];\n                    curve1 = [];\n                } else {\n                    if (d0) {\n                        curve0.push(p0);\n                    }\n                    if (d1) {\n                        curve1.push(p1);\n                    }\n                }\n            }\n        }\n        drawArea(ctx, curve0, curve1, len0, len1);\n        ctx.closePath();\n        ctx.fillStyle = color;\n        ctx.fill();\n    }\n    module.exports = {\n        id: 'filler',\n        afterDatasetsUpdate: function (chart, options) {\n            var count = (chart.data.datasets || []).length;\n            var propagate = options.propagate;\n            var sources = [];\n            var meta, i, el, source;\n            for (i = 0; i < count; ++i) {\n                meta = chart.getDatasetMeta(i);\n                el = meta.dataset;\n                source = null;\n                if (el && el._model && el instanceof elements.Line) {\n                    source = {\n                        visible: chart.isDatasetVisible(i),\n                        fill: decodeFill(el, i, count),\n                        chart: chart,\n                        el: el\n                    };\n                }\n                meta.$filler = source;\n                sources.push(source);\n            }\n            for (i = 0; i < count; ++i) {\n                source = sources[i];\n                if (!source) {\n                    continue;\n                }\n                source.fill = resolveTarget(sources, i, propagate);\n                source.boundary = computeBoundary(source);\n                source.mapper = createMapper(source);\n            }\n        },\n        beforeDatasetDraw: function (chart, args) {\n            var meta = args.meta.$filler;\n            if (!meta) {\n                return;\n            }\n            var ctx = chart.ctx;\n            var el = meta.el;\n            var view = el._view;\n            var points = el._children || [];\n            var mapper = meta.mapper;\n            var color = view.backgroundColor || defaults.global.defaultColor;\n            if (mapper && color && points.length) {\n                helpers.canvas.clipArea(ctx, chart.chartArea);\n                doFill(ctx, points, mapper, view, color, el._loop);\n                helpers.canvas.unclipArea(ctx);\n            }\n        }\n    };\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/plugins/plugin.legend',[\n    '../core/core.defaults',\n    '../core/core.element',\n    '../helpers/index',\n    '../core/core.layouts'\n], function (__module__0, __module__1, __module__2, __module__3) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var defaults = __module__0;\n    var Element = __module__1;\n    var helpers = __module__2;\n    var layouts = __module__3;\n    var noop = helpers.noop;\n    var valueOrDefault = helpers.valueOrDefault;\n    defaults._set('global', {\n        legend: {\n            display: true,\n            position: 'top',\n            fullWidth: true,\n            reverse: false,\n            weight: 1000,\n            onClick: function (e, legendItem) {\n                var index = legendItem.datasetIndex;\n                var ci = this.chart;\n                var meta = ci.getDatasetMeta(index);\n                meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n                ci.update();\n            },\n            onHover: null,\n            onLeave: null,\n            labels: {\n                boxWidth: 40,\n                padding: 10,\n                generateLabels: function (chart) {\n                    var data = chart.data;\n                    return helpers.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n                        return {\n                            text: dataset.label,\n                            fillStyle: !helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n                            hidden: !chart.isDatasetVisible(i),\n                            lineCap: dataset.borderCapStyle,\n                            lineDash: dataset.borderDash,\n                            lineDashOffset: dataset.borderDashOffset,\n                            lineJoin: dataset.borderJoinStyle,\n                            lineWidth: dataset.borderWidth,\n                            strokeStyle: dataset.borderColor,\n                            pointStyle: dataset.pointStyle,\n                            datasetIndex: i\n                        };\n                    }, this) : [];\n                }\n            }\n        },\n        legendCallback: function (chart) {\n            var text = [];\n            text.push('<ul class=\"' + chart.id + '-legend\">');\n            for (var i = 0; i < chart.data.datasets.length; i++) {\n                text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n                if (chart.data.datasets[i].label) {\n                    text.push(chart.data.datasets[i].label);\n                }\n                text.push('</li>');\n            }\n            text.push('</ul>');\n            return text.join('');\n        }\n    });\n    function getBoxWidth(labelOpts, fontSize) {\n        return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n    }\n    var Legend = Element.extend({\n        initialize: function (config) {\n            helpers.extend(this, config);\n            this.legendHitBoxes = [];\n            this._hoveredItem = null;\n            this.doughnutMode = false;\n        },\n        beforeUpdate: noop,\n        update: function (maxWidth, maxHeight, margins) {\n            var me = this;\n            me.beforeUpdate();\n            me.maxWidth = maxWidth;\n            me.maxHeight = maxHeight;\n            me.margins = margins;\n            me.beforeSetDimensions();\n            me.setDimensions();\n            me.afterSetDimensions();\n            me.beforeBuildLabels();\n            me.buildLabels();\n            me.afterBuildLabels();\n            me.beforeFit();\n            me.fit();\n            me.afterFit();\n            me.afterUpdate();\n            return me.minSize;\n        },\n        afterUpdate: noop,\n        beforeSetDimensions: noop,\n        setDimensions: function () {\n            var me = this;\n            if (me.isHorizontal()) {\n                me.width = me.maxWidth;\n                me.left = 0;\n                me.right = me.width;\n            } else {\n                me.height = me.maxHeight;\n                me.top = 0;\n                me.bottom = me.height;\n            }\n            me.paddingLeft = 0;\n            me.paddingTop = 0;\n            me.paddingRight = 0;\n            me.paddingBottom = 0;\n            me.minSize = {\n                width: 0,\n                height: 0\n            };\n        },\n        afterSetDimensions: noop,\n        beforeBuildLabels: noop,\n        buildLabels: function () {\n            var me = this;\n            var labelOpts = me.options.labels || {};\n            var legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n            if (labelOpts.filter) {\n                legendItems = legendItems.filter(function (item) {\n                    return labelOpts.filter(item, me.chart.data);\n                });\n            }\n            if (me.options.reverse) {\n                legendItems.reverse();\n            }\n            me.legendItems = legendItems;\n        },\n        afterBuildLabels: noop,\n        beforeFit: noop,\n        fit: function () {\n            var me = this;\n            var opts = me.options;\n            var labelOpts = opts.labels;\n            var display = opts.display;\n            var ctx = me.ctx;\n            var labelFont = helpers.options._parseFont(labelOpts);\n            var fontSize = labelFont.size;\n            var hitboxes = me.legendHitBoxes = [];\n            var minSize = me.minSize;\n            var isHorizontal = me.isHorizontal();\n            if (isHorizontal) {\n                minSize.width = me.maxWidth;\n                minSize.height = display ? 10 : 0;\n            } else {\n                minSize.width = display ? 10 : 0;\n                minSize.height = me.maxHeight;\n            }\n            if (display) {\n                ctx.font = labelFont.string;\n                if (isHorizontal) {\n                    var lineWidths = me.lineWidths = [0];\n                    var totalHeight = 0;\n                    ctx.textAlign = 'left';\n                    ctx.textBaseline = 'top';\n                    helpers.each(me.legendItems, function (legendItem, i) {\n                        var boxWidth = getBoxWidth(labelOpts, fontSize);\n                        var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n                        if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n                            totalHeight += fontSize + labelOpts.padding;\n                            lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n                        }\n                        hitboxes[i] = {\n                            left: 0,\n                            top: 0,\n                            width: width,\n                            height: fontSize\n                        };\n                        lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n                    });\n                    minSize.height += totalHeight;\n                } else {\n                    var vPadding = labelOpts.padding;\n                    var columnWidths = me.columnWidths = [];\n                    var totalWidth = labelOpts.padding;\n                    var currentColWidth = 0;\n                    var currentColHeight = 0;\n                    var itemHeight = fontSize + vPadding;\n                    helpers.each(me.legendItems, function (legendItem, i) {\n                        var boxWidth = getBoxWidth(labelOpts, fontSize);\n                        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n                        if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n                            totalWidth += currentColWidth + labelOpts.padding;\n                            columnWidths.push(currentColWidth);\n                            currentColWidth = 0;\n                            currentColHeight = 0;\n                        }\n                        currentColWidth = Math.max(currentColWidth, itemWidth);\n                        currentColHeight += itemHeight;\n                        hitboxes[i] = {\n                            left: 0,\n                            top: 0,\n                            width: itemWidth,\n                            height: fontSize\n                        };\n                    });\n                    totalWidth += currentColWidth;\n                    columnWidths.push(currentColWidth);\n                    minSize.width += totalWidth;\n                }\n            }\n            me.width = minSize.width;\n            me.height = minSize.height;\n        },\n        afterFit: noop,\n        isHorizontal: function () {\n            return this.options.position === 'top' || this.options.position === 'bottom';\n        },\n        draw: function () {\n            var me = this;\n            var opts = me.options;\n            var labelOpts = opts.labels;\n            var globalDefaults = defaults.global;\n            var defaultColor = globalDefaults.defaultColor;\n            var lineDefault = globalDefaults.elements.line;\n            var legendWidth = me.width;\n            var lineWidths = me.lineWidths;\n            if (opts.display) {\n                var ctx = me.ctx;\n                var fontColor = valueOrDefault(labelOpts.fontColor, globalDefaults.defaultFontColor);\n                var labelFont = helpers.options._parseFont(labelOpts);\n                var fontSize = labelFont.size;\n                var cursor;\n                ctx.textAlign = 'left';\n                ctx.textBaseline = 'middle';\n                ctx.lineWidth = 0.5;\n                ctx.strokeStyle = fontColor;\n                ctx.fillStyle = fontColor;\n                ctx.font = labelFont.string;\n                var boxWidth = getBoxWidth(labelOpts, fontSize);\n                var hitboxes = me.legendHitBoxes;\n                var drawLegendBox = function (x, y, legendItem) {\n                    if (isNaN(boxWidth) || boxWidth <= 0) {\n                        return;\n                    }\n                    ctx.save();\n                    var lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n                    ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n                    ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n                    ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n                    ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n                    ctx.lineWidth = lineWidth;\n                    ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n                    if (ctx.setLineDash) {\n                        ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n                    }\n                    if (opts.labels && opts.labels.usePointStyle) {\n                        var radius = boxWidth * Math.SQRT2 / 2;\n                        var centerX = x + boxWidth / 2;\n                        var centerY = y + fontSize / 2;\n                        helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n                    } else {\n                        if (lineWidth !== 0) {\n                            ctx.strokeRect(x, y, boxWidth, fontSize);\n                        }\n                        ctx.fillRect(x, y, boxWidth, fontSize);\n                    }\n                    ctx.restore();\n                };\n                var fillText = function (x, y, legendItem, textWidth) {\n                    var halfFontSize = fontSize / 2;\n                    var xLeft = boxWidth + halfFontSize + x;\n                    var yMiddle = y + halfFontSize;\n                    ctx.fillText(legendItem.text, xLeft, yMiddle);\n                    if (legendItem.hidden) {\n                        ctx.beginPath();\n                        ctx.lineWidth = 2;\n                        ctx.moveTo(xLeft, yMiddle);\n                        ctx.lineTo(xLeft + textWidth, yMiddle);\n                        ctx.stroke();\n                    }\n                };\n                var isHorizontal = me.isHorizontal();\n                if (isHorizontal) {\n                    cursor = {\n                        x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n                        y: me.top + labelOpts.padding,\n                        line: 0\n                    };\n                } else {\n                    cursor = {\n                        x: me.left + labelOpts.padding,\n                        y: me.top + labelOpts.padding,\n                        line: 0\n                    };\n                }\n                var itemHeight = fontSize + labelOpts.padding;\n                helpers.each(me.legendItems, function (legendItem, i) {\n                    var textWidth = ctx.measureText(legendItem.text).width;\n                    var width = boxWidth + fontSize / 2 + textWidth;\n                    var x = cursor.x;\n                    var y = cursor.y;\n                    if (isHorizontal) {\n                        if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n                            y = cursor.y += itemHeight;\n                            cursor.line++;\n                            x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n                        }\n                    } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n                        x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n                        y = cursor.y = me.top + labelOpts.padding;\n                        cursor.line++;\n                    }\n                    drawLegendBox(x, y, legendItem);\n                    hitboxes[i].left = x;\n                    hitboxes[i].top = y;\n                    fillText(x, y, legendItem, textWidth);\n                    if (isHorizontal) {\n                        cursor.x += width + labelOpts.padding;\n                    } else {\n                        cursor.y += itemHeight;\n                    }\n                });\n            }\n        },\n        _getLegendItemAt: function (x, y) {\n            var me = this;\n            var i, hitBox, lh;\n            if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n                lh = me.legendHitBoxes;\n                for (i = 0; i < lh.length; ++i) {\n                    hitBox = lh[i];\n                    if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n                        return me.legendItems[i];\n                    }\n                }\n            }\n            return null;\n        },\n        handleEvent: function (e) {\n            var me = this;\n            var opts = me.options;\n            var type = e.type === 'mouseup' ? 'click' : e.type;\n            var hoveredItem;\n            if (type === 'mousemove') {\n                if (!opts.onHover && !opts.onLeave) {\n                    return;\n                }\n            } else if (type === 'click') {\n                if (!opts.onClick) {\n                    return;\n                }\n            } else {\n                return;\n            }\n            hoveredItem = me._getLegendItemAt(e.x, e.y);\n            if (type === 'click') {\n                if (hoveredItem && opts.onClick) {\n                    opts.onClick.call(me, e.native, hoveredItem);\n                }\n            } else {\n                if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n                    if (me._hoveredItem) {\n                        opts.onLeave.call(me, e.native, me._hoveredItem);\n                    }\n                    me._hoveredItem = hoveredItem;\n                }\n                if (opts.onHover && hoveredItem) {\n                    opts.onHover.call(me, e.native, hoveredItem);\n                }\n            }\n        }\n    });\n    function createNewLegendAndAttach(chart, legendOpts) {\n        var legend = new Legend({\n            ctx: chart.ctx,\n            options: legendOpts,\n            chart: chart\n        });\n        layouts.configure(chart, legend, legendOpts);\n        layouts.addBox(chart, legend);\n        chart.legend = legend;\n    }\n    module.exports = {\n        id: 'legend',\n        _element: Legend,\n        beforeInit: function (chart) {\n            var legendOpts = chart.options.legend;\n            if (legendOpts) {\n                createNewLegendAndAttach(chart, legendOpts);\n            }\n        },\n        beforeUpdate: function (chart) {\n            var legendOpts = chart.options.legend;\n            var legend = chart.legend;\n            if (legendOpts) {\n                helpers.mergeIf(legendOpts, defaults.global.legend);\n                if (legend) {\n                    layouts.configure(chart, legend, legendOpts);\n                    legend.options = legendOpts;\n                } else {\n                    createNewLegendAndAttach(chart, legendOpts);\n                }\n            } else if (legend) {\n                layouts.removeBox(chart, legend);\n                delete chart.legend;\n            }\n        },\n        afterEvent: function (chart, e) {\n            var legend = chart.legend;\n            if (legend) {\n                legend.handleEvent(e);\n            }\n        }\n    };\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/plugins/plugin.title',[\n    '../core/core.defaults',\n    '../core/core.element',\n    '../helpers/index',\n    '../core/core.layouts'\n], function (__module__0, __module__1, __module__2, __module__3) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var defaults = __module__0;\n    var Element = __module__1;\n    var helpers = __module__2;\n    var layouts = __module__3;\n    var noop = helpers.noop;\n    defaults._set('global', {\n        title: {\n            display: false,\n            fontStyle: 'bold',\n            fullWidth: true,\n            padding: 10,\n            position: 'top',\n            text: '',\n            weight: 2000\n        }\n    });\n    var Title = Element.extend({\n        initialize: function (config) {\n            var me = this;\n            helpers.extend(me, config);\n            me.legendHitBoxes = [];\n        },\n        beforeUpdate: noop,\n        update: function (maxWidth, maxHeight, margins) {\n            var me = this;\n            me.beforeUpdate();\n            me.maxWidth = maxWidth;\n            me.maxHeight = maxHeight;\n            me.margins = margins;\n            me.beforeSetDimensions();\n            me.setDimensions();\n            me.afterSetDimensions();\n            me.beforeBuildLabels();\n            me.buildLabels();\n            me.afterBuildLabels();\n            me.beforeFit();\n            me.fit();\n            me.afterFit();\n            me.afterUpdate();\n            return me.minSize;\n        },\n        afterUpdate: noop,\n        beforeSetDimensions: noop,\n        setDimensions: function () {\n            var me = this;\n            if (me.isHorizontal()) {\n                me.width = me.maxWidth;\n                me.left = 0;\n                me.right = me.width;\n            } else {\n                me.height = me.maxHeight;\n                me.top = 0;\n                me.bottom = me.height;\n            }\n            me.paddingLeft = 0;\n            me.paddingTop = 0;\n            me.paddingRight = 0;\n            me.paddingBottom = 0;\n            me.minSize = {\n                width: 0,\n                height: 0\n            };\n        },\n        afterSetDimensions: noop,\n        beforeBuildLabels: noop,\n        buildLabels: noop,\n        afterBuildLabels: noop,\n        beforeFit: noop,\n        fit: function () {\n            var me = this;\n            var opts = me.options;\n            var display = opts.display;\n            var minSize = me.minSize;\n            var lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n            var fontOpts = helpers.options._parseFont(opts);\n            var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n            if (me.isHorizontal()) {\n                minSize.width = me.maxWidth;\n                minSize.height = textSize;\n            } else {\n                minSize.width = textSize;\n                minSize.height = me.maxHeight;\n            }\n            me.width = minSize.width;\n            me.height = minSize.height;\n        },\n        afterFit: noop,\n        isHorizontal: function () {\n            var pos = this.options.position;\n            return pos === 'top' || pos === 'bottom';\n        },\n        draw: function () {\n            var me = this;\n            var ctx = me.ctx;\n            var opts = me.options;\n            if (opts.display) {\n                var fontOpts = helpers.options._parseFont(opts);\n                var lineHeight = fontOpts.lineHeight;\n                var offset = lineHeight / 2 + opts.padding;\n                var rotation = 0;\n                var top = me.top;\n                var left = me.left;\n                var bottom = me.bottom;\n                var right = me.right;\n                var maxWidth, titleX, titleY;\n                ctx.fillStyle = helpers.valueOrDefault(opts.fontColor, defaults.global.defaultFontColor);\n                ctx.font = fontOpts.string;\n                if (me.isHorizontal()) {\n                    titleX = left + (right - left) / 2;\n                    titleY = top + offset;\n                    maxWidth = right - left;\n                } else {\n                    titleX = opts.position === 'left' ? left + offset : right - offset;\n                    titleY = top + (bottom - top) / 2;\n                    maxWidth = bottom - top;\n                    rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n                }\n                ctx.save();\n                ctx.translate(titleX, titleY);\n                ctx.rotate(rotation);\n                ctx.textAlign = 'center';\n                ctx.textBaseline = 'middle';\n                var text = opts.text;\n                if (helpers.isArray(text)) {\n                    var y = 0;\n                    for (var i = 0; i < text.length; ++i) {\n                        ctx.fillText(text[i], 0, y, maxWidth);\n                        y += lineHeight;\n                    }\n                } else {\n                    ctx.fillText(text, 0, 0, maxWidth);\n                }\n                ctx.restore();\n            }\n        }\n    });\n    function createNewTitleBlockAndAttach(chart, titleOpts) {\n        var title = new Title({\n            ctx: chart.ctx,\n            options: titleOpts,\n            chart: chart\n        });\n        layouts.configure(chart, title, titleOpts);\n        layouts.addBox(chart, title);\n        chart.titleBlock = title;\n    }\n    module.exports = {\n        id: 'title',\n        _element: Title,\n        beforeInit: function (chart) {\n            var titleOpts = chart.options.title;\n            if (titleOpts) {\n                createNewTitleBlockAndAttach(chart, titleOpts);\n            }\n        },\n        beforeUpdate: function (chart) {\n            var titleOpts = chart.options.title;\n            var titleBlock = chart.titleBlock;\n            if (titleOpts) {\n                helpers.mergeIf(titleOpts, defaults.global.title);\n                if (titleBlock) {\n                    layouts.configure(chart, titleBlock, titleOpts);\n                    titleBlock.options = titleOpts;\n                } else {\n                    createNewTitleBlockAndAttach(chart, titleOpts);\n                }\n            } else if (titleBlock) {\n                layouts.removeBox(chart, titleBlock);\n                delete chart.titleBlock;\n            }\n        }\n    };\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/plugins/index',[\n    './plugin.filler',\n    './plugin.legend',\n    './plugin.title'\n], function (__module__0, __module__1, __module__2) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    module.exports = {};\n    module.exports.filler = __module__0;\n    module.exports.legend = __module__1;\n    module.exports.title = __module__2;\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs/main',[\n    './core/core.controller',\n    './helpers/index',\n    './core/core.helpers',\n    './core/core.adapters',\n    './core/core.animation',\n    './core/core.animations',\n    './controllers/index',\n    './core/core.datasetController',\n    './core/core.defaults',\n    './core/core.element',\n    './elements/index',\n    './core/core.interaction',\n    './core/core.layouts',\n    './platforms/platform',\n    './core/core.plugins',\n    './core/core.scale',\n    './core/core.scaleService',\n    './core/core.ticks',\n    './core/core.tooltip',\n    './scales/index',\n    './adapters/index',\n    './plugins/index',\n    './scales/scale.linearbase'\n], function (__module__0, __module__1, __module__2, __module__3, __module__4, __module__5, __module__6, __module__7, __module__8, __module__9, __module__10, __module__11, __module__12, __module__13, __module__14, __module__15, __module__16, __module__17, __module__18, __module__19, __module__20, __module__21, __module__22) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var Chart = __module__0;\n    Chart.helpers = __module__1;\n    __module__2(Chart);\n    Chart._adapters = __module__3;\n    Chart.Animation = __module__4;\n    Chart.animationService = __module__5;\n    Chart.controllers = __module__6;\n    Chart.DatasetController = __module__7;\n    Chart.defaults = __module__8;\n    Chart.Element = __module__9;\n    Chart.elements = __module__10;\n    Chart.Interaction = __module__11;\n    Chart.layouts = __module__12;\n    Chart.platform = __module__13;\n    Chart.plugins = __module__14;\n    Chart.Scale = __module__15;\n    Chart.scaleService = __module__16;\n    Chart.Ticks = __module__17;\n    Chart.Tooltip = __module__18;\n    var scales = __module__19;\n    Chart.helpers.each(scales, function (scale, type) {\n        Chart.scaleService.registerScaleType(type, scale, scale._defaults);\n    });\n    __module__20;\n    var plugins = __module__21;\n    for (var k in plugins) {\n        if (plugins.hasOwnProperty(k)) {\n            Chart.plugins.register(plugins[k]);\n        }\n    }\n    Chart.platform.initialize();\n    module.exports = Chart;\n    if (typeof window !== 'undefined') {\n        window.Chart = Chart;\n    }\n    Chart.Chart = Chart;\n    Chart.Legend = plugins.legend._element;\n    Chart.Title = plugins.title._element;\n    Chart.pluginService = Chart.plugins;\n    Chart.PluginBase = Chart.Element.extend({});\n    Chart.canvasHelpers = Chart.helpers.canvas;\n    Chart.layoutService = Chart.layouts;\n    Chart.LinearScaleBase = __module__22;\n    Chart.helpers.each([\n        'Bar',\n        'Bubble',\n        'Doughnut',\n        'Line',\n        'PolarArea',\n        'Radar',\n        'Scatter'\n    ], function (klass) {\n        Chart[klass] = function (ctx, cfg) {\n            return new Chart(ctx, Chart.helpers.merge(cfg || {}, { type: klass.charAt(0).toLowerCase() + klass.slice(1) }));\n        };\n    });\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine('skylark-chartjs', ['skylark-chartjs/main'], function (main) { return main; });\n\n"]}