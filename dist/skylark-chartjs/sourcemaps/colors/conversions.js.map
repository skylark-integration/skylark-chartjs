{"version":3,"sources":["colors/conversions.js"],"names":["define","cssKeywords","reverseKeywords","key","Object","keys","convert","rgb","channels","labels","hsl","hsv","hwb","cmyk","xyz","lab","lch","hex","keyword","ansi16","ansi256","hcg","apple","gray","model","Error","length","defineProperty","value","r","g","b","min","Math","max","delta","h","s","l","rdif","gdif","bdif","v","diff","diffc","c","k","reversed","currentClosestKeyword","currentClosestDistance","Infinity","distance","y","x","z","t2","t3","val","t1","i","smin","lmin","hi","floor","f","p","q","t","vmin","sl","wh","bl","ratio","n","m","a","y2","x2","z2","atan2","PI","sqrt","hr","cos","sin","args","saturation","round","ansi","color","mult","rem","string","toString","toUpperCase","substring","match","colorString","split","map","char","join","integer","parseInt","chroma","grayscale","hue","pure","w","mg"],"mappings":"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","file":"../../colors/conversions.js","sourcesContent":["define([\r\n\t\"./names\"\r\n],function(cssKeywords){\r\n\r\n\t/* MIT license */\r\n\t/* eslint-disable no-mixed-operators */\r\n\t//const cssKeywords = require('color-name');\r\n\r\n\t// NOTE: conversions should only return primitive values (i.e. arrays, or\r\n\t//       values that give correct `typeof` results).\r\n\t//       do not use box values types (i.e. Number(), String(), etc.)\r\n\r\n\tconst reverseKeywords = {};\r\n\tfor (const key of Object.keys(cssKeywords)) {\r\n\t\treverseKeywords[cssKeywords[key]] = key;\r\n\t}\r\n\r\n\tconst convert = {\r\n\t\trgb: {channels: 3, labels: 'rgb'},\r\n\t\thsl: {channels: 3, labels: 'hsl'},\r\n\t\thsv: {channels: 3, labels: 'hsv'},\r\n\t\thwb: {channels: 3, labels: 'hwb'},\r\n\t\tcmyk: {channels: 4, labels: 'cmyk'},\r\n\t\txyz: {channels: 3, labels: 'xyz'},\r\n\t\tlab: {channels: 3, labels: 'lab'},\r\n\t\tlch: {channels: 3, labels: 'lch'},\r\n\t\thex: {channels: 1, labels: ['hex']},\r\n\t\tkeyword: {channels: 1, labels: ['keyword']},\r\n\t\tansi16: {channels: 1, labels: ['ansi16']},\r\n\t\tansi256: {channels: 1, labels: ['ansi256']},\r\n\t\thcg: {channels: 3, labels: ['h', 'c', 'g']},\r\n\t\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\r\n\t\tgray: {channels: 1, labels: ['gray']}\r\n\t};\r\n\r\n\r\n\t// Hide .channels and .labels properties\r\n\tfor (const model of Object.keys(convert)) {\r\n\t\tif (!('channels' in convert[model])) {\r\n\t\t\tthrow new Error('missing channels property: ' + model);\r\n\t\t}\r\n\r\n\t\tif (!('labels' in convert[model])) {\r\n\t\t\tthrow new Error('missing channel labels property: ' + model);\r\n\t\t}\r\n\r\n\t\tif (convert[model].labels.length !== convert[model].channels) {\r\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\r\n\t\t}\r\n\r\n\t\tconst {channels, labels} = convert[model];\r\n\t\tdelete convert[model].channels;\r\n\t\tdelete convert[model].labels;\r\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\r\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\r\n\t}\r\n\r\n\tconvert.rgb.hsl = function (rgb) {\r\n\t\tconst r = rgb[0] / 255;\r\n\t\tconst g = rgb[1] / 255;\r\n\t\tconst b = rgb[2] / 255;\r\n\t\tconst min = Math.min(r, g, b);\r\n\t\tconst max = Math.max(r, g, b);\r\n\t\tconst delta = max - min;\r\n\t\tlet h;\r\n\t\tlet s;\r\n\r\n\t\tif (max === min) {\r\n\t\t\th = 0;\r\n\t\t} else if (r === max) {\r\n\t\t\th = (g - b) / delta;\r\n\t\t} else if (g === max) {\r\n\t\t\th = 2 + (b - r) / delta;\r\n\t\t} else if (b === max) {\r\n\t\t\th = 4 + (r - g) / delta;\r\n\t\t}\r\n\r\n\t\th = Math.min(h * 60, 360);\r\n\r\n\t\tif (h < 0) {\r\n\t\t\th += 360;\r\n\t\t}\r\n\r\n\t\tconst l = (min + max) / 2;\r\n\r\n\t\tif (max === min) {\r\n\t\t\ts = 0;\r\n\t\t} else if (l <= 0.5) {\r\n\t\t\ts = delta / (max + min);\r\n\t\t} else {\r\n\t\t\ts = delta / (2 - max - min);\r\n\t\t}\r\n\r\n\t\treturn [h, s * 100, l * 100];\r\n\t};\r\n\r\n\tconvert.rgb.hsv = function (rgb) {\r\n\t\tlet rdif;\r\n\t\tlet gdif;\r\n\t\tlet bdif;\r\n\t\tlet h;\r\n\t\tlet s;\r\n\r\n\t\tconst r = rgb[0] / 255;\r\n\t\tconst g = rgb[1] / 255;\r\n\t\tconst b = rgb[2] / 255;\r\n\t\tconst v = Math.max(r, g, b);\r\n\t\tconst diff = v - Math.min(r, g, b);\r\n\t\tconst diffc = function (c) {\r\n\t\t\treturn (v - c) / 6 / diff + 1 / 2;\r\n\t\t};\r\n\r\n\t\tif (diff === 0) {\r\n\t\t\th = 0;\r\n\t\t\ts = 0;\r\n\t\t} else {\r\n\t\t\ts = diff / v;\r\n\t\t\trdif = diffc(r);\r\n\t\t\tgdif = diffc(g);\r\n\t\t\tbdif = diffc(b);\r\n\r\n\t\t\tif (r === v) {\r\n\t\t\t\th = bdif - gdif;\r\n\t\t\t} else if (g === v) {\r\n\t\t\t\th = (1 / 3) + rdif - bdif;\r\n\t\t\t} else if (b === v) {\r\n\t\t\t\th = (2 / 3) + gdif - rdif;\r\n\t\t\t}\r\n\r\n\t\t\tif (h < 0) {\r\n\t\t\t\th += 1;\r\n\t\t\t} else if (h > 1) {\r\n\t\t\t\th -= 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn [\r\n\t\t\th * 360,\r\n\t\t\ts * 100,\r\n\t\t\tv * 100\r\n\t\t];\r\n\t};\r\n\r\n\tconvert.rgb.hwb = function (rgb) {\r\n\t\tconst r = rgb[0];\r\n\t\tconst g = rgb[1];\r\n\t\tlet b = rgb[2];\r\n\t\tconst h = convert.rgb.hsl(rgb)[0];\r\n\t\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\r\n\r\n\t\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\r\n\r\n\t\treturn [h, w * 100, b * 100];\r\n\t};\r\n\r\n\tconvert.rgb.cmyk = function (rgb) {\r\n\t\tconst r = rgb[0] / 255;\r\n\t\tconst g = rgb[1] / 255;\r\n\t\tconst b = rgb[2] / 255;\r\n\r\n\t\tconst k = Math.min(1 - r, 1 - g, 1 - b);\r\n\t\tconst c = (1 - r - k) / (1 - k) || 0;\r\n\t\tconst m = (1 - g - k) / (1 - k) || 0;\r\n\t\tconst y = (1 - b - k) / (1 - k) || 0;\r\n\r\n\t\treturn [c * 100, m * 100, y * 100, k * 100];\r\n\t};\r\n\r\n\tfunction comparativeDistance(x, y) {\r\n\t\t/*\r\n\t\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\r\n\t\t*/\r\n\t\treturn (\r\n\t\t\t((x[0] - y[0]) ** 2) +\r\n\t\t\t((x[1] - y[1]) ** 2) +\r\n\t\t\t((x[2] - y[2]) ** 2)\r\n\t\t);\r\n\t}\r\n\r\n\tconvert.rgb.keyword = function (rgb) {\r\n\t\tconst reversed = reverseKeywords[rgb];\r\n\t\tif (reversed) {\r\n\t\t\treturn reversed;\r\n\t\t}\r\n\r\n\t\tlet currentClosestDistance = Infinity;\r\n\t\tlet currentClosestKeyword;\r\n\r\n\t\tfor (const keyword of Object.keys(cssKeywords)) {\r\n\t\t\tconst value = cssKeywords[keyword];\r\n\r\n\t\t\t// Compute comparative distance\r\n\t\t\tconst distance = comparativeDistance(rgb, value);\r\n\r\n\t\t\t// Check if its less, if so set as closest\r\n\t\t\tif (distance < currentClosestDistance) {\r\n\t\t\t\tcurrentClosestDistance = distance;\r\n\t\t\t\tcurrentClosestKeyword = keyword;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn currentClosestKeyword;\r\n\t};\r\n\r\n\tconvert.keyword.rgb = function (keyword) {\r\n\t\treturn cssKeywords[keyword];\r\n\t};\r\n\r\n\tconvert.rgb.xyz = function (rgb) {\r\n\t\tlet r = rgb[0] / 255;\r\n\t\tlet g = rgb[1] / 255;\r\n\t\tlet b = rgb[2] / 255;\r\n\r\n\t\t// Assume sRGB\r\n\t\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\r\n\t\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\r\n\t\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\r\n\r\n\t\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\r\n\t\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\r\n\t\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\r\n\r\n\t\treturn [x * 100, y * 100, z * 100];\r\n\t};\r\n\r\n\tconvert.rgb.lab = function (rgb) {\r\n\t\tconst xyz = convert.rgb.xyz(rgb);\r\n\t\tlet x = xyz[0];\r\n\t\tlet y = xyz[1];\r\n\t\tlet z = xyz[2];\r\n\r\n\t\tx /= 95.047;\r\n\t\ty /= 100;\r\n\t\tz /= 108.883;\r\n\r\n\t\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\r\n\t\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\r\n\t\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\r\n\r\n\t\tconst l = (116 * y) - 16;\r\n\t\tconst a = 500 * (x - y);\r\n\t\tconst b = 200 * (y - z);\r\n\r\n\t\treturn [l, a, b];\r\n\t};\r\n\r\n\tconvert.hsl.rgb = function (hsl) {\r\n\t\tconst h = hsl[0] / 360;\r\n\t\tconst s = hsl[1] / 100;\r\n\t\tconst l = hsl[2] / 100;\r\n\t\tlet t2;\r\n\t\tlet t3;\r\n\t\tlet val;\r\n\r\n\t\tif (s === 0) {\r\n\t\t\tval = l * 255;\r\n\t\t\treturn [val, val, val];\r\n\t\t}\r\n\r\n\t\tif (l < 0.5) {\r\n\t\t\tt2 = l * (1 + s);\r\n\t\t} else {\r\n\t\t\tt2 = l + s - l * s;\r\n\t\t}\r\n\r\n\t\tconst t1 = 2 * l - t2;\r\n\r\n\t\tconst rgb = [0, 0, 0];\r\n\t\tfor (let i = 0; i < 3; i++) {\r\n\t\t\tt3 = h + 1 / 3 * -(i - 1);\r\n\t\t\tif (t3 < 0) {\r\n\t\t\t\tt3++;\r\n\t\t\t}\r\n\r\n\t\t\tif (t3 > 1) {\r\n\t\t\t\tt3--;\r\n\t\t\t}\r\n\r\n\t\t\tif (6 * t3 < 1) {\r\n\t\t\t\tval = t1 + (t2 - t1) * 6 * t3;\r\n\t\t\t} else if (2 * t3 < 1) {\r\n\t\t\t\tval = t2;\r\n\t\t\t} else if (3 * t3 < 2) {\r\n\t\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\r\n\t\t\t} else {\r\n\t\t\t\tval = t1;\r\n\t\t\t}\r\n\r\n\t\t\trgb[i] = val * 255;\r\n\t\t}\r\n\r\n\t\treturn rgb;\r\n\t};\r\n\r\n\tconvert.hsl.hsv = function (hsl) {\r\n\t\tconst h = hsl[0];\r\n\t\tlet s = hsl[1] / 100;\r\n\t\tlet l = hsl[2] / 100;\r\n\t\tlet smin = s;\r\n\t\tconst lmin = Math.max(l, 0.01);\r\n\r\n\t\tl *= 2;\r\n\t\ts *= (l <= 1) ? l : 2 - l;\r\n\t\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\r\n\t\tconst v = (l + s) / 2;\r\n\t\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\r\n\r\n\t\treturn [h, sv * 100, v * 100];\r\n\t};\r\n\r\n\tconvert.hsv.rgb = function (hsv) {\r\n\t\tconst h = hsv[0] / 60;\r\n\t\tconst s = hsv[1] / 100;\r\n\t\tlet v = hsv[2] / 100;\r\n\t\tconst hi = Math.floor(h) % 6;\r\n\r\n\t\tconst f = h - Math.floor(h);\r\n\t\tconst p = 255 * v * (1 - s);\r\n\t\tconst q = 255 * v * (1 - (s * f));\r\n\t\tconst t = 255 * v * (1 - (s * (1 - f)));\r\n\t\tv *= 255;\r\n\r\n\t\tswitch (hi) {\r\n\t\t\tcase 0:\r\n\t\t\t\treturn [v, t, p];\r\n\t\t\tcase 1:\r\n\t\t\t\treturn [q, v, p];\r\n\t\t\tcase 2:\r\n\t\t\t\treturn [p, v, t];\r\n\t\t\tcase 3:\r\n\t\t\t\treturn [p, q, v];\r\n\t\t\tcase 4:\r\n\t\t\t\treturn [t, p, v];\r\n\t\t\tcase 5:\r\n\t\t\t\treturn [v, p, q];\r\n\t\t}\r\n\t};\r\n\r\n\tconvert.hsv.hsl = function (hsv) {\r\n\t\tconst h = hsv[0];\r\n\t\tconst s = hsv[1] / 100;\r\n\t\tconst v = hsv[2] / 100;\r\n\t\tconst vmin = Math.max(v, 0.01);\r\n\t\tlet sl;\r\n\t\tlet l;\r\n\r\n\t\tl = (2 - s) * v;\r\n\t\tconst lmin = (2 - s) * vmin;\r\n\t\tsl = s * vmin;\r\n\t\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\r\n\t\tsl = sl || 0;\r\n\t\tl /= 2;\r\n\r\n\t\treturn [h, sl * 100, l * 100];\r\n\t};\r\n\r\n\t// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\r\n\tconvert.hwb.rgb = function (hwb) {\r\n\t\tconst h = hwb[0] / 360;\r\n\t\tlet wh = hwb[1] / 100;\r\n\t\tlet bl = hwb[2] / 100;\r\n\t\tconst ratio = wh + bl;\r\n\t\tlet f;\r\n\r\n\t\t// Wh + bl cant be > 1\r\n\t\tif (ratio > 1) {\r\n\t\t\twh /= ratio;\r\n\t\t\tbl /= ratio;\r\n\t\t}\r\n\r\n\t\tconst i = Math.floor(6 * h);\r\n\t\tconst v = 1 - bl;\r\n\t\tf = 6 * h - i;\r\n\r\n\t\tif ((i & 0x01) !== 0) {\r\n\t\t\tf = 1 - f;\r\n\t\t}\r\n\r\n\t\tconst n = wh + f * (v - wh); // Linear interpolation\r\n\r\n\t\tlet r;\r\n\t\tlet g;\r\n\t\tlet b;\r\n\t\t/* eslint-disable max-statements-per-line,no-multi-spaces */\r\n\t\tswitch (i) {\r\n\t\t\tdefault:\r\n\t\t\tcase 6:\r\n\t\t\tcase 0: r = v;  g = n;  b = wh; break;\r\n\t\t\tcase 1: r = n;  g = v;  b = wh; break;\r\n\t\t\tcase 2: r = wh; g = v;  b = n; break;\r\n\t\t\tcase 3: r = wh; g = n;  b = v; break;\r\n\t\t\tcase 4: r = n;  g = wh; b = v; break;\r\n\t\t\tcase 5: r = v;  g = wh; b = n; break;\r\n\t\t}\r\n\t\t/* eslint-enable max-statements-per-line,no-multi-spaces */\r\n\r\n\t\treturn [r * 255, g * 255, b * 255];\r\n\t};\r\n\r\n\tconvert.cmyk.rgb = function (cmyk) {\r\n\t\tconst c = cmyk[0] / 100;\r\n\t\tconst m = cmyk[1] / 100;\r\n\t\tconst y = cmyk[2] / 100;\r\n\t\tconst k = cmyk[3] / 100;\r\n\r\n\t\tconst r = 1 - Math.min(1, c * (1 - k) + k);\r\n\t\tconst g = 1 - Math.min(1, m * (1 - k) + k);\r\n\t\tconst b = 1 - Math.min(1, y * (1 - k) + k);\r\n\r\n\t\treturn [r * 255, g * 255, b * 255];\r\n\t};\r\n\r\n\tconvert.xyz.rgb = function (xyz) {\r\n\t\tconst x = xyz[0] / 100;\r\n\t\tconst y = xyz[1] / 100;\r\n\t\tconst z = xyz[2] / 100;\r\n\t\tlet r;\r\n\t\tlet g;\r\n\t\tlet b;\r\n\r\n\t\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\r\n\t\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\r\n\t\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\r\n\r\n\t\t// Assume sRGB\r\n\t\tr = r > 0.0031308\r\n\t\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\r\n\t\t\t: r * 12.92;\r\n\r\n\t\tg = g > 0.0031308\r\n\t\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\r\n\t\t\t: g * 12.92;\r\n\r\n\t\tb = b > 0.0031308\r\n\t\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\r\n\t\t\t: b * 12.92;\r\n\r\n\t\tr = Math.min(Math.max(0, r), 1);\r\n\t\tg = Math.min(Math.max(0, g), 1);\r\n\t\tb = Math.min(Math.max(0, b), 1);\r\n\r\n\t\treturn [r * 255, g * 255, b * 255];\r\n\t};\r\n\r\n\tconvert.xyz.lab = function (xyz) {\r\n\t\tlet x = xyz[0];\r\n\t\tlet y = xyz[1];\r\n\t\tlet z = xyz[2];\r\n\r\n\t\tx /= 95.047;\r\n\t\ty /= 100;\r\n\t\tz /= 108.883;\r\n\r\n\t\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\r\n\t\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\r\n\t\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\r\n\r\n\t\tconst l = (116 * y) - 16;\r\n\t\tconst a = 500 * (x - y);\r\n\t\tconst b = 200 * (y - z);\r\n\r\n\t\treturn [l, a, b];\r\n\t};\r\n\r\n\tconvert.lab.xyz = function (lab) {\r\n\t\tconst l = lab[0];\r\n\t\tconst a = lab[1];\r\n\t\tconst b = lab[2];\r\n\t\tlet x;\r\n\t\tlet y;\r\n\t\tlet z;\r\n\r\n\t\ty = (l + 16) / 116;\r\n\t\tx = a / 500 + y;\r\n\t\tz = y - b / 200;\r\n\r\n\t\tconst y2 = y ** 3;\r\n\t\tconst x2 = x ** 3;\r\n\t\tconst z2 = z ** 3;\r\n\t\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\r\n\t\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\r\n\t\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\r\n\r\n\t\tx *= 95.047;\r\n\t\ty *= 100;\r\n\t\tz *= 108.883;\r\n\r\n\t\treturn [x, y, z];\r\n\t};\r\n\r\n\tconvert.lab.lch = function (lab) {\r\n\t\tconst l = lab[0];\r\n\t\tconst a = lab[1];\r\n\t\tconst b = lab[2];\r\n\t\tlet h;\r\n\r\n\t\tconst hr = Math.atan2(b, a);\r\n\t\th = hr * 360 / 2 / Math.PI;\r\n\r\n\t\tif (h < 0) {\r\n\t\t\th += 360;\r\n\t\t}\r\n\r\n\t\tconst c = Math.sqrt(a * a + b * b);\r\n\r\n\t\treturn [l, c, h];\r\n\t};\r\n\r\n\tconvert.lch.lab = function (lch) {\r\n\t\tconst l = lch[0];\r\n\t\tconst c = lch[1];\r\n\t\tconst h = lch[2];\r\n\r\n\t\tconst hr = h / 360 * 2 * Math.PI;\r\n\t\tconst a = c * Math.cos(hr);\r\n\t\tconst b = c * Math.sin(hr);\r\n\r\n\t\treturn [l, a, b];\r\n\t};\r\n\r\n\tconvert.rgb.ansi16 = function (args, saturation = null) {\r\n\t\tconst [r, g, b] = args;\r\n\t\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\r\n\r\n\t\tvalue = Math.round(value / 50);\r\n\r\n\t\tif (value === 0) {\r\n\t\t\treturn 30;\r\n\t\t}\r\n\r\n\t\tlet ansi = 30\r\n\t\t\t+ ((Math.round(b / 255) << 2)\r\n\t\t\t| (Math.round(g / 255) << 1)\r\n\t\t\t| Math.round(r / 255));\r\n\r\n\t\tif (value === 2) {\r\n\t\t\tansi += 60;\r\n\t\t}\r\n\r\n\t\treturn ansi;\r\n\t};\r\n\r\n\tconvert.hsv.ansi16 = function (args) {\r\n\t\t// Optimization here; we already know the value and don't need to get\r\n\t\t// it converted for us.\r\n\t\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\r\n\t};\r\n\r\n\tconvert.rgb.ansi256 = function (args) {\r\n\t\tconst r = args[0];\r\n\t\tconst g = args[1];\r\n\t\tconst b = args[2];\r\n\r\n\t\t// We use the extended greyscale palette here, with the exception of\r\n\t\t// black and white. normal palette only has 4 greyscale shades.\r\n\t\tif (r === g && g === b) {\r\n\t\t\tif (r < 8) {\r\n\t\t\t\treturn 16;\r\n\t\t\t}\r\n\r\n\t\t\tif (r > 248) {\r\n\t\t\t\treturn 231;\r\n\t\t\t}\r\n\r\n\t\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\r\n\t\t}\r\n\r\n\t\tconst ansi = 16\r\n\t\t\t+ (36 * Math.round(r / 255 * 5))\r\n\t\t\t+ (6 * Math.round(g / 255 * 5))\r\n\t\t\t+ Math.round(b / 255 * 5);\r\n\r\n\t\treturn ansi;\r\n\t};\r\n\r\n\tconvert.ansi16.rgb = function (args) {\r\n\t\tlet color = args % 10;\r\n\r\n\t\t// Handle greyscale\r\n\t\tif (color === 0 || color === 7) {\r\n\t\t\tif (args > 50) {\r\n\t\t\t\tcolor += 3.5;\r\n\t\t\t}\r\n\r\n\t\t\tcolor = color / 10.5 * 255;\r\n\r\n\t\t\treturn [color, color, color];\r\n\t\t}\r\n\r\n\t\tconst mult = (~~(args > 50) + 1) * 0.5;\r\n\t\tconst r = ((color & 1) * mult) * 255;\r\n\t\tconst g = (((color >> 1) & 1) * mult) * 255;\r\n\t\tconst b = (((color >> 2) & 1) * mult) * 255;\r\n\r\n\t\treturn [r, g, b];\r\n\t};\r\n\r\n\tconvert.ansi256.rgb = function (args) {\r\n\t\t// Handle greyscale\r\n\t\tif (args >= 232) {\r\n\t\t\tconst c = (args - 232) * 10 + 8;\r\n\t\t\treturn [c, c, c];\r\n\t\t}\r\n\r\n\t\targs -= 16;\r\n\r\n\t\tlet rem;\r\n\t\tconst r = Math.floor(args / 36) / 5 * 255;\r\n\t\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\r\n\t\tconst b = (rem % 6) / 5 * 255;\r\n\r\n\t\treturn [r, g, b];\r\n\t};\r\n\r\n\tconvert.rgb.hex = function (args) {\r\n\t\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\r\n\t\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\r\n\t\t\t+ (Math.round(args[2]) & 0xFF);\r\n\r\n\t\tconst string = integer.toString(16).toUpperCase();\r\n\t\treturn '000000'.substring(string.length) + string;\r\n\t};\r\n\r\n\tconvert.hex.rgb = function (args) {\r\n\t\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\r\n\t\tif (!match) {\r\n\t\t\treturn [0, 0, 0];\r\n\t\t}\r\n\r\n\t\tlet colorString = match[0];\r\n\r\n\t\tif (match[0].length === 3) {\r\n\t\t\tcolorString = colorString.split('').map(char => {\r\n\t\t\t\treturn char + char;\r\n\t\t\t}).join('');\r\n\t\t}\r\n\r\n\t\tconst integer = parseInt(colorString, 16);\r\n\t\tconst r = (integer >> 16) & 0xFF;\r\n\t\tconst g = (integer >> 8) & 0xFF;\r\n\t\tconst b = integer & 0xFF;\r\n\r\n\t\treturn [r, g, b];\r\n\t};\r\n\r\n\tconvert.rgb.hcg = function (rgb) {\r\n\t\tconst r = rgb[0] / 255;\r\n\t\tconst g = rgb[1] / 255;\r\n\t\tconst b = rgb[2] / 255;\r\n\t\tconst max = Math.max(Math.max(r, g), b);\r\n\t\tconst min = Math.min(Math.min(r, g), b);\r\n\t\tconst chroma = (max - min);\r\n\t\tlet grayscale;\r\n\t\tlet hue;\r\n\r\n\t\tif (chroma < 1) {\r\n\t\t\tgrayscale = min / (1 - chroma);\r\n\t\t} else {\r\n\t\t\tgrayscale = 0;\r\n\t\t}\r\n\r\n\t\tif (chroma <= 0) {\r\n\t\t\thue = 0;\r\n\t\t} else\r\n\t\tif (max === r) {\r\n\t\t\thue = ((g - b) / chroma) % 6;\r\n\t\t} else\r\n\t\tif (max === g) {\r\n\t\t\thue = 2 + (b - r) / chroma;\r\n\t\t} else {\r\n\t\t\thue = 4 + (r - g) / chroma;\r\n\t\t}\r\n\r\n\t\thue /= 6;\r\n\t\thue %= 1;\r\n\r\n\t\treturn [hue * 360, chroma * 100, grayscale * 100];\r\n\t};\r\n\r\n\tconvert.hsl.hcg = function (hsl) {\r\n\t\tconst s = hsl[1] / 100;\r\n\t\tconst l = hsl[2] / 100;\r\n\r\n\t\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\r\n\r\n\t\tlet f = 0;\r\n\t\tif (c < 1.0) {\r\n\t\t\tf = (l - 0.5 * c) / (1.0 - c);\r\n\t\t}\r\n\r\n\t\treturn [hsl[0], c * 100, f * 100];\r\n\t};\r\n\r\n\tconvert.hsv.hcg = function (hsv) {\r\n\t\tconst s = hsv[1] / 100;\r\n\t\tconst v = hsv[2] / 100;\r\n\r\n\t\tconst c = s * v;\r\n\t\tlet f = 0;\r\n\r\n\t\tif (c < 1.0) {\r\n\t\t\tf = (v - c) / (1 - c);\r\n\t\t}\r\n\r\n\t\treturn [hsv[0], c * 100, f * 100];\r\n\t};\r\n\r\n\tconvert.hcg.rgb = function (hcg) {\r\n\t\tconst h = hcg[0] / 360;\r\n\t\tconst c = hcg[1] / 100;\r\n\t\tconst g = hcg[2] / 100;\r\n\r\n\t\tif (c === 0.0) {\r\n\t\t\treturn [g * 255, g * 255, g * 255];\r\n\t\t}\r\n\r\n\t\tconst pure = [0, 0, 0];\r\n\t\tconst hi = (h % 1) * 6;\r\n\t\tconst v = hi % 1;\r\n\t\tconst w = 1 - v;\r\n\t\tlet mg = 0;\r\n\r\n\t\t/* eslint-disable max-statements-per-line */\r\n\t\tswitch (Math.floor(hi)) {\r\n\t\t\tcase 0:\r\n\t\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\r\n\t\t\tcase 1:\r\n\t\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\r\n\t\t\tcase 2:\r\n\t\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\r\n\t\t\tcase 3:\r\n\t\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\r\n\t\t\tcase 4:\r\n\t\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\r\n\t\t\tdefault:\r\n\t\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\r\n\t\t}\r\n\t\t/* eslint-enable max-statements-per-line */\r\n\r\n\t\tmg = (1.0 - c) * g;\r\n\r\n\t\treturn [\r\n\t\t\t(c * pure[0] + mg) * 255,\r\n\t\t\t(c * pure[1] + mg) * 255,\r\n\t\t\t(c * pure[2] + mg) * 255\r\n\t\t];\r\n\t};\r\n\r\n\tconvert.hcg.hsv = function (hcg) {\r\n\t\tconst c = hcg[1] / 100;\r\n\t\tconst g = hcg[2] / 100;\r\n\r\n\t\tconst v = c + g * (1.0 - c);\r\n\t\tlet f = 0;\r\n\r\n\t\tif (v > 0.0) {\r\n\t\t\tf = c / v;\r\n\t\t}\r\n\r\n\t\treturn [hcg[0], f * 100, v * 100];\r\n\t};\r\n\r\n\tconvert.hcg.hsl = function (hcg) {\r\n\t\tconst c = hcg[1] / 100;\r\n\t\tconst g = hcg[2] / 100;\r\n\r\n\t\tconst l = g * (1.0 - c) + 0.5 * c;\r\n\t\tlet s = 0;\r\n\r\n\t\tif (l > 0.0 && l < 0.5) {\r\n\t\t\ts = c / (2 * l);\r\n\t\t} else\r\n\t\tif (l >= 0.5 && l < 1.0) {\r\n\t\t\ts = c / (2 * (1 - l));\r\n\t\t}\r\n\r\n\t\treturn [hcg[0], s * 100, l * 100];\r\n\t};\r\n\r\n\tconvert.hcg.hwb = function (hcg) {\r\n\t\tconst c = hcg[1] / 100;\r\n\t\tconst g = hcg[2] / 100;\r\n\t\tconst v = c + g * (1.0 - c);\r\n\t\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\r\n\t};\r\n\r\n\tconvert.hwb.hcg = function (hwb) {\r\n\t\tconst w = hwb[1] / 100;\r\n\t\tconst b = hwb[2] / 100;\r\n\t\tconst v = 1 - b;\r\n\t\tconst c = v - w;\r\n\t\tlet g = 0;\r\n\r\n\t\tif (c < 1) {\r\n\t\t\tg = (v - c) / (1 - c);\r\n\t\t}\r\n\r\n\t\treturn [hwb[0], c * 100, g * 100];\r\n\t};\r\n\r\n\tconvert.apple.rgb = function (apple) {\r\n\t\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\r\n\t};\r\n\r\n\tconvert.rgb.apple = function (rgb) {\r\n\t\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\r\n\t};\r\n\r\n\tconvert.gray.rgb = function (args) {\r\n\t\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\r\n\t};\r\n\r\n\tconvert.gray.hsl = function (args) {\r\n\t\treturn [0, 0, args[0]];\r\n\t};\r\n\r\n\tconvert.gray.hsv = convert.gray.hsl;\r\n\r\n\tconvert.gray.hwb = function (gray) {\r\n\t\treturn [0, 100, gray[0]];\r\n\t};\r\n\r\n\tconvert.gray.cmyk = function (gray) {\r\n\t\treturn [0, 0, 0, gray[0]];\r\n\t};\r\n\r\n\tconvert.gray.lab = function (gray) {\r\n\t\treturn [gray[0], 0, 0];\r\n\t};\r\n\r\n\tconvert.gray.hex = function (gray) {\r\n\t\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\r\n\t\tconst integer = (val << 16) + (val << 8) + val;\r\n\r\n\t\tconst string = integer.toString(16).toUpperCase();\r\n\t\treturn '000000'.substring(string.length) + string;\r\n\t};\r\n\r\n\tconvert.rgb.gray = function (rgb) {\r\n\t\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\r\n\t\treturn [val / 255 * 100];\r\n\t};\r\n\r\n\treturn convert\r\n});"]}