{"version":3,"sources":["packages/chartjs-color-string.js"],"names":["define","colorNames","getRgba","string","rgb","a","match","hexAlpha","i","length","parseInt","Math","round","slice","parseFloat","scale","getHsla","alpha","isNaN","getHwb","rgbaString","rgba","undefined","percentaString","hslaString","hsla","num","min","max","hexDouble","str","toString","toUpperCase","reverseNames","name","getRgb","getHsl","getAlpha","vals","hexString","rgbString","percentString","hslString","hwbString","hwb","keyword"],"mappings":"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","file":"../../packages/chartjs-color-string.js","sourcesContent":["define([\r\n  './color-name'\r\n],function(colorNames){\r\n \r\n   function getRgba(string) {\r\n     if (!string) {\r\n        return;\r\n     }\r\n     var abbr =  /^#([a-fA-F0-9]{3,4})$/i,\r\n         hex =  /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\r\n         rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\r\n         per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\r\n         keyword = /(\\w+)/;\r\n\r\n     var rgb = [0, 0, 0],\r\n         a = 1,\r\n         match = string.match(abbr),\r\n         hexAlpha = \"\";\r\n     if (match) {\r\n        match = match[1];\r\n        hexAlpha = match[3];\r\n        for (var i = 0; i < rgb.length; i++) {\r\n           rgb[i] = parseInt(match[i] + match[i], 16);\r\n        }\r\n        if (hexAlpha) {\r\n           a = Math.round((parseInt(hexAlpha + hexAlpha, 16) / 255) * 100) / 100;\r\n        }\r\n     }\r\n     else if (match = string.match(hex)) {\r\n        hexAlpha = match[2];\r\n        match = match[1];\r\n        for (var i = 0; i < rgb.length; i++) {\r\n           rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\r\n        }\r\n        if (hexAlpha) {\r\n           a = Math.round((parseInt(hexAlpha, 16) / 255) * 100) / 100;\r\n        }\r\n     }\r\n     else if (match = string.match(rgba)) {\r\n        for (var i = 0; i < rgb.length; i++) {\r\n           rgb[i] = parseInt(match[i + 1]);\r\n        }\r\n        a = parseFloat(match[4]);\r\n     }\r\n     else if (match = string.match(per)) {\r\n        for (var i = 0; i < rgb.length; i++) {\r\n           rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\r\n        }\r\n        a = parseFloat(match[4]);\r\n     }\r\n     else if (match = string.match(keyword)) {\r\n        if (match[1] == \"transparent\") {\r\n           return [0, 0, 0, 0];\r\n        }\r\n        rgb = colorNames[match[1]];\r\n        if (!rgb) {\r\n           return;\r\n        }\r\n     }\r\n\r\n     for (var i = 0; i < rgb.length; i++) {\r\n        rgb[i] = scale(rgb[i], 0, 255);\r\n     }\r\n     if (!a && a != 0) {\r\n        a = 1;\r\n     }\r\n     else {\r\n        a = scale(a, 0, 1);\r\n     }\r\n     rgb[3] = a;\r\n     return rgb;\r\n  }\r\n\r\n  function getHsla(string) {\r\n     if (!string) {\r\n        return;\r\n     }\r\n     var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n     var match = string.match(hsl);\r\n     if (match) {\r\n        var alpha = parseFloat(match[4]);\r\n        var h = scale(parseInt(match[1]), 0, 360),\r\n            s = scale(parseFloat(match[2]), 0, 100),\r\n            l = scale(parseFloat(match[3]), 0, 100),\r\n            a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n        return [h, s, l, a];\r\n     }\r\n  }\r\n\r\n  function getHwb(string) {\r\n     if (!string) {\r\n        return;\r\n     }\r\n     var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n     var match = string.match(hwb);\r\n     if (match) {\r\n      var alpha = parseFloat(match[4]);\r\n        var h = scale(parseInt(match[1]), 0, 360),\r\n            w = scale(parseFloat(match[2]), 0, 100),\r\n            b = scale(parseFloat(match[3]), 0, 100),\r\n            a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n        return [h, w, b, a];\r\n     }\r\n  }\r\n\r\n  function getRgb(string) {\r\n     var rgba = getRgba(string);\r\n     return rgba && rgba.slice(0, 3);\r\n  }\r\n\r\n  function getHsl(string) {\r\n    var hsla = getHsla(string);\r\n    return hsla && hsla.slice(0, 3);\r\n  }\r\n\r\n  function getAlpha(string) {\r\n     var vals = getRgba(string);\r\n     if (vals) {\r\n        return vals[3];\r\n     }\r\n     else if (vals = getHsla(string)) {\r\n        return vals[3];\r\n     }\r\n     else if (vals = getHwb(string)) {\r\n        return vals[3];\r\n     }\r\n  }\r\n\r\n  // generators\r\n  function hexString(rgba, a) {\r\n     var a = (a !== undefined && rgba.length === 3) ? a : rgba[3];\r\n     return \"#\" + hexDouble(rgba[0]) \r\n                + hexDouble(rgba[1])\r\n                + hexDouble(rgba[2])\r\n                + (\r\n                   (a >= 0 && a < 1)\r\n                   ? hexDouble(Math.round(a * 255))\r\n                   : \"\"\r\n                );\r\n  }\r\n\r\n  function rgbString(rgba, alpha) {\r\n     if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n        return rgbaString(rgba, alpha);\r\n     }\r\n     return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\r\n  }\r\n\r\n  function rgbaString(rgba, alpha) {\r\n     if (alpha === undefined) {\r\n        alpha = (rgba[3] !== undefined ? rgba[3] : 1);\r\n     }\r\n     return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\r\n             + \", \" + alpha + \")\";\r\n  }\r\n\r\n  function percentString(rgba, alpha) {\r\n     if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n        return percentaString(rgba, alpha);\r\n     }\r\n     var r = Math.round(rgba[0]/255 * 100),\r\n         g = Math.round(rgba[1]/255 * 100),\r\n         b = Math.round(rgba[2]/255 * 100);\r\n\r\n     return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\r\n  }\r\n\r\n  function percentaString(rgba, alpha) {\r\n     var r = Math.round(rgba[0]/255 * 100),\r\n         g = Math.round(rgba[1]/255 * 100),\r\n         b = Math.round(rgba[2]/255 * 100);\r\n     return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\r\n  }\r\n\r\n  function hslString(hsla, alpha) {\r\n     if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\r\n        return hslaString(hsla, alpha);\r\n     }\r\n     return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\r\n  }\r\n\r\n  function hslaString(hsla, alpha) {\r\n     if (alpha === undefined) {\r\n        alpha = (hsla[3] !== undefined ? hsla[3] : 1);\r\n     }\r\n     return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\r\n             + alpha + \")\";\r\n  }\r\n\r\n  // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\r\n  // (hwb have alpha optional & 1 is default value)\r\n  function hwbString(hwb, alpha) {\r\n     if (alpha === undefined) {\r\n        alpha = (hwb[3] !== undefined ? hwb[3] : 1);\r\n     }\r\n     return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\r\n             + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\r\n  }\r\n\r\n  function keyword(rgb) {\r\n    return reverseNames[rgb.slice(0, 3)];\r\n  }\r\n\r\n  // helpers\r\n  function scale(num, min, max) {\r\n     return Math.min(Math.max(min, num), max);\r\n  }\r\n\r\n  function hexDouble(num) {\r\n    var str = num.toString(16).toUpperCase();\r\n    return (str.length < 2) ? \"0\" + str : str;\r\n  }\r\n\r\n\r\n  //create a list of reverse color names\r\n  var reverseNames = {};\r\n  for (var name in colorNames) {\r\n     reverseNames[colorNames[name]] = name;\r\n  }\r\n\r\n return {\r\n     getRgba: getRgba,\r\n     getHsla: getHsla,\r\n     getRgb: getRgb,\r\n     getHsl: getHsl,\r\n     getHwb: getHwb,\r\n     getAlpha: getAlpha,\r\n\r\n     hexString: hexString,\r\n     rgbString: rgbString,\r\n     rgbaString: rgbaString,\r\n     percentString: percentString,\r\n     percentaString: percentaString,\r\n     hslString: hslString,\r\n     hslaString: hslaString,\r\n     hwbString: hwbString,\r\n     keyword: keyword\r\n  }\r\n\r\n});\r\n"]}