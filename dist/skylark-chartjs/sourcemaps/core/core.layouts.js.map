{"version":3,"sources":["core/core.layouts.js"],"names":["define","__module__0","__module__1","exports","module","helpers","filterByPosition","array","position","where","v","sortByWeight","reverse","forEach","i","_tmpIndex_","sort","a","b","v0","v1","weight","addSizeByPosition","boxes","size","each","box","isHorizontal","height","width","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","_set","layout","padding","top","right","bottom","left","defaults","addBox","chart","item","fullWidth","push","removeBox","layoutItem","index","indexOf","splice","configure","options","prop","props","ilen","length","hasOwnProperty","update","layoutOptions","toPadding","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","concat","horizontalBoxes","outerBoxes","chartWidth","chartHeight","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","minSize","horizontal","getPadding","boxPadding","Math","max","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","chartArea","minBox"],"mappings":"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","file":"../../core/core.layouts.js","sourcesContent":["define([\n    './core.defaults',\n    '../helpers/index'\n], function (__module__0, __module__1) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var defaults = __module__0;\n    var helpers = __module__1;\n    function filterByPosition(array, position) {\n        return helpers.where(array, function (v) {\n            return v.position === position;\n        });\n    }\n    function sortByWeight(array, reverse) {\n        array.forEach(function (v, i) {\n            v._tmpIndex_ = i;\n            return v;\n        });\n        array.sort(function (a, b) {\n            var v0 = reverse ? b : a;\n            var v1 = reverse ? a : b;\n            return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n        });\n        array.forEach(function (v) {\n            delete v._tmpIndex_;\n        });\n    }\n    function findMaxPadding(boxes) {\n        var top = 0;\n        var left = 0;\n        var bottom = 0;\n        var right = 0;\n        helpers.each(boxes, function (box) {\n            if (box.getPadding) {\n                var boxPadding = box.getPadding();\n                top = Math.max(top, boxPadding.top);\n                left = Math.max(left, boxPadding.left);\n                bottom = Math.max(bottom, boxPadding.bottom);\n                right = Math.max(right, boxPadding.right);\n            }\n        });\n        return {\n            top: top,\n            left: left,\n            bottom: bottom,\n            right: right\n        };\n    }\n    function addSizeByPosition(boxes, size) {\n        helpers.each(boxes, function (box) {\n            size[box.position] += box.isHorizontal() ? box.height : box.width;\n        });\n    }\n    defaults._set('global', {\n        layout: {\n            padding: {\n                top: 0,\n                right: 0,\n                bottom: 0,\n                left: 0\n            }\n        }\n    });\n    module.exports = {\n        defaults: {},\n        addBox: function (chart, item) {\n            if (!chart.boxes) {\n                chart.boxes = [];\n            }\n            item.fullWidth = item.fullWidth || false;\n            item.position = item.position || 'top';\n            item.weight = item.weight || 0;\n            chart.boxes.push(item);\n        },\n        removeBox: function (chart, layoutItem) {\n            var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n            if (index !== -1) {\n                chart.boxes.splice(index, 1);\n            }\n        },\n        configure: function (chart, item, options) {\n            var props = [\n                'fullWidth',\n                'position',\n                'weight'\n            ];\n            var ilen = props.length;\n            var i = 0;\n            var prop;\n            for (; i < ilen; ++i) {\n                prop = props[i];\n                if (options.hasOwnProperty(prop)) {\n                    item[prop] = options[prop];\n                }\n            }\n        },\n        update: function (chart, width, height) {\n            if (!chart) {\n                return;\n            }\n            var layoutOptions = chart.options.layout || {};\n            var padding = helpers.options.toPadding(layoutOptions.padding);\n            var leftPadding = padding.left;\n            var rightPadding = padding.right;\n            var topPadding = padding.top;\n            var bottomPadding = padding.bottom;\n            var leftBoxes = filterByPosition(chart.boxes, 'left');\n            var rightBoxes = filterByPosition(chart.boxes, 'right');\n            var topBoxes = filterByPosition(chart.boxes, 'top');\n            var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n            var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n            sortByWeight(leftBoxes, true);\n            sortByWeight(rightBoxes, false);\n            sortByWeight(topBoxes, true);\n            sortByWeight(bottomBoxes, false);\n            var verticalBoxes = leftBoxes.concat(rightBoxes);\n            var horizontalBoxes = topBoxes.concat(bottomBoxes);\n            var outerBoxes = verticalBoxes.concat(horizontalBoxes);\n            var chartWidth = width - leftPadding - rightPadding;\n            var chartHeight = height - topPadding - bottomPadding;\n            var chartAreaWidth = chartWidth / 2;\n            var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length;\n            var maxChartAreaWidth = chartWidth;\n            var maxChartAreaHeight = chartHeight;\n            var outerBoxSizes = {\n                top: topPadding,\n                left: leftPadding,\n                bottom: bottomPadding,\n                right: rightPadding\n            };\n            var minBoxSizes = [];\n            var maxPadding;\n            function getMinimumBoxSize(box) {\n                var minSize;\n                var isHorizontal = box.isHorizontal();\n                if (isHorizontal) {\n                    minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n                    maxChartAreaHeight -= minSize.height;\n                } else {\n                    minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n                    maxChartAreaWidth -= minSize.width;\n                }\n                minBoxSizes.push({\n                    horizontal: isHorizontal,\n                    width: minSize.width,\n                    box: box\n                });\n            }\n            helpers.each(outerBoxes, getMinimumBoxSize);\n            maxPadding = findMaxPadding(outerBoxes);\n            function fitBox(box) {\n                var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minBox) {\n                    return minBox.box === box;\n                });\n                if (minBoxSize) {\n                    if (minBoxSize.horizontal) {\n                        var scaleMargin = {\n                            left: Math.max(outerBoxSizes.left, maxPadding.left),\n                            right: Math.max(outerBoxSizes.right, maxPadding.right),\n                            top: 0,\n                            bottom: 0\n                        };\n                        box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n                    } else {\n                        box.update(minBoxSize.width, maxChartAreaHeight);\n                    }\n                }\n            }\n            helpers.each(verticalBoxes, fitBox);\n            addSizeByPosition(verticalBoxes, outerBoxSizes);\n            helpers.each(horizontalBoxes, fitBox);\n            addSizeByPosition(horizontalBoxes, outerBoxSizes);\n            function finalFitVerticalBox(box) {\n                var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minSize) {\n                    return minSize.box === box;\n                });\n                var scaleMargin = {\n                    left: 0,\n                    right: 0,\n                    top: outerBoxSizes.top,\n                    bottom: outerBoxSizes.bottom\n                };\n                if (minBoxSize) {\n                    box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n                }\n            }\n            helpers.each(verticalBoxes, finalFitVerticalBox);\n            outerBoxSizes = {\n                top: topPadding,\n                left: leftPadding,\n                bottom: bottomPadding,\n                right: rightPadding\n            };\n            addSizeByPosition(outerBoxes, outerBoxSizes);\n            var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n            outerBoxSizes.left += leftPaddingAddition;\n            outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n            var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n            outerBoxSizes.top += topPaddingAddition;\n            outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0);\n            var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n            var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n            if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n                helpers.each(verticalBoxes, function (box) {\n                    box.height = newMaxChartAreaHeight;\n                });\n                helpers.each(horizontalBoxes, function (box) {\n                    if (!box.fullWidth) {\n                        box.width = newMaxChartAreaWidth;\n                    }\n                });\n                maxChartAreaHeight = newMaxChartAreaHeight;\n                maxChartAreaWidth = newMaxChartAreaWidth;\n            }\n            var left = leftPadding + leftPaddingAddition;\n            var top = topPadding + topPaddingAddition;\n            function placeBox(box) {\n                if (box.isHorizontal()) {\n                    box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n                    box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n                    box.top = top;\n                    box.bottom = top + box.height;\n                    top = box.bottom;\n                } else {\n                    box.left = left;\n                    box.right = left + box.width;\n                    box.top = outerBoxSizes.top;\n                    box.bottom = outerBoxSizes.top + maxChartAreaHeight;\n                    left = box.right;\n                }\n            }\n            helpers.each(leftBoxes.concat(topBoxes), placeBox);\n            left += maxChartAreaWidth;\n            top += maxChartAreaHeight;\n            helpers.each(rightBoxes, placeBox);\n            helpers.each(bottomBoxes, placeBox);\n            chart.chartArea = {\n                left: outerBoxSizes.left,\n                top: outerBoxSizes.top,\n                right: outerBoxSizes.left + maxChartAreaWidth,\n                bottom: outerBoxSizes.top + maxChartAreaHeight\n            };\n            helpers.each(chartAreaBoxes, function (box) {\n                box.left = chart.chartArea.left;\n                box.top = chart.chartArea.top;\n                box.right = chart.chartArea.right;\n                box.bottom = chart.chartArea.bottom;\n                box.update(maxChartAreaWidth, maxChartAreaHeight);\n            });\n        }\n    };\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}