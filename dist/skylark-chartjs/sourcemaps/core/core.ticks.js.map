{"version":3,"sources":["core/core.ticks.js"],"names":["define","__module__0","exports","module","helpers","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","formatters","values","value","linear","tickValue","index","ticks","delta","length","Math","abs","floor","logDelta","log10","tickString","max","logTick","toExponential","numDecimal","min","toFixed","logarithmic","remain","pow"],"mappings":";;;;;;;AAAAA,QAAQ,oBAAqB,SAAUC,GACnC,aACA,IAAIC,WACAC,QAAWD,YACXE,EAAUH,EA+Cd,SAASI,EAAkBC,GACvB,MAAqB,iBAAPA,GAAmBC,MAAMC,QAAQF,KAPnD,SAAyBA,GACrB,IAAIG,EACJ,IAAKA,KAAQH,EACT,OAAO,EACX,OAAO,EAGiDI,CAAgBJ,GAE5E,OAjDAH,OAAOD,SACHS,YACIC,OAAQ,SAAUC,GACd,OAAOT,EAAQI,QAAQK,GAASA,EAAQ,GAAKA,GAEjDC,OAAQ,SAAUC,EAAWC,EAAOC,GAChC,IAAIC,EAAQD,EAAME,OAAS,EAAIF,EAAM,GAAKA,EAAM,GAAKA,EAAM,GAAKA,EAAM,GAClEG,KAAKC,IAAIH,GAAS,GACdH,IAAcK,KAAKE,MAAMP,KACzBG,EAAQH,EAAYK,KAAKE,MAAMP,IAGvC,IAAIQ,EAAWnB,EAAQoB,MAAMJ,KAAKC,IAAIH,IAClCO,EAAa,GACjB,GAAkB,IAAdV,EAEA,GADcK,KAAKM,IAAIN,KAAKC,IAAIJ,EAAM,IAAKG,KAAKC,IAAIJ,EAAMA,EAAME,OAAS,KAC3D,KAAQ,CAClB,IAAIQ,EAAUvB,EAAQoB,MAAMJ,KAAKC,IAAIN,IACrCU,EAAaV,EAAUa,cAAcR,KAAKE,MAAMK,GAAWP,KAAKE,MAAMC,QACnE,CACH,IAAIM,GAAc,EAAIT,KAAKE,MAAMC,GACjCM,EAAaT,KAAKM,IAAIN,KAAKU,IAAID,EAAY,IAAK,GAChDJ,EAAaV,EAAUgB,QAAQF,QAGnCJ,EAAa,IAEjB,OAAOA,GAEXO,YAAa,SAAUjB,EAAWC,EAAOC,GACrC,IAAIgB,EAASlB,EAAYK,KAAKc,IAAI,GAAId,KAAKE,MAAMlB,EAAQoB,MAAMT,KAC/D,OAAkB,IAAdA,EACO,IACW,IAAXkB,GAA2B,IAAXA,GAA2B,IAAXA,GAA0B,IAAVjB,GAAeA,IAAUC,EAAME,OAAS,EACxFJ,EAAUa,gBAEd,MAafvB,EAAkBF,OAAOD,SAClBC,OAAOD,QACTG,EAAkBH,SAChBA,aADN","file":"../../core/core.ticks.js","sourcesContent":["define(['../helpers/index'], function (__module__0) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var helpers = __module__0;\n    module.exports = {\n        formatters: {\n            values: function (value) {\n                return helpers.isArray(value) ? value : '' + value;\n            },\n            linear: function (tickValue, index, ticks) {\n                var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n                if (Math.abs(delta) > 1) {\n                    if (tickValue !== Math.floor(tickValue)) {\n                        delta = tickValue - Math.floor(tickValue);\n                    }\n                }\n                var logDelta = helpers.log10(Math.abs(delta));\n                var tickString = '';\n                if (tickValue !== 0) {\n                    var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n                    if (maxTick < 0.0001) {\n                        var logTick = helpers.log10(Math.abs(tickValue));\n                        tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n                    } else {\n                        var numDecimal = -1 * Math.floor(logDelta);\n                        numDecimal = Math.max(Math.min(numDecimal, 20), 0);\n                        tickString = tickValue.toFixed(numDecimal);\n                    }\n                } else {\n                    tickString = '0';\n                }\n                return tickString;\n            },\n            logarithmic: function (tickValue, index, ticks) {\n                var remain = tickValue / Math.pow(10, Math.floor(helpers.log10(tickValue)));\n                if (tickValue === 0) {\n                    return '0';\n                } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n                    return tickValue.toExponential();\n                }\n                return '';\n            }\n        }\n    };\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}