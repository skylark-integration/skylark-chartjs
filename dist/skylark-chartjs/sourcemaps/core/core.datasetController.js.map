{"version":3,"sources":["core/core.datasetController.js"],"names":["define","__module__0","exports","module","helpers","resolve","options","arrayEvents","unlistenArrayEvents","array","listener","stub","_chartjs","listeners","index","indexOf","splice","length","forEach","key","DatasetController","chart","datasetIndex","this","initialize","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","extend","prototype","datasetElementType","dataElementType","linkScales","addElements","updateIndex","me","meta","getMeta","dataset","getDataset","xAxisID","scales","xAxes","id","yAxisID","yAxes","data","datasets","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","update","destroy","_data","createMetaDataset","type","_chart","_datasetIndex","createMetaData","_index","i","ilen","metaData","addElementAndReset","element","updateElement","buildOrUpdateElements","Object","isExtensible","push","defineProperty","configurable","enumerable","value","method","charAt","toUpperCase","slice","base","args","call","arguments","res","apply","each","object","resyncElements","noop","transition","easingValue","elements","draw","removeHoverStyle","merge","_model","$previousStyle","setHoverStyle","custom","model","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","undefined","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","start","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","inherits"],"mappings":"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","file":"../../core/core.datasetController.js","sourcesContent":["define(['../helpers/index'], function (__module__0) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var helpers = __module__0;\n    var resolve = helpers.options.resolve;\n    var arrayEvents = [\n        'push',\n        'pop',\n        'shift',\n        'splice',\n        'unshift'\n    ];\n    function listenArrayEvents(array, listener) {\n        if (array._chartjs) {\n            array._chartjs.listeners.push(listener);\n            return;\n        }\n        Object.defineProperty(array, '_chartjs', {\n            configurable: true,\n            enumerable: false,\n            value: { listeners: [listener] }\n        });\n        arrayEvents.forEach(function (key) {\n            var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n            var base = array[key];\n            Object.defineProperty(array, key, {\n                configurable: true,\n                enumerable: false,\n                value: function () {\n                    var args = Array.prototype.slice.call(arguments);\n                    var res = base.apply(this, args);\n                    helpers.each(array._chartjs.listeners, function (object) {\n                        if (typeof object[method] === 'function') {\n                            object[method].apply(object, args);\n                        }\n                    });\n                    return res;\n                }\n            });\n        });\n    }\n    function unlistenArrayEvents(array, listener) {\n        var stub = array._chartjs;\n        if (!stub) {\n            return;\n        }\n        var listeners = stub.listeners;\n        var index = listeners.indexOf(listener);\n        if (index !== -1) {\n            listeners.splice(index, 1);\n        }\n        if (listeners.length > 0) {\n            return;\n        }\n        arrayEvents.forEach(function (key) {\n            delete array[key];\n        });\n        delete array._chartjs;\n    }\n    var DatasetController = function (chart, datasetIndex) {\n        this.initialize(chart, datasetIndex);\n    };\n    helpers.extend(DatasetController.prototype, {\n        datasetElementType: null,\n        dataElementType: null,\n        initialize: function (chart, datasetIndex) {\n            var me = this;\n            me.chart = chart;\n            me.index = datasetIndex;\n            me.linkScales();\n            me.addElements();\n        },\n        updateIndex: function (datasetIndex) {\n            this.index = datasetIndex;\n        },\n        linkScales: function () {\n            var me = this;\n            var meta = me.getMeta();\n            var dataset = me.getDataset();\n            if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n                meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n            }\n            if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n                meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n            }\n        },\n        getDataset: function () {\n            return this.chart.data.datasets[this.index];\n        },\n        getMeta: function () {\n            return this.chart.getDatasetMeta(this.index);\n        },\n        getScaleForId: function (scaleID) {\n            return this.chart.scales[scaleID];\n        },\n        _getValueScaleId: function () {\n            return this.getMeta().yAxisID;\n        },\n        _getIndexScaleId: function () {\n            return this.getMeta().xAxisID;\n        },\n        _getValueScale: function () {\n            return this.getScaleForId(this._getValueScaleId());\n        },\n        _getIndexScale: function () {\n            return this.getScaleForId(this._getIndexScaleId());\n        },\n        reset: function () {\n            this.update(true);\n        },\n        destroy: function () {\n            if (this._data) {\n                unlistenArrayEvents(this._data, this);\n            }\n        },\n        createMetaDataset: function () {\n            var me = this;\n            var type = me.datasetElementType;\n            return type && new type({\n                _chart: me.chart,\n                _datasetIndex: me.index\n            });\n        },\n        createMetaData: function (index) {\n            var me = this;\n            var type = me.dataElementType;\n            return type && new type({\n                _chart: me.chart,\n                _datasetIndex: me.index,\n                _index: index\n            });\n        },\n        addElements: function () {\n            var me = this;\n            var meta = me.getMeta();\n            var data = me.getDataset().data || [];\n            var metaData = meta.data;\n            var i, ilen;\n            for (i = 0, ilen = data.length; i < ilen; ++i) {\n                metaData[i] = metaData[i] || me.createMetaData(i);\n            }\n            meta.dataset = meta.dataset || me.createMetaDataset();\n        },\n        addElementAndReset: function (index) {\n            var element = this.createMetaData(index);\n            this.getMeta().data.splice(index, 0, element);\n            this.updateElement(element, index, true);\n        },\n        buildOrUpdateElements: function () {\n            var me = this;\n            var dataset = me.getDataset();\n            var data = dataset.data || (dataset.data = []);\n            if (me._data !== data) {\n                if (me._data) {\n                    unlistenArrayEvents(me._data, me);\n                }\n                if (data && Object.isExtensible(data)) {\n                    listenArrayEvents(data, me);\n                }\n                me._data = data;\n            }\n            me.resyncElements();\n        },\n        update: helpers.noop,\n        transition: function (easingValue) {\n            var meta = this.getMeta();\n            var elements = meta.data || [];\n            var ilen = elements.length;\n            var i = 0;\n            for (; i < ilen; ++i) {\n                elements[i].transition(easingValue);\n            }\n            if (meta.dataset) {\n                meta.dataset.transition(easingValue);\n            }\n        },\n        draw: function () {\n            var meta = this.getMeta();\n            var elements = meta.data || [];\n            var ilen = elements.length;\n            var i = 0;\n            if (meta.dataset) {\n                meta.dataset.draw();\n            }\n            for (; i < ilen; ++i) {\n                elements[i].draw();\n            }\n        },\n        removeHoverStyle: function (element) {\n            helpers.merge(element._model, element.$previousStyle || {});\n            delete element.$previousStyle;\n        },\n        setHoverStyle: function (element) {\n            var dataset = this.chart.data.datasets[element._datasetIndex];\n            var index = element._index;\n            var custom = element.custom || {};\n            var model = element._model;\n            var getHoverColor = helpers.getHoverColor;\n            element.$previousStyle = {\n                backgroundColor: model.backgroundColor,\n                borderColor: model.borderColor,\n                borderWidth: model.borderWidth\n            };\n            model.backgroundColor = resolve([\n                custom.hoverBackgroundColor,\n                dataset.hoverBackgroundColor,\n                getHoverColor(model.backgroundColor)\n            ], undefined, index);\n            model.borderColor = resolve([\n                custom.hoverBorderColor,\n                dataset.hoverBorderColor,\n                getHoverColor(model.borderColor)\n            ], undefined, index);\n            model.borderWidth = resolve([\n                custom.hoverBorderWidth,\n                dataset.hoverBorderWidth,\n                model.borderWidth\n            ], undefined, index);\n        },\n        resyncElements: function () {\n            var me = this;\n            var meta = me.getMeta();\n            var data = me.getDataset().data;\n            var numMeta = meta.data.length;\n            var numData = data.length;\n            if (numData < numMeta) {\n                meta.data.splice(numData, numMeta - numData);\n            } else if (numData > numMeta) {\n                me.insertElements(numMeta, numData - numMeta);\n            }\n        },\n        insertElements: function (start, count) {\n            for (var i = 0; i < count; ++i) {\n                this.addElementAndReset(start + i);\n            }\n        },\n        onDataPush: function () {\n            var count = arguments.length;\n            this.insertElements(this.getDataset().data.length - count, count);\n        },\n        onDataPop: function () {\n            this.getMeta().data.pop();\n        },\n        onDataShift: function () {\n            this.getMeta().data.shift();\n        },\n        onDataSplice: function (start, count) {\n            this.getMeta().data.splice(start, count);\n            this.insertElements(start, arguments.length - 2);\n        },\n        onDataUnshift: function () {\n            this.insertElements(0, arguments.length);\n        }\n    });\n    DatasetController.extend = helpers.inherits;\n    module.exports = DatasetController;\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}