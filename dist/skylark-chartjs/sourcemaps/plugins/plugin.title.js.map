{"version":3,"sources":["plugins/plugin.title.js"],"names":["define","__module__0","__module__1","__module__2","__module__3","exports","module","defaults","Element","helpers","layouts","noop","_set","title","display","fontStyle","fullWidth","padding","position","text","weight","Title","extend","initialize","config","this","legendHitBoxes","beforeUpdate","update","maxWidth","maxHeight","margins","me","beforeSetDimensions","setDimensions","afterSetDimensions","beforeBuildLabels","buildLabels","afterBuildLabels","beforeFit","fit","afterFit","afterUpdate","minSize","isHorizontal","width","left","right","height","top","bottom","paddingLeft","paddingTop","paddingRight","paddingBottom","opts","options","lineCount","isArray","length","fontOpts","_parseFont","textSize","lineHeight","pos","draw","ctx","titleX","titleY","offset","rotation","fillStyle","valueOrDefault","fontColor","global","defaultFontColor","font","string","Math","PI","save","translate","rotate","textAlign","textBaseline","y","i","fillText","restore","createNewTitleBlockAndAttach","chart","titleOpts","configure","addBox","titleBlock","__isValidToReturn","obj","Array","attr","__isEmptyObject","id","_element","beforeInit","mergeIf","removeBox"],"mappings":"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","file":"../../plugins/plugin.title.js","sourcesContent":["define([\n    '../core/core.defaults',\n    '../core/core.element',\n    '../helpers/index',\n    '../core/core.layouts'\n], function (__module__0, __module__1, __module__2, __module__3) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var defaults = __module__0;\n    var Element = __module__1;\n    var helpers = __module__2;\n    var layouts = __module__3;\n    var noop = helpers.noop;\n    defaults._set('global', {\n        title: {\n            display: false,\n            fontStyle: 'bold',\n            fullWidth: true,\n            padding: 10,\n            position: 'top',\n            text: '',\n            weight: 2000\n        }\n    });\n    var Title = Element.extend({\n        initialize: function (config) {\n            var me = this;\n            helpers.extend(me, config);\n            me.legendHitBoxes = [];\n        },\n        beforeUpdate: noop,\n        update: function (maxWidth, maxHeight, margins) {\n            var me = this;\n            me.beforeUpdate();\n            me.maxWidth = maxWidth;\n            me.maxHeight = maxHeight;\n            me.margins = margins;\n            me.beforeSetDimensions();\n            me.setDimensions();\n            me.afterSetDimensions();\n            me.beforeBuildLabels();\n            me.buildLabels();\n            me.afterBuildLabels();\n            me.beforeFit();\n            me.fit();\n            me.afterFit();\n            me.afterUpdate();\n            return me.minSize;\n        },\n        afterUpdate: noop,\n        beforeSetDimensions: noop,\n        setDimensions: function () {\n            var me = this;\n            if (me.isHorizontal()) {\n                me.width = me.maxWidth;\n                me.left = 0;\n                me.right = me.width;\n            } else {\n                me.height = me.maxHeight;\n                me.top = 0;\n                me.bottom = me.height;\n            }\n            me.paddingLeft = 0;\n            me.paddingTop = 0;\n            me.paddingRight = 0;\n            me.paddingBottom = 0;\n            me.minSize = {\n                width: 0,\n                height: 0\n            };\n        },\n        afterSetDimensions: noop,\n        beforeBuildLabels: noop,\n        buildLabels: noop,\n        afterBuildLabels: noop,\n        beforeFit: noop,\n        fit: function () {\n            var me = this;\n            var opts = me.options;\n            var display = opts.display;\n            var minSize = me.minSize;\n            var lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n            var fontOpts = helpers.options._parseFont(opts);\n            var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n            if (me.isHorizontal()) {\n                minSize.width = me.maxWidth;\n                minSize.height = textSize;\n            } else {\n                minSize.width = textSize;\n                minSize.height = me.maxHeight;\n            }\n            me.width = minSize.width;\n            me.height = minSize.height;\n        },\n        afterFit: noop,\n        isHorizontal: function () {\n            var pos = this.options.position;\n            return pos === 'top' || pos === 'bottom';\n        },\n        draw: function () {\n            var me = this;\n            var ctx = me.ctx;\n            var opts = me.options;\n            if (opts.display) {\n                var fontOpts = helpers.options._parseFont(opts);\n                var lineHeight = fontOpts.lineHeight;\n                var offset = lineHeight / 2 + opts.padding;\n                var rotation = 0;\n                var top = me.top;\n                var left = me.left;\n                var bottom = me.bottom;\n                var right = me.right;\n                var maxWidth, titleX, titleY;\n                ctx.fillStyle = helpers.valueOrDefault(opts.fontColor, defaults.global.defaultFontColor);\n                ctx.font = fontOpts.string;\n                if (me.isHorizontal()) {\n                    titleX = left + (right - left) / 2;\n                    titleY = top + offset;\n                    maxWidth = right - left;\n                } else {\n                    titleX = opts.position === 'left' ? left + offset : right - offset;\n                    titleY = top + (bottom - top) / 2;\n                    maxWidth = bottom - top;\n                    rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n                }\n                ctx.save();\n                ctx.translate(titleX, titleY);\n                ctx.rotate(rotation);\n                ctx.textAlign = 'center';\n                ctx.textBaseline = 'middle';\n                var text = opts.text;\n                if (helpers.isArray(text)) {\n                    var y = 0;\n                    for (var i = 0; i < text.length; ++i) {\n                        ctx.fillText(text[i], 0, y, maxWidth);\n                        y += lineHeight;\n                    }\n                } else {\n                    ctx.fillText(text, 0, 0, maxWidth);\n                }\n                ctx.restore();\n            }\n        }\n    });\n    function createNewTitleBlockAndAttach(chart, titleOpts) {\n        var title = new Title({\n            ctx: chart.ctx,\n            options: titleOpts,\n            chart: chart\n        });\n        layouts.configure(chart, title, titleOpts);\n        layouts.addBox(chart, title);\n        chart.titleBlock = title;\n    }\n    module.exports = {\n        id: 'title',\n        _element: Title,\n        beforeInit: function (chart) {\n            var titleOpts = chart.options.title;\n            if (titleOpts) {\n                createNewTitleBlockAndAttach(chart, titleOpts);\n            }\n        },\n        beforeUpdate: function (chart) {\n            var titleOpts = chart.options.title;\n            var titleBlock = chart.titleBlock;\n            if (titleOpts) {\n                helpers.mergeIf(titleOpts, defaults.global.title);\n                if (titleBlock) {\n                    layouts.configure(chart, titleBlock, titleOpts);\n                    titleBlock.options = titleOpts;\n                } else {\n                    createNewTitleBlockAndAttach(chart, titleOpts);\n                }\n            } else if (titleBlock) {\n                layouts.removeBox(chart, titleBlock);\n                delete chart.titleBlock;\n            }\n        }\n    };\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}