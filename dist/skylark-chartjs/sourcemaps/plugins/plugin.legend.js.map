{"version":3,"sources":["plugins/plugin.legend.js"],"names":["define","__module__0","__module__1","__module__2","__module__3","exports","module","defaults","Element","helpers","layouts","noop","valueOrDefault","getBoxWidth","labelOpts","fontSize","usePointStyle","boxWidth","_set","legend","display","position","fullWidth","reverse","weight","onClick","e","legendItem","index","datasetIndex","ci","this","chart","meta","getDatasetMeta","hidden","data","datasets","update","onHover","onLeave","labels","padding","generateLabels","isArray","map","dataset","i","text","label","fillStyle","backgroundColor","isDatasetVisible","lineCap","borderCapStyle","lineDash","borderDash","lineDashOffset","borderDashOffset","lineJoin","borderJoinStyle","lineWidth","borderWidth","strokeStyle","borderColor","pointStyle","legendCallback","push","id","length","join","Legend","extend","initialize","config","legendHitBoxes","_hoveredItem","doughnutMode","beforeUpdate","maxWidth","maxHeight","margins","me","beforeSetDimensions","setDimensions","afterSetDimensions","beforeBuildLabels","buildLabels","afterBuildLabels","beforeFit","fit","afterFit","afterUpdate","minSize","isHorizontal","width","left","right","height","top","bottom","paddingLeft","paddingTop","paddingRight","paddingBottom","options","legendItems","callback","filter","item","opts","ctx","labelFont","_parseFont","size","hitboxes","font","string","lineWidths","totalHeight","textAlign","textBaseline","each","measureText","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","Math","max","draw","globalDefaults","global","defaultColor","lineDefault","elements","line","legendWidth","cursor","fontColor","defaultFontColor","x","y","textWidth","isNaN","save","setLineDash","radius","SQRT2","centerX","centerY","canvas","drawPoint","strokeRect","fillRect","restore","drawLegendBox","halfFontSize","xLeft","yMiddle","fillText","beginPath","moveTo","lineTo","stroke","_getLegendItemAt","hitBox","lh","handleEvent","hoveredItem","type","call","native","createNewLegendAndAttach","legendOpts","configure","addBox","__isValidToReturn","obj","Array","attr","__isEmptyObject","_element","beforeInit","mergeIf","removeBox","afterEvent"],"mappings":";;;;;;;AAAAA,QACI,wBACA,uBACA,mBACA,wBACD,SAAUC,EAAaC,EAAaC,EAAaC,GAChD,aACA,IAAIC,WACAC,QAAWD,YACXE,EAAWN,EACXO,EAAUN,EACVO,EAAUN,EACVO,EAAUN,EACVO,EAAOF,EAAQE,KACfC,EAAiBH,EAAQG,eAsD7B,SAASC,EAAYC,EAAWC,GAC5B,OAAOD,EAAUE,eAAiBF,EAAUG,SAAWF,EAAWA,EAAWD,EAAUG,SAtD3FV,EAASW,KAAK,UACVC,QACIC,SAAS,EACTC,SAAU,MACVC,WAAW,EACXC,SAAS,EACTC,OAAQ,IACRC,QAAS,SAAUC,EAAGC,GAClB,IAAIC,EAAQD,EAAWE,aACnBC,EAAKC,KAAKC,MACVC,EAAOH,EAAGI,eAAeN,GAC7BK,EAAKE,OAAyB,OAAhBF,EAAKE,QAAmBL,EAAGM,KAAKC,SAAST,GAAOO,OAAS,KACvEL,EAAGQ,UAEPC,QAAS,KACTC,QAAS,KACTC,QACIxB,SAAU,GACVyB,QAAS,GACTC,eAAgB,SAAUX,GACtB,IAAII,EAAOJ,EAAMI,KACjB,OAAO3B,EAAQmC,QAAQR,EAAKC,UAAYD,EAAKC,SAASQ,IAAI,SAAUC,EAASC,GACzE,OACIC,KAAMF,EAAQG,MACdC,UAAYzC,EAAQmC,QAAQE,EAAQK,iBAA6CL,EAAQK,gBAAgB,GAAlDL,EAAQK,gBAC/DhB,QAASH,EAAMoB,iBAAiBL,GAChCM,QAASP,EAAQQ,eACjBC,SAAUT,EAAQU,WAClBC,eAAgBX,EAAQY,iBACxBC,SAAUb,EAAQc,gBAClBC,UAAWf,EAAQgB,YACnBC,YAAajB,EAAQkB,YACrBC,WAAYnB,EAAQmB,WACpBpC,aAAckB,IAEnBhB,YAIfmC,eAAgB,SAAUlC,GACtB,IAAIgB,KACJA,EAAKmB,KAAK,cAAgBnC,EAAMoC,GAAK,aACrC,IAAK,IAAIrB,EAAI,EAAGA,EAAIf,EAAMI,KAAKC,SAASgC,OAAQtB,IAC5CC,EAAKmB,KAAK,qCAAuCnC,EAAMI,KAAKC,SAASU,GAAGI,gBAAkB,aACtFnB,EAAMI,KAAKC,SAASU,GAAGE,OACvBD,EAAKmB,KAAKnC,EAAMI,KAAKC,SAASU,GAAGE,OAErCD,EAAKmB,KAAK,SAGd,OADAnB,EAAKmB,KAAK,SACHnB,EAAKsB,KAAK,OAMzB,IAAIC,EAAS/D,EAAQgE,QACjBC,WAAY,SAAUC,GAClBjE,EAAQ+D,OAAOzC,KAAM2C,GACrB3C,KAAK4C,kBACL5C,KAAK6C,aAAe,KACpB7C,KAAK8C,cAAe,GAExBC,aAAcnE,EACd2B,OAAQ,SAAUyC,EAAUC,EAAWC,GACnC,IAAIC,EAAKnD,KAeT,OAdAmD,EAAGJ,eACHI,EAAGH,SAAWA,EACdG,EAAGF,UAAYA,EACfE,EAAGD,QAAUA,EACbC,EAAGC,sBACHD,EAAGE,gBACHF,EAAGG,qBACHH,EAAGI,oBACHJ,EAAGK,cACHL,EAAGM,mBACHN,EAAGO,YACHP,EAAGQ,MACHR,EAAGS,WACHT,EAAGU,cACIV,EAAGW,SAEdD,YAAajF,EACbwE,oBAAqBxE,EACrByE,cAAe,WACX,IAAIF,EAAKnD,KACLmD,EAAGY,gBACHZ,EAAGa,MAAQb,EAAGH,SACdG,EAAGc,KAAO,EACVd,EAAGe,MAAQf,EAAGa,QAEdb,EAAGgB,OAAShB,EAAGF,UACfE,EAAGiB,IAAM,EACTjB,EAAGkB,OAASlB,EAAGgB,QAEnBhB,EAAGmB,YAAc,EACjBnB,EAAGoB,WAAa,EAChBpB,EAAGqB,aAAe,EAClBrB,EAAGsB,cAAgB,EACnBtB,EAAGW,SACCE,MAAO,EACPG,OAAQ,IAGhBb,mBAAoB1E,EACpB2E,kBAAmB3E,EACnB4E,YAAa,WACT,IAAIL,EAAKnD,KACLjB,EAAYoE,EAAGuB,QAAQhE,WACvBiE,EAAcjG,EAAQkG,SAAS7F,EAAU6B,gBAAiBuC,EAAGlD,OAAQkD,OACrEpE,EAAU8F,SACVF,EAAcA,EAAYE,OAAO,SAAUC,GACvC,OAAO/F,EAAU8F,OAAOC,EAAM3B,EAAGlD,MAAMI,SAG3C8C,EAAGuB,QAAQlF,SACXmF,EAAYnF,UAEhB2D,EAAGwB,YAAcA,GAErBlB,iBAAkB7E,EAClB8E,UAAW9E,EACX+E,IAAK,WACD,IAAIR,EAAKnD,KACL+E,EAAO5B,EAAGuB,QACV3F,EAAYgG,EAAKrE,OACjBrB,EAAU0F,EAAK1F,QACf2F,EAAM7B,EAAG6B,IACTC,EAAYvG,EAAQgG,QAAQQ,WAAWnG,GACvCC,EAAWiG,EAAUE,KACrBC,EAAWjC,EAAGP,kBACdkB,EAAUX,EAAGW,QACbC,EAAeZ,EAAGY,eAQtB,GAPIA,GACAD,EAAQE,MAAQb,EAAGH,SACnBc,EAAQK,OAAS9E,EAAU,GAAK,IAEhCyE,EAAQE,MAAQ3E,EAAU,GAAK,EAC/ByE,EAAQK,OAAShB,EAAGF,WAEpB5D,EAEA,GADA2F,EAAIK,KAAOJ,EAAUK,OACjBvB,EAAc,CACd,IAAIwB,EAAapC,EAAGoC,YAAc,GAC9BC,EAAc,EAClBR,EAAIS,UAAY,OAChBT,EAAIU,aAAe,MACnBhH,EAAQiH,KAAKxC,EAAGwB,YAAa,SAAU/E,EAAYoB,GAC/C,IACIgD,EADWlF,EAAYC,EAAWC,GACfA,EAAW,EAAIgG,EAAIY,YAAYhG,EAAWqB,MAAM+C,OAC7D,IAANhD,GAAWuE,EAAWA,EAAWjD,OAAS,GAAK0B,EAAQjF,EAAU4B,QAAUmD,EAAQE,SACnFwB,GAAexG,EAAWD,EAAU4B,QACpC4E,EAAWA,EAAWjD,QAAUtB,EAAI,EAAI,EAAI,IAAMjC,EAAU4B,SAEhEyE,EAASpE,IACLiD,KAAM,EACNG,IAAK,EACLJ,MAAOA,EACPG,OAAQnF,GAEZuG,EAAWA,EAAWjD,OAAS,IAAM0B,EAAQjF,EAAU4B,UAE3DmD,EAAQK,QAAUqB,MACf,CACH,IAAIK,EAAW9G,EAAU4B,QACrBmF,EAAe3C,EAAG2C,gBAClBC,EAAahH,EAAU4B,QACvBqF,EAAkB,EAClBC,EAAmB,EACnBC,EAAalH,EAAW6G,EAC5BnH,EAAQiH,KAAKxC,EAAGwB,YAAa,SAAU/E,EAAYoB,GAC/C,IACImF,EADWrH,EAAYC,EAAWC,GACXA,EAAW,EAAIgG,EAAIY,YAAYhG,EAAWqB,MAAM+C,MACvEhD,EAAI,GAAKiF,EAAmBC,EAAapC,EAAQK,OAAS0B,IAC1DE,GAAcC,EAAkBjH,EAAU4B,QAC1CmF,EAAa1D,KAAK4D,GAClBA,EAAkB,EAClBC,EAAmB,GAEvBD,EAAkBI,KAAKC,IAAIL,EAAiBG,GAC5CF,GAAoBC,EACpBd,EAASpE,IACLiD,KAAM,EACNG,IAAK,EACLJ,MAAOmC,EACPhC,OAAQnF,KAGhB+G,GAAcC,EACdF,EAAa1D,KAAK4D,GAClBlC,EAAQE,OAAS+B,EAGzB5C,EAAGa,MAAQF,EAAQE,MACnBb,EAAGgB,OAASL,EAAQK,QAExBP,SAAUhF,EACVmF,aAAc,WACV,MAAiC,QAA1B/D,KAAK0E,QAAQpF,UAAgD,WAA1BU,KAAK0E,QAAQpF,UAE3DgH,KAAM,WACF,IAAInD,EAAKnD,KACL+E,EAAO5B,EAAGuB,QACV3F,EAAYgG,EAAKrE,OACjB6F,EAAiB/H,EAASgI,OAC1BC,EAAeF,EAAeE,aAC9BC,EAAcH,EAAeI,SAASC,KACtCC,EAAc1D,EAAGa,MACjBuB,EAAapC,EAAGoC,WACpB,GAAIR,EAAK1F,QAAS,CACd,IAIIyH,EAJA9B,EAAM7B,EAAG6B,IACT+B,EAAYlI,EAAeE,EAAUgI,UAAWR,EAAeS,kBAC/D/B,EAAYvG,EAAQgG,QAAQQ,WAAWnG,GACvCC,EAAWiG,EAAUE,KAEzBH,EAAIS,UAAY,OAChBT,EAAIU,aAAe,SACnBV,EAAIlD,UAAY,GAChBkD,EAAIhD,YAAc+E,EAClB/B,EAAI7D,UAAY4F,EAChB/B,EAAIK,KAAOJ,EAAUK,OACrB,IAAIpG,EAAWJ,EAAYC,EAAWC,GAClCoG,EAAWjC,EAAGP,eA0CdmB,EAAeZ,EAAGY,eAElB+C,EADA/C,GAEIkD,EAAG9D,EAAGc,MAAQ4C,EAActB,EAAW,IAAM,EAAIxG,EAAU4B,QAC3DuG,EAAG/D,EAAGiB,IAAMrF,EAAU4B,QACtBiG,KAAM,IAINK,EAAG9D,EAAGc,KAAOlF,EAAU4B,QACvBuG,EAAG/D,EAAGiB,IAAMrF,EAAU4B,QACtBiG,KAAM,GAGd,IAAIV,EAAalH,EAAWD,EAAU4B,QACtCjC,EAAQiH,KAAKxC,EAAGwB,YAAa,SAAU/E,EAAYoB,GAC/C,IAAImG,EAAYnC,EAAIY,YAAYhG,EAAWqB,MAAM+C,MAC7CA,EAAQ9E,EAAWF,EAAW,EAAImI,EAClCF,EAAIH,EAAOG,EACXC,EAAIJ,EAAOI,EACXnD,EACI/C,EAAI,GAAKiG,EAAIjD,EAAQjF,EAAU4B,QAAUwC,EAAGc,KAAOd,EAAGW,QAAQE,QAC9DkD,EAAIJ,EAAOI,GAAKhB,EAChBY,EAAOF,OACPK,EAAIH,EAAOG,EAAI9D,EAAGc,MAAQ4C,EAActB,EAAWuB,EAAOF,OAAS,EAAI7H,EAAU4B,SAE9EK,EAAI,GAAKkG,EAAIhB,EAAa/C,EAAGiB,IAAMjB,EAAGW,QAAQK,SACrD8C,EAAIH,EAAOG,EAAIA,EAAI9D,EAAG2C,aAAagB,EAAOF,MAAQ7H,EAAU4B,QAC5DuG,EAAIJ,EAAOI,EAAI/D,EAAGiB,IAAMrF,EAAU4B,QAClCmG,EAAOF,QAtEK,SAAUK,EAAGC,EAAGtH,GAChC,KAAIwH,MAAMlI,IAAaA,GAAY,GAAnC,CAGA8F,EAAIqC,OACJ,IAAIvF,EAAYjD,EAAee,EAAWkC,UAAW4E,EAAY3E,aAUjE,GATAiD,EAAI7D,UAAYtC,EAAee,EAAWuB,UAAWsF,GACrDzB,EAAI1D,QAAUzC,EAAee,EAAW0B,QAASoF,EAAYnF,gBAC7DyD,EAAItD,eAAiB7C,EAAee,EAAW8B,eAAgBgF,EAAY/E,kBAC3EqD,EAAIpD,SAAW/C,EAAee,EAAWgC,SAAU8E,EAAY7E,iBAC/DmD,EAAIlD,UAAYA,EAChBkD,EAAIhD,YAAcnD,EAAee,EAAWoC,YAAayE,GACrDzB,EAAIsC,aACJtC,EAAIsC,YAAYzI,EAAee,EAAW4B,SAAUkF,EAAYjF,aAEhEsD,EAAKrE,QAAUqE,EAAKrE,OAAOzB,cAAe,CAC1C,IAAIsI,EAASrI,EAAWkH,KAAKoB,MAAQ,EACjCC,EAAUR,EAAI/H,EAAW,EACzBwI,EAAUR,EAAIlI,EAAW,EAC7BN,EAAQiJ,OAAOC,UAAU5C,EAAKpF,EAAWsC,WAAYqF,EAAQE,EAASC,QAEpD,IAAd5F,GACAkD,EAAI6C,WAAWZ,EAAGC,EAAGhI,EAAUF,GAEnCgG,EAAI8C,SAASb,EAAGC,EAAGhI,EAAUF,GAEjCgG,EAAI+C,WA8CJC,CAAcf,EAAGC,EAAGtH,GACpBwF,EAASpE,GAAGiD,KAAOgD,EACnB7B,EAASpE,GAAGoD,IAAM8C,EA9CP,SAAUD,EAAGC,EAAGtH,EAAYuH,GACvC,IAAIc,EAAejJ,EAAW,EAC1BkJ,EAAQhJ,EAAW+I,EAAehB,EAClCkB,EAAUjB,EAAIe,EAClBjD,EAAIoD,SAASxI,EAAWqB,KAAMiH,EAAOC,GACjCvI,EAAWQ,SACX4E,EAAIqD,YACJrD,EAAIlD,UAAY,EAChBkD,EAAIsD,OAAOJ,EAAOC,GAClBnD,EAAIuD,OAAOL,EAAQf,EAAWgB,GAC9BnD,EAAIwD,UAqCRJ,CAASnB,EAAGC,EAAGtH,EAAYuH,GACvBpD,EACA+C,EAAOG,GAAKjD,EAAQjF,EAAU4B,QAE9BmG,EAAOI,GAAKhB,MAK5BuC,iBAAkB,SAAUxB,EAAGC,GAC3B,IACIlG,EAAG0H,EAAQC,EADXxF,EAAKnD,KAET,GAAIiH,GAAK9D,EAAGc,MAAQgD,GAAK9D,EAAGe,OAASgD,GAAK/D,EAAGiB,KAAO8C,GAAK/D,EAAGkB,OAExD,IADAsE,EAAKxF,EAAGP,eACH5B,EAAI,EAAGA,EAAI2H,EAAGrG,SAAUtB,EAEzB,GAAIiG,IADJyB,EAASC,EAAG3H,IACIiD,MAAQgD,GAAKyB,EAAOzE,KAAOyE,EAAO1E,OAASkD,GAAKwB,EAAOtE,KAAO8C,GAAKwB,EAAOtE,IAAMsE,EAAOvE,OACnG,OAAOhB,EAAGwB,YAAY3D,GAIlC,OAAO,MAEX4H,YAAa,SAAUjJ,GACnB,IAGIkJ,EAHA1F,EAAKnD,KACL+E,EAAO5B,EAAGuB,QACVoE,EAAkB,YAAXnJ,EAAEmJ,KAAqB,QAAUnJ,EAAEmJ,KAE9C,GAAa,cAATA,GACA,IAAK/D,EAAKvE,UAAYuE,EAAKtE,QACvB,WAED,CAAA,GAAa,UAATqI,EAKP,OAJA,IAAK/D,EAAKrF,QACN,OAKRmJ,EAAc1F,EAAGsF,iBAAiB9I,EAAEsH,EAAGtH,EAAEuH,GAC5B,UAAT4B,EACID,GAAe9D,EAAKrF,SACpBqF,EAAKrF,QAAQqJ,KAAK5F,EAAIxD,EAAEqJ,OAAQH,IAGhC9D,EAAKtE,SAAWoI,IAAgB1F,EAAGN,eAC/BM,EAAGN,cACHkC,EAAKtE,QAAQsI,KAAK5F,EAAIxD,EAAEqJ,OAAQ7F,EAAGN,cAEvCM,EAAGN,aAAegG,GAElB9D,EAAKvE,SAAWqI,GAChB9D,EAAKvE,QAAQuI,KAAK5F,EAAIxD,EAAEqJ,OAAQH,OAKhD,SAASI,EAAyBhJ,EAAOiJ,GACrC,IAAI9J,EAAS,IAAIoD,GACbwC,IAAK/E,EAAM+E,IACXN,QAASwE,EACTjJ,MAAOA,IAEXtB,EAAQwK,UAAUlJ,EAAOb,EAAQ8J,GACjCvK,EAAQyK,OAAOnJ,EAAOb,GACtBa,EAAMb,OAASA,EAwCnB,SAASiK,EAAkBC,GACvB,MAAqB,iBAAPA,GAAmBC,MAAM1I,QAAQyI,KAPnD,SAAyBA,GACrB,IAAIE,EACJ,IAAKA,KAAQF,EACT,OAAO,EACX,OAAO,EAGiDG,CAAgBH,GAE5E,OAzCA/K,OAAOD,SACH+D,GAAI,SACJqH,SAAUlH,EACVmH,WAAY,SAAU1J,GAClB,IAAIiJ,EAAajJ,EAAMyE,QAAQtF,OAC3B8J,GACAD,EAAyBhJ,EAAOiJ,IAGxCnG,aAAc,SAAU9C,GACpB,IAAIiJ,EAAajJ,EAAMyE,QAAQtF,OAC3BA,EAASa,EAAMb,OACf8J,GACAxK,EAAQkL,QAAQV,EAAY1K,EAASgI,OAAOpH,QACxCA,GACAT,EAAQwK,UAAUlJ,EAAOb,EAAQ8J,GACjC9J,EAAOsF,QAAUwE,GAEjBD,EAAyBhJ,EAAOiJ,IAE7B9J,IACPT,EAAQkL,UAAU5J,EAAOb,UAClBa,EAAMb,SAGrB0K,WAAY,SAAU7J,EAAON,GACzB,IAAIP,EAASa,EAAMb,OACfA,GACAA,EAAOwJ,YAAYjJ,KAa3B0J,EAAkB9K,OAAOD,SAClBC,OAAOD,QACT+K,EAAkB/K,SAChBA,aADN","file":"../../plugins/plugin.legend.js","sourcesContent":["define([\n    '../core/core.defaults',\n    '../core/core.element',\n    '../helpers/index',\n    '../core/core.layouts'\n], function (__module__0, __module__1, __module__2, __module__3) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var defaults = __module__0;\n    var Element = __module__1;\n    var helpers = __module__2;\n    var layouts = __module__3;\n    var noop = helpers.noop;\n    var valueOrDefault = helpers.valueOrDefault;\n    defaults._set('global', {\n        legend: {\n            display: true,\n            position: 'top',\n            fullWidth: true,\n            reverse: false,\n            weight: 1000,\n            onClick: function (e, legendItem) {\n                var index = legendItem.datasetIndex;\n                var ci = this.chart;\n                var meta = ci.getDatasetMeta(index);\n                meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n                ci.update();\n            },\n            onHover: null,\n            onLeave: null,\n            labels: {\n                boxWidth: 40,\n                padding: 10,\n                generateLabels: function (chart) {\n                    var data = chart.data;\n                    return helpers.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n                        return {\n                            text: dataset.label,\n                            fillStyle: !helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n                            hidden: !chart.isDatasetVisible(i),\n                            lineCap: dataset.borderCapStyle,\n                            lineDash: dataset.borderDash,\n                            lineDashOffset: dataset.borderDashOffset,\n                            lineJoin: dataset.borderJoinStyle,\n                            lineWidth: dataset.borderWidth,\n                            strokeStyle: dataset.borderColor,\n                            pointStyle: dataset.pointStyle,\n                            datasetIndex: i\n                        };\n                    }, this) : [];\n                }\n            }\n        },\n        legendCallback: function (chart) {\n            var text = [];\n            text.push('<ul class=\"' + chart.id + '-legend\">');\n            for (var i = 0; i < chart.data.datasets.length; i++) {\n                text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n                if (chart.data.datasets[i].label) {\n                    text.push(chart.data.datasets[i].label);\n                }\n                text.push('</li>');\n            }\n            text.push('</ul>');\n            return text.join('');\n        }\n    });\n    function getBoxWidth(labelOpts, fontSize) {\n        return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n    }\n    var Legend = Element.extend({\n        initialize: function (config) {\n            helpers.extend(this, config);\n            this.legendHitBoxes = [];\n            this._hoveredItem = null;\n            this.doughnutMode = false;\n        },\n        beforeUpdate: noop,\n        update: function (maxWidth, maxHeight, margins) {\n            var me = this;\n            me.beforeUpdate();\n            me.maxWidth = maxWidth;\n            me.maxHeight = maxHeight;\n            me.margins = margins;\n            me.beforeSetDimensions();\n            me.setDimensions();\n            me.afterSetDimensions();\n            me.beforeBuildLabels();\n            me.buildLabels();\n            me.afterBuildLabels();\n            me.beforeFit();\n            me.fit();\n            me.afterFit();\n            me.afterUpdate();\n            return me.minSize;\n        },\n        afterUpdate: noop,\n        beforeSetDimensions: noop,\n        setDimensions: function () {\n            var me = this;\n            if (me.isHorizontal()) {\n                me.width = me.maxWidth;\n                me.left = 0;\n                me.right = me.width;\n            } else {\n                me.height = me.maxHeight;\n                me.top = 0;\n                me.bottom = me.height;\n            }\n            me.paddingLeft = 0;\n            me.paddingTop = 0;\n            me.paddingRight = 0;\n            me.paddingBottom = 0;\n            me.minSize = {\n                width: 0,\n                height: 0\n            };\n        },\n        afterSetDimensions: noop,\n        beforeBuildLabels: noop,\n        buildLabels: function () {\n            var me = this;\n            var labelOpts = me.options.labels || {};\n            var legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n            if (labelOpts.filter) {\n                legendItems = legendItems.filter(function (item) {\n                    return labelOpts.filter(item, me.chart.data);\n                });\n            }\n            if (me.options.reverse) {\n                legendItems.reverse();\n            }\n            me.legendItems = legendItems;\n        },\n        afterBuildLabels: noop,\n        beforeFit: noop,\n        fit: function () {\n            var me = this;\n            var opts = me.options;\n            var labelOpts = opts.labels;\n            var display = opts.display;\n            var ctx = me.ctx;\n            var labelFont = helpers.options._parseFont(labelOpts);\n            var fontSize = labelFont.size;\n            var hitboxes = me.legendHitBoxes = [];\n            var minSize = me.minSize;\n            var isHorizontal = me.isHorizontal();\n            if (isHorizontal) {\n                minSize.width = me.maxWidth;\n                minSize.height = display ? 10 : 0;\n            } else {\n                minSize.width = display ? 10 : 0;\n                minSize.height = me.maxHeight;\n            }\n            if (display) {\n                ctx.font = labelFont.string;\n                if (isHorizontal) {\n                    var lineWidths = me.lineWidths = [0];\n                    var totalHeight = 0;\n                    ctx.textAlign = 'left';\n                    ctx.textBaseline = 'top';\n                    helpers.each(me.legendItems, function (legendItem, i) {\n                        var boxWidth = getBoxWidth(labelOpts, fontSize);\n                        var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n                        if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n                            totalHeight += fontSize + labelOpts.padding;\n                            lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n                        }\n                        hitboxes[i] = {\n                            left: 0,\n                            top: 0,\n                            width: width,\n                            height: fontSize\n                        };\n                        lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n                    });\n                    minSize.height += totalHeight;\n                } else {\n                    var vPadding = labelOpts.padding;\n                    var columnWidths = me.columnWidths = [];\n                    var totalWidth = labelOpts.padding;\n                    var currentColWidth = 0;\n                    var currentColHeight = 0;\n                    var itemHeight = fontSize + vPadding;\n                    helpers.each(me.legendItems, function (legendItem, i) {\n                        var boxWidth = getBoxWidth(labelOpts, fontSize);\n                        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n                        if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n                            totalWidth += currentColWidth + labelOpts.padding;\n                            columnWidths.push(currentColWidth);\n                            currentColWidth = 0;\n                            currentColHeight = 0;\n                        }\n                        currentColWidth = Math.max(currentColWidth, itemWidth);\n                        currentColHeight += itemHeight;\n                        hitboxes[i] = {\n                            left: 0,\n                            top: 0,\n                            width: itemWidth,\n                            height: fontSize\n                        };\n                    });\n                    totalWidth += currentColWidth;\n                    columnWidths.push(currentColWidth);\n                    minSize.width += totalWidth;\n                }\n            }\n            me.width = minSize.width;\n            me.height = minSize.height;\n        },\n        afterFit: noop,\n        isHorizontal: function () {\n            return this.options.position === 'top' || this.options.position === 'bottom';\n        },\n        draw: function () {\n            var me = this;\n            var opts = me.options;\n            var labelOpts = opts.labels;\n            var globalDefaults = defaults.global;\n            var defaultColor = globalDefaults.defaultColor;\n            var lineDefault = globalDefaults.elements.line;\n            var legendWidth = me.width;\n            var lineWidths = me.lineWidths;\n            if (opts.display) {\n                var ctx = me.ctx;\n                var fontColor = valueOrDefault(labelOpts.fontColor, globalDefaults.defaultFontColor);\n                var labelFont = helpers.options._parseFont(labelOpts);\n                var fontSize = labelFont.size;\n                var cursor;\n                ctx.textAlign = 'left';\n                ctx.textBaseline = 'middle';\n                ctx.lineWidth = 0.5;\n                ctx.strokeStyle = fontColor;\n                ctx.fillStyle = fontColor;\n                ctx.font = labelFont.string;\n                var boxWidth = getBoxWidth(labelOpts, fontSize);\n                var hitboxes = me.legendHitBoxes;\n                var drawLegendBox = function (x, y, legendItem) {\n                    if (isNaN(boxWidth) || boxWidth <= 0) {\n                        return;\n                    }\n                    ctx.save();\n                    var lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n                    ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n                    ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n                    ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n                    ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n                    ctx.lineWidth = lineWidth;\n                    ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n                    if (ctx.setLineDash) {\n                        ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n                    }\n                    if (opts.labels && opts.labels.usePointStyle) {\n                        var radius = boxWidth * Math.SQRT2 / 2;\n                        var centerX = x + boxWidth / 2;\n                        var centerY = y + fontSize / 2;\n                        helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n                    } else {\n                        if (lineWidth !== 0) {\n                            ctx.strokeRect(x, y, boxWidth, fontSize);\n                        }\n                        ctx.fillRect(x, y, boxWidth, fontSize);\n                    }\n                    ctx.restore();\n                };\n                var fillText = function (x, y, legendItem, textWidth) {\n                    var halfFontSize = fontSize / 2;\n                    var xLeft = boxWidth + halfFontSize + x;\n                    var yMiddle = y + halfFontSize;\n                    ctx.fillText(legendItem.text, xLeft, yMiddle);\n                    if (legendItem.hidden) {\n                        ctx.beginPath();\n                        ctx.lineWidth = 2;\n                        ctx.moveTo(xLeft, yMiddle);\n                        ctx.lineTo(xLeft + textWidth, yMiddle);\n                        ctx.stroke();\n                    }\n                };\n                var isHorizontal = me.isHorizontal();\n                if (isHorizontal) {\n                    cursor = {\n                        x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n                        y: me.top + labelOpts.padding,\n                        line: 0\n                    };\n                } else {\n                    cursor = {\n                        x: me.left + labelOpts.padding,\n                        y: me.top + labelOpts.padding,\n                        line: 0\n                    };\n                }\n                var itemHeight = fontSize + labelOpts.padding;\n                helpers.each(me.legendItems, function (legendItem, i) {\n                    var textWidth = ctx.measureText(legendItem.text).width;\n                    var width = boxWidth + fontSize / 2 + textWidth;\n                    var x = cursor.x;\n                    var y = cursor.y;\n                    if (isHorizontal) {\n                        if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n                            y = cursor.y += itemHeight;\n                            cursor.line++;\n                            x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n                        }\n                    } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n                        x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n                        y = cursor.y = me.top + labelOpts.padding;\n                        cursor.line++;\n                    }\n                    drawLegendBox(x, y, legendItem);\n                    hitboxes[i].left = x;\n                    hitboxes[i].top = y;\n                    fillText(x, y, legendItem, textWidth);\n                    if (isHorizontal) {\n                        cursor.x += width + labelOpts.padding;\n                    } else {\n                        cursor.y += itemHeight;\n                    }\n                });\n            }\n        },\n        _getLegendItemAt: function (x, y) {\n            var me = this;\n            var i, hitBox, lh;\n            if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n                lh = me.legendHitBoxes;\n                for (i = 0; i < lh.length; ++i) {\n                    hitBox = lh[i];\n                    if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n                        return me.legendItems[i];\n                    }\n                }\n            }\n            return null;\n        },\n        handleEvent: function (e) {\n            var me = this;\n            var opts = me.options;\n            var type = e.type === 'mouseup' ? 'click' : e.type;\n            var hoveredItem;\n            if (type === 'mousemove') {\n                if (!opts.onHover && !opts.onLeave) {\n                    return;\n                }\n            } else if (type === 'click') {\n                if (!opts.onClick) {\n                    return;\n                }\n            } else {\n                return;\n            }\n            hoveredItem = me._getLegendItemAt(e.x, e.y);\n            if (type === 'click') {\n                if (hoveredItem && opts.onClick) {\n                    opts.onClick.call(me, e.native, hoveredItem);\n                }\n            } else {\n                if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n                    if (me._hoveredItem) {\n                        opts.onLeave.call(me, e.native, me._hoveredItem);\n                    }\n                    me._hoveredItem = hoveredItem;\n                }\n                if (opts.onHover && hoveredItem) {\n                    opts.onHover.call(me, e.native, hoveredItem);\n                }\n            }\n        }\n    });\n    function createNewLegendAndAttach(chart, legendOpts) {\n        var legend = new Legend({\n            ctx: chart.ctx,\n            options: legendOpts,\n            chart: chart\n        });\n        layouts.configure(chart, legend, legendOpts);\n        layouts.addBox(chart, legend);\n        chart.legend = legend;\n    }\n    module.exports = {\n        id: 'legend',\n        _element: Legend,\n        beforeInit: function (chart) {\n            var legendOpts = chart.options.legend;\n            if (legendOpts) {\n                createNewLegendAndAttach(chart, legendOpts);\n            }\n        },\n        beforeUpdate: function (chart) {\n            var legendOpts = chart.options.legend;\n            var legend = chart.legend;\n            if (legendOpts) {\n                helpers.mergeIf(legendOpts, defaults.global.legend);\n                if (legend) {\n                    layouts.configure(chart, legend, legendOpts);\n                    legend.options = legendOpts;\n                } else {\n                    createNewLegendAndAttach(chart, legendOpts);\n                }\n            } else if (legend) {\n                layouts.removeBox(chart, legend);\n                delete chart.legend;\n            }\n        },\n        afterEvent: function (chart, e) {\n            var legend = chart.legend;\n            if (legend) {\n                legend.handleEvent(e);\n            }\n        }\n    };\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}