{"version":3,"sources":["elements/element.rectangle.js"],"names":["define","__module__0","__module__1","__module__2","exports","module","defaults","Element","helpers","defaultColor","global","isVertical","vm","undefined","width","getBarBounds","x1","x2","y1","y2","half","x","Math","min","y","base","max","height","left","top","right","bottom","swap","orig","v1","v2","parseBorderWidth","maxW","maxH","t","r","b","l","value","borderWidth","skip","edge","borderSkipped","res","horizontal","parseBorderSkipped","isObject","inRange","skipX","skipY","bounds","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","_set","elements","rectangle","backgroundColor","borderColor","extend","draw","ctx","this","_chart","_view","rects","border","outer","w","h","inner","boundingRects","fillStyle","fillRect","save","beginPath","rect","clip","fill","restore","mouseX","mouseY","inLabelRange","inXRange","inYRange","getCenterPoint","getArea","abs","tooltipPosition"],"mappings":"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","file":"../../elements/element.rectangle.js","sourcesContent":["define([\n    '../core/core.defaults',\n    '../core/core.element',\n    '../helpers/index'\n], function (__module__0, __module__1, __module__2) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var defaults = __module__0;\n    var Element = __module__1;\n    var helpers = __module__2;\n    var defaultColor = defaults.global.defaultColor;\n    defaults._set('global', {\n        elements: {\n            rectangle: {\n                backgroundColor: defaultColor,\n                borderColor: defaultColor,\n                borderSkipped: 'bottom',\n                borderWidth: 0\n            }\n        }\n    });\n    function isVertical(vm) {\n        return vm && vm.width !== undefined;\n    }\n    function getBarBounds(vm) {\n        var x1, x2, y1, y2, half;\n        if (isVertical(vm)) {\n            half = vm.width / 2;\n            x1 = vm.x - half;\n            x2 = vm.x + half;\n            y1 = Math.min(vm.y, vm.base);\n            y2 = Math.max(vm.y, vm.base);\n        } else {\n            half = vm.height / 2;\n            x1 = Math.min(vm.x, vm.base);\n            x2 = Math.max(vm.x, vm.base);\n            y1 = vm.y - half;\n            y2 = vm.y + half;\n        }\n        return {\n            left: x1,\n            top: y1,\n            right: x2,\n            bottom: y2\n        };\n    }\n    function swap(orig, v1, v2) {\n        return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n    }\n    function parseBorderSkipped(vm) {\n        var edge = vm.borderSkipped;\n        var res = {};\n        if (!edge) {\n            return res;\n        }\n        if (vm.horizontal) {\n            if (vm.base > vm.x) {\n                edge = swap(edge, 'left', 'right');\n            }\n        } else if (vm.base < vm.y) {\n            edge = swap(edge, 'bottom', 'top');\n        }\n        res[edge] = true;\n        return res;\n    }\n    function parseBorderWidth(vm, maxW, maxH) {\n        var value = vm.borderWidth;\n        var skip = parseBorderSkipped(vm);\n        var t, r, b, l;\n        if (helpers.isObject(value)) {\n            t = +value.top || 0;\n            r = +value.right || 0;\n            b = +value.bottom || 0;\n            l = +value.left || 0;\n        } else {\n            t = r = b = l = +value || 0;\n        }\n        return {\n            t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n            r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n            b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n            l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n        };\n    }\n    function boundingRects(vm) {\n        var bounds = getBarBounds(vm);\n        var width = bounds.right - bounds.left;\n        var height = bounds.bottom - bounds.top;\n        var border = parseBorderWidth(vm, width / 2, height / 2);\n        return {\n            outer: {\n                x: bounds.left,\n                y: bounds.top,\n                w: width,\n                h: height\n            },\n            inner: {\n                x: bounds.left + border.l,\n                y: bounds.top + border.t,\n                w: width - border.l - border.r,\n                h: height - border.t - border.b\n            }\n        };\n    }\n    function inRange(vm, x, y) {\n        var skipX = x === null;\n        var skipY = y === null;\n        var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n        return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n    }\n    module.exports = Element.extend({\n        draw: function () {\n            var ctx = this._chart.ctx;\n            var vm = this._view;\n            var rects = boundingRects(vm);\n            var outer = rects.outer;\n            var inner = rects.inner;\n            ctx.fillStyle = vm.backgroundColor;\n            ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n            if (outer.w === inner.w && outer.h === inner.h) {\n                return;\n            }\n            ctx.save();\n            ctx.beginPath();\n            ctx.rect(outer.x, outer.y, outer.w, outer.h);\n            ctx.clip();\n            ctx.fillStyle = vm.borderColor;\n            ctx.rect(inner.x, inner.y, inner.w, inner.h);\n            ctx.fill('evenodd');\n            ctx.restore();\n        },\n        height: function () {\n            var vm = this._view;\n            return vm.base - vm.y;\n        },\n        inRange: function (mouseX, mouseY) {\n            return inRange(this._view, mouseX, mouseY);\n        },\n        inLabelRange: function (mouseX, mouseY) {\n            var vm = this._view;\n            return isVertical(vm) ? inRange(vm, mouseX, null) : inRange(vm, null, mouseY);\n        },\n        inXRange: function (mouseX) {\n            return inRange(this._view, mouseX, null);\n        },\n        inYRange: function (mouseY) {\n            return inRange(this._view, null, mouseY);\n        },\n        getCenterPoint: function () {\n            var vm = this._view;\n            var x, y;\n            if (isVertical(vm)) {\n                x = vm.x;\n                y = (vm.y + vm.base) / 2;\n            } else {\n                x = (vm.x + vm.base) / 2;\n                y = vm.y;\n            }\n            return {\n                x: x,\n                y: y\n            };\n        },\n        getArea: function () {\n            var vm = this._view;\n            return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n        },\n        tooltipPosition: function () {\n            var vm = this._view;\n            return {\n                x: vm.x,\n                y: vm.y\n            };\n        }\n    });\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}