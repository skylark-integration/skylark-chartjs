{"version":3,"sources":["elements/element.line.js"],"names":["define","__module__0","__module__1","__module__2","exports","module","defaults","Element","helpers","valueOrDefault","defaultColor","global","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","_set","elements","line","tension","backgroundColor","borderWidth","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","fill","extend","draw","index","current","previous","currentVM","vm","this","_view","ctx","_chart","spanGaps","points","_children","slice","globalDefaults","globalOptionLineElements","lastDrawnIndex","_loop","length","push","save","lineCap","setLineDash","lineDashOffset","lineJoin","lineWidth","strokeStyle","beginPath","previousItem","skip","moveTo","x","y","canvas","lineTo","stroke","restore"],"mappings":";;;;;;;AAAAA,QACI,wBACA,uBACA,oBACD,SAAUC,EAAaC,EAAaC,GACnC,aACA,IAAIC,WACAC,QAAWD,YACXE,EAAWL,EACXM,EAAUL,EACVM,EAAUL,EACVM,EAAiBD,EAAQC,eACzBC,EAAeJ,EAASK,OAAOD,aAyEnC,SAASE,EAAkBC,GACvB,MAAqB,iBAAPA,GAAmBC,MAAMC,QAAQF,KAPnD,SAAyBA,GACrB,IAAIG,EACJ,IAAKA,KAAQH,EACT,OAAO,EACX,OAAO,EAGiDI,CAAgBJ,GAE5E,OA3EAP,EAASY,KAAK,UACVC,UACIC,MACIC,QAAS,GACTC,gBAAiBZ,EACjBa,YAAa,EACbC,YAAad,EACbe,eAAgB,OAChBC,cACAC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAiB,EACjBC,MAAM,MAIlBzB,OAAOD,QAAUG,EAAQwB,QACrBC,KAAM,WACF,IAQIC,EAAOC,EAASC,EAAUC,EAP1BC,EADKC,KACGC,MACRC,EAFKF,KAEIG,OAAOD,IAChBE,EAAWL,EAAGK,SACdC,EAJKL,KAIOM,UAAUC,QACtBC,EAAiBxC,EAASK,OAC1BoC,EAA2BD,EAAe3B,SAASC,KACnD4B,GAAkB,EAgBtB,IAvBSV,KASFW,OAASN,EAAOO,QACnBP,EAAOQ,KAAKR,EAAO,IAEvBH,EAAIY,OACJZ,EAAIa,QAAUhB,EAAGZ,gBAAkBsB,EAAyBtB,eACxDe,EAAIc,aACJd,EAAIc,YAAYjB,EAAGX,YAAcqB,EAAyBrB,YAE9Dc,EAAIe,eAAiB9C,EAAe4B,EAAGV,iBAAkBoB,EAAyBpB,kBAClFa,EAAIgB,SAAWnB,EAAGT,iBAAmBmB,EAAyBnB,gBAC9DY,EAAIiB,UAAYhD,EAAe4B,EAAGd,YAAawB,EAAyBxB,aACxEiB,EAAIkB,YAAcrB,EAAGb,aAAesB,EAAepC,aACnD8B,EAAImB,YACJX,GAAkB,EACbf,EAAQ,EAAGA,EAAQU,EAAOO,SAAUjB,EACrCC,EAAUS,EAAOV,GACjBE,EAAW3B,EAAQoD,aAAajB,EAAQV,GACxCG,EAAYF,EAAQK,MACN,IAAVN,EACKG,EAAUyB,OACXrB,EAAIsB,OAAO1B,EAAU2B,EAAG3B,EAAU4B,GAClChB,EAAiBf,IAGrBE,GAA+B,IAApBa,EAAwBb,EAAWQ,EAAOK,GAChDZ,EAAUyB,OACPb,IAAmBf,EAAQ,IAAMS,IAAgC,IAApBM,EAC7CR,EAAIsB,OAAO1B,EAAU2B,EAAG3B,EAAU4B,GAElCxD,EAAQyD,OAAOC,OAAO1B,EAAKL,EAASI,MAAOL,EAAQK,OAEvDS,EAAiBf,IAI7BO,EAAI2B,SACJ3B,EAAI4B,aAYRxD,EAAkBP,OAAOD,SAClBC,OAAOD,QACTQ,EAAkBR,SAChBA,aADN","file":"../../elements/element.line.js","sourcesContent":["define([\n    '../core/core.defaults',\n    '../core/core.element',\n    '../helpers/index'\n], function (__module__0, __module__1, __module__2) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var defaults = __module__0;\n    var Element = __module__1;\n    var helpers = __module__2;\n    var valueOrDefault = helpers.valueOrDefault;\n    var defaultColor = defaults.global.defaultColor;\n    defaults._set('global', {\n        elements: {\n            line: {\n                tension: 0.4,\n                backgroundColor: defaultColor,\n                borderWidth: 3,\n                borderColor: defaultColor,\n                borderCapStyle: 'butt',\n                borderDash: [],\n                borderDashOffset: 0,\n                borderJoinStyle: 'miter',\n                capBezierPoints: true,\n                fill: true\n            }\n        }\n    });\n    module.exports = Element.extend({\n        draw: function () {\n            var me = this;\n            var vm = me._view;\n            var ctx = me._chart.ctx;\n            var spanGaps = vm.spanGaps;\n            var points = me._children.slice();\n            var globalDefaults = defaults.global;\n            var globalOptionLineElements = globalDefaults.elements.line;\n            var lastDrawnIndex = -1;\n            var index, current, previous, currentVM;\n            if (me._loop && points.length) {\n                points.push(points[0]);\n            }\n            ctx.save();\n            ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n            if (ctx.setLineDash) {\n                ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n            }\n            ctx.lineDashOffset = valueOrDefault(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n            ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n            ctx.lineWidth = valueOrDefault(vm.borderWidth, globalOptionLineElements.borderWidth);\n            ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n            ctx.beginPath();\n            lastDrawnIndex = -1;\n            for (index = 0; index < points.length; ++index) {\n                current = points[index];\n                previous = helpers.previousItem(points, index);\n                currentVM = current._view;\n                if (index === 0) {\n                    if (!currentVM.skip) {\n                        ctx.moveTo(currentVM.x, currentVM.y);\n                        lastDrawnIndex = index;\n                    }\n                } else {\n                    previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n                    if (!currentVM.skip) {\n                        if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n                            ctx.moveTo(currentVM.x, currentVM.y);\n                        } else {\n                            helpers.canvas.lineTo(ctx, previous._view, current._view);\n                        }\n                        lastDrawnIndex = index;\n                    }\n                }\n            }\n            ctx.stroke();\n            ctx.restore();\n        }\n    });\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}