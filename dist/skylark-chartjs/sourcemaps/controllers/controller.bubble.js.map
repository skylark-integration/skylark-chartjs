{"version":3,"sources":["controllers/controller.bubble.js"],"names":["define","__module__0","__module__1","__module__2","__module__3","exports","module","DatasetController","defaults","elements","helpers","valueOrDefault","resolve","options","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","_set","hover","mode","scales","xAxes","type","position","id","yAxes","tooltips","callbacks","title","label","item","data","datasetLabel","datasets","datasetIndex","dataPoint","index","xLabel","yLabel","r","extend","dataElementType","Point","update","reset","me","this","points","getMeta","each","point","updateElement","meta","custom","xScale","getScaleForId","xAxisID","yScale","yAxisID","_resolveElementOptions","getDataset","dsIndex","x","getPixelForDecimal","getPixelForValue","NaN","y","getBasePixel","_xScale","_yScale","_options","_datasetIndex","_index","_model","backgroundColor","borderColor","borderWidth","hitRadius","pointStyle","rotation","radius","skip","isNaN","pivot","setHoverStyle","model","getHoverColor","$previousStyle","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","hoverRadius","i","ilen","key","chart","dataset","values","context","dataIndex","keys","length","undefined"],"mappings":"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","file":"../../controllers/controller.bubble.js","sourcesContent":["define([\n    '../core/core.datasetController',\n    '../core/core.defaults',\n    '../elements/index',\n    '../helpers/index'\n], function (__module__0, __module__1, __module__2, __module__3) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var DatasetController = __module__0;\n    var defaults = __module__1;\n    var elements = __module__2;\n    var helpers = __module__3;\n    var valueOrDefault = helpers.valueOrDefault;\n    var resolve = helpers.options.resolve;\n    defaults._set('bubble', {\n        hover: { mode: 'single' },\n        scales: {\n            xAxes: [{\n                    type: 'linear',\n                    position: 'bottom',\n                    id: 'x-axis-0'\n                }],\n            yAxes: [{\n                    type: 'linear',\n                    position: 'left',\n                    id: 'y-axis-0'\n                }]\n        },\n        tooltips: {\n            callbacks: {\n                title: function () {\n                    return '';\n                },\n                label: function (item, data) {\n                    var datasetLabel = data.datasets[item.datasetIndex].label || '';\n                    var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n                    return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n                }\n            }\n        }\n    });\n    module.exports = DatasetController.extend({\n        dataElementType: elements.Point,\n        update: function (reset) {\n            var me = this;\n            var meta = me.getMeta();\n            var points = meta.data;\n            helpers.each(points, function (point, index) {\n                me.updateElement(point, index, reset);\n            });\n        },\n        updateElement: function (point, index, reset) {\n            var me = this;\n            var meta = me.getMeta();\n            var custom = point.custom || {};\n            var xScale = me.getScaleForId(meta.xAxisID);\n            var yScale = me.getScaleForId(meta.yAxisID);\n            var options = me._resolveElementOptions(point, index);\n            var data = me.getDataset().data[index];\n            var dsIndex = me.index;\n            var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n            var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n            point._xScale = xScale;\n            point._yScale = yScale;\n            point._options = options;\n            point._datasetIndex = dsIndex;\n            point._index = index;\n            point._model = {\n                backgroundColor: options.backgroundColor,\n                borderColor: options.borderColor,\n                borderWidth: options.borderWidth,\n                hitRadius: options.hitRadius,\n                pointStyle: options.pointStyle,\n                rotation: options.rotation,\n                radius: reset ? 0 : options.radius,\n                skip: custom.skip || isNaN(x) || isNaN(y),\n                x: x,\n                y: y\n            };\n            point.pivot();\n        },\n        setHoverStyle: function (point) {\n            var model = point._model;\n            var options = point._options;\n            var getHoverColor = helpers.getHoverColor;\n            point.$previousStyle = {\n                backgroundColor: model.backgroundColor,\n                borderColor: model.borderColor,\n                borderWidth: model.borderWidth,\n                radius: model.radius\n            };\n            model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n            model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n            model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n            model.radius = options.radius + options.hoverRadius;\n        },\n        _resolveElementOptions: function (point, index) {\n            var me = this;\n            var chart = me.chart;\n            var datasets = chart.data.datasets;\n            var dataset = datasets[me.index];\n            var custom = point.custom || {};\n            var options = chart.options.elements.point;\n            var data = dataset.data[index];\n            var values = {};\n            var i, ilen, key;\n            var context = {\n                chart: chart,\n                dataIndex: index,\n                dataset: dataset,\n                datasetIndex: me.index\n            };\n            var keys = [\n                'backgroundColor',\n                'borderColor',\n                'borderWidth',\n                'hoverBackgroundColor',\n                'hoverBorderColor',\n                'hoverBorderWidth',\n                'hoverRadius',\n                'hitRadius',\n                'pointStyle',\n                'rotation'\n            ];\n            for (i = 0, ilen = keys.length; i < ilen; ++i) {\n                key = keys[i];\n                values[key] = resolve([\n                    custom[key],\n                    dataset[key],\n                    options[key]\n                ], context, index);\n            }\n            values.radius = resolve([\n                custom.radius,\n                data ? data.r : undefined,\n                dataset.radius,\n                options.radius\n            ], context, index);\n            return values;\n        }\n    });\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}