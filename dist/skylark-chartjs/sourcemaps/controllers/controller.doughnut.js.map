{"version":3,"sources":["controllers/controller.doughnut.js"],"names":["define","__module__0","__module__1","__module__2","__module__3","exports","module","DatasetController","defaults","elements","helpers","resolve","options","valueOrDefault","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","_set","animation","animateRotate","animateScale","hover","mode","legendCallback","chart","text","push","id","data","datasets","labels","length","i","backgroundColor","join","legend","generateLabels","map","label","meta","getDatasetMeta","ds","arc","custom","arcOpts","fillStyle","undefined","strokeStyle","borderColor","lineWidth","borderWidth","hidden","isNaN","index","onClick","e","legendItem","ilen","this","update","cutoutPercentage","rotation","Math","PI","circumference","tooltips","callbacks","title","tooltipItem","dataLabel","value","datasetIndex","slice","extend","dataElementType","Arc","linkScales","noop","getRingIndex","ringIndex","j","isDatasetVisible","reset","me","chartArea","opts","availableWidth","right","left","availableHeight","bottom","top","minSize","min","offset","x","y","getMeta","arcs","chartWeight","_getRingWeight","startAngle","endAngle","start","cos","sin","end","contains0","contains90","contains180","contains270","cutout","max","size","width","height","_options","_resolveElementOptions","getMaxBorderWidth","outerRadius","innerRadius","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","updateElement","animationOpts","centerX","centerY","dataset","getDataset","calculateCircumference","_datasetIndex","_index","_model","borderAlign","valueAtIndexOrDefault","model","pivot","each","element","abs","controller","hoverWidth","hoverBorderWidth","setHoverStyle","getHoverColor","$previousStyle","hoverBackgroundColor","hoverBorderColor","key","values","context","dataIndex","keys","ringWeightOffset","dataSetIndex","weight"],"mappings":"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","file":"../../controllers/controller.doughnut.js","sourcesContent":["define([\n    '../core/core.datasetController',\n    '../core/core.defaults',\n    '../elements/index',\n    '../helpers/index'\n], function (__module__0, __module__1, __module__2, __module__3) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var DatasetController = __module__0;\n    var defaults = __module__1;\n    var elements = __module__2;\n    var helpers = __module__3;\n    var resolve = helpers.options.resolve;\n    var valueOrDefault = helpers.valueOrDefault;\n    defaults._set('doughnut', {\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        hover: { mode: 'single' },\n        legendCallback: function (chart) {\n            var text = [];\n            text.push('<ul class=\"' + chart.id + '-legend\">');\n            var data = chart.data;\n            var datasets = data.datasets;\n            var labels = data.labels;\n            if (datasets.length) {\n                for (var i = 0; i < datasets[0].data.length; ++i) {\n                    text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n                    if (labels[i]) {\n                        text.push(labels[i]);\n                    }\n                    text.push('</li>');\n                }\n            }\n            text.push('</ul>');\n            return text.join('');\n        },\n        legend: {\n            labels: {\n                generateLabels: function (chart) {\n                    var data = chart.data;\n                    if (data.labels.length && data.datasets.length) {\n                        return data.labels.map(function (label, i) {\n                            var meta = chart.getDatasetMeta(0);\n                            var ds = data.datasets[0];\n                            var arc = meta.data[i];\n                            var custom = arc && arc.custom || {};\n                            var arcOpts = chart.options.elements.arc;\n                            var fill = resolve([\n                                custom.backgroundColor,\n                                ds.backgroundColor,\n                                arcOpts.backgroundColor\n                            ], undefined, i);\n                            var stroke = resolve([\n                                custom.borderColor,\n                                ds.borderColor,\n                                arcOpts.borderColor\n                            ], undefined, i);\n                            var bw = resolve([\n                                custom.borderWidth,\n                                ds.borderWidth,\n                                arcOpts.borderWidth\n                            ], undefined, i);\n                            return {\n                                text: label,\n                                fillStyle: fill,\n                                strokeStyle: stroke,\n                                lineWidth: bw,\n                                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                                index: i\n                            };\n                        });\n                    }\n                    return [];\n                }\n            },\n            onClick: function (e, legendItem) {\n                var index = legendItem.index;\n                var chart = this.chart;\n                var i, ilen, meta;\n                for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n                    meta = chart.getDatasetMeta(i);\n                    if (meta.data[index]) {\n                        meta.data[index].hidden = !meta.data[index].hidden;\n                    }\n                }\n                chart.update();\n            }\n        },\n        cutoutPercentage: 50,\n        rotation: Math.PI * -0.5,\n        circumference: Math.PI * 2,\n        tooltips: {\n            callbacks: {\n                title: function () {\n                    return '';\n                },\n                label: function (tooltipItem, data) {\n                    var dataLabel = data.labels[tooltipItem.index];\n                    var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n                    if (helpers.isArray(dataLabel)) {\n                        dataLabel = dataLabel.slice();\n                        dataLabel[0] += value;\n                    } else {\n                        dataLabel += value;\n                    }\n                    return dataLabel;\n                }\n            }\n        }\n    });\n    module.exports = DatasetController.extend({\n        dataElementType: elements.Arc,\n        linkScales: helpers.noop,\n        getRingIndex: function (datasetIndex) {\n            var ringIndex = 0;\n            for (var j = 0; j < datasetIndex; ++j) {\n                if (this.chart.isDatasetVisible(j)) {\n                    ++ringIndex;\n                }\n            }\n            return ringIndex;\n        },\n        update: function (reset) {\n            var me = this;\n            var chart = me.chart;\n            var chartArea = chart.chartArea;\n            var opts = chart.options;\n            var availableWidth = chartArea.right - chartArea.left;\n            var availableHeight = chartArea.bottom - chartArea.top;\n            var minSize = Math.min(availableWidth, availableHeight);\n            var offset = {\n                x: 0,\n                y: 0\n            };\n            var meta = me.getMeta();\n            var arcs = meta.data;\n            var cutoutPercentage = opts.cutoutPercentage;\n            var circumference = opts.circumference;\n            var chartWeight = me._getRingWeight(me.index);\n            var i, ilen;\n            if (circumference < Math.PI * 2) {\n                var startAngle = opts.rotation % (Math.PI * 2);\n                startAngle += Math.PI * 2 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n                var endAngle = startAngle + circumference;\n                var start = {\n                    x: Math.cos(startAngle),\n                    y: Math.sin(startAngle)\n                };\n                var end = {\n                    x: Math.cos(endAngle),\n                    y: Math.sin(endAngle)\n                };\n                var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2 && Math.PI * 2 <= endAngle;\n                var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n                var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n                var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n                var cutout = cutoutPercentage / 100;\n                var min = {\n                    x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n                    y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n                };\n                var max = {\n                    x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n                    y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n                };\n                var size = {\n                    width: (max.x - min.x) * 0.5,\n                    height: (max.y - min.y) * 0.5\n                };\n                minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n                offset = {\n                    x: (max.x + min.x) * -0.5,\n                    y: (max.y + min.y) * -0.5\n                };\n            }\n            for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n                arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n            }\n            chart.borderWidth = me.getMaxBorderWidth();\n            chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n            chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n            chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n            chart.offsetX = offset.x * chart.outerRadius;\n            chart.offsetY = offset.y * chart.outerRadius;\n            meta.total = me.calculateTotal();\n            me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n            me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n            for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n                me.updateElement(arcs[i], i, reset);\n            }\n        },\n        updateElement: function (arc, index, reset) {\n            var me = this;\n            var chart = me.chart;\n            var chartArea = chart.chartArea;\n            var opts = chart.options;\n            var animationOpts = opts.animation;\n            var centerX = (chartArea.left + chartArea.right) / 2;\n            var centerY = (chartArea.top + chartArea.bottom) / 2;\n            var startAngle = opts.rotation;\n            var endAngle = opts.rotation;\n            var dataset = me.getDataset();\n            var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2 * Math.PI));\n            var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n            var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n            var options = arc._options || {};\n            helpers.extend(arc, {\n                _datasetIndex: me.index,\n                _index: index,\n                _model: {\n                    backgroundColor: options.backgroundColor,\n                    borderColor: options.borderColor,\n                    borderWidth: options.borderWidth,\n                    borderAlign: options.borderAlign,\n                    x: centerX + chart.offsetX,\n                    y: centerY + chart.offsetY,\n                    startAngle: startAngle,\n                    endAngle: endAngle,\n                    circumference: circumference,\n                    outerRadius: outerRadius,\n                    innerRadius: innerRadius,\n                    label: helpers.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n                }\n            });\n            var model = arc._model;\n            if (!reset || !animationOpts.animateRotate) {\n                if (index === 0) {\n                    model.startAngle = opts.rotation;\n                } else {\n                    model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n                }\n                model.endAngle = model.startAngle + model.circumference;\n            }\n            arc.pivot();\n        },\n        calculateTotal: function () {\n            var dataset = this.getDataset();\n            var meta = this.getMeta();\n            var total = 0;\n            var value;\n            helpers.each(meta.data, function (element, index) {\n                value = dataset.data[index];\n                if (!isNaN(value) && !element.hidden) {\n                    total += Math.abs(value);\n                }\n            });\n            return total;\n        },\n        calculateCircumference: function (value) {\n            var total = this.getMeta().total;\n            if (total > 0 && !isNaN(value)) {\n                return Math.PI * 2 * (Math.abs(value) / total);\n            }\n            return 0;\n        },\n        getMaxBorderWidth: function (arcs) {\n            var me = this;\n            var max = 0;\n            var chart = me.chart;\n            var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n            if (!arcs) {\n                for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n                    if (chart.isDatasetVisible(i)) {\n                        meta = chart.getDatasetMeta(i);\n                        arcs = meta.data;\n                        if (i !== me.index) {\n                            controller = meta.controller;\n                        }\n                        break;\n                    }\n                }\n            }\n            if (!arcs) {\n                return 0;\n            }\n            for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n                arc = arcs[i];\n                options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n                if (options.borderAlign !== 'inner') {\n                    borderWidth = options.borderWidth;\n                    hoverWidth = options.hoverBorderWidth;\n                    max = borderWidth > max ? borderWidth : max;\n                    max = hoverWidth > max ? hoverWidth : max;\n                }\n            }\n            return max;\n        },\n        setHoverStyle: function (arc) {\n            var model = arc._model;\n            var options = arc._options;\n            var getHoverColor = helpers.getHoverColor;\n            arc.$previousStyle = {\n                backgroundColor: model.backgroundColor,\n                borderColor: model.borderColor,\n                borderWidth: model.borderWidth\n            };\n            model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n            model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n            model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n        },\n        _resolveElementOptions: function (arc, index) {\n            var me = this;\n            var chart = me.chart;\n            var dataset = me.getDataset();\n            var custom = arc.custom || {};\n            var options = chart.options.elements.arc;\n            var values = {};\n            var i, ilen, key;\n            var context = {\n                chart: chart,\n                dataIndex: index,\n                dataset: dataset,\n                datasetIndex: me.index\n            };\n            var keys = [\n                'backgroundColor',\n                'borderColor',\n                'borderWidth',\n                'borderAlign',\n                'hoverBackgroundColor',\n                'hoverBorderColor',\n                'hoverBorderWidth'\n            ];\n            for (i = 0, ilen = keys.length; i < ilen; ++i) {\n                key = keys[i];\n                values[key] = resolve([\n                    custom[key],\n                    dataset[key],\n                    options[key]\n                ], context, index);\n            }\n            return values;\n        },\n        _getRingWeightOffset: function (datasetIndex) {\n            var ringWeightOffset = 0;\n            for (var i = 0; i < datasetIndex; ++i) {\n                if (this.chart.isDatasetVisible(i)) {\n                    ringWeightOffset += this._getRingWeight(i);\n                }\n            }\n            return ringWeightOffset;\n        },\n        _getRingWeight: function (dataSetIndex) {\n            return Math.max(valueOrDefault(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n        },\n        _getVisibleDatasetWeightTotal: function () {\n            return this._getRingWeightOffset(this.chart.data.datasets.length);\n        }\n    });\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}