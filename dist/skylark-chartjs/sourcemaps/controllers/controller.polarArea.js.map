{"version":3,"sources":["controllers/controller.polarArea.js"],"names":["define","__module__0","__module__1","__module__2","__module__3","exports","module","DatasetController","defaults","elements","helpers","resolve","options","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","_set","scale","type","angleLines","display","gridLines","circular","pointLabels","ticks","beginAtZero","animation","animateRotate","animateScale","startAngle","Math","PI","legendCallback","chart","text","push","id","data","datasets","labels","length","i","backgroundColor","join","legend","generateLabels","map","label","meta","getDatasetMeta","ds","custom","arcOpts","arc","fillStyle","undefined","strokeStyle","borderColor","lineWidth","borderWidth","hidden","isNaN","index","onClick","e","legendItem","ilen","this","update","tooltips","callbacks","title","item","yLabel","extend","dataElementType","Arc","linkScales","noop","reset","angle","me","dataset","getDataset","getMeta","start","starts","_starts","angles","_angles","arcs","_updateRadius","count","countVisibleElements","_computeAngle","_options","_resolveElementOptions","updateElement","chartArea","opts","minSize","min","right","left","bottom","top","outerRadius","max","innerRadius","cutoutPercentage","radiusLength","getVisibleDatasetCount","animationOpts","centerX","xCenter","centerY","yCenter","datasetStartAngle","distance","getDistanceFromCenterForValue","endAngle","resetRadius","_datasetIndex","_index","_scale","_model","borderAlign","x","y","valueAtIndexOrDefault","pivot","each","element","setHoverStyle","model","getHoverColor","valueOrDefault","$previousStyle","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","key","values","context","dataIndex","datasetIndex","keys"],"mappings":"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","file":"../../controllers/controller.polarArea.js","sourcesContent":["define([\n    '../core/core.datasetController',\n    '../core/core.defaults',\n    '../elements/index',\n    '../helpers/index'\n], function (__module__0, __module__1, __module__2, __module__3) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var DatasetController = __module__0;\n    var defaults = __module__1;\n    var elements = __module__2;\n    var helpers = __module__3;\n    var resolve = helpers.options.resolve;\n    defaults._set('polarArea', {\n        scale: {\n            type: 'radialLinear',\n            angleLines: { display: false },\n            gridLines: { circular: true },\n            pointLabels: { display: false },\n            ticks: { beginAtZero: true }\n        },\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        startAngle: -0.5 * Math.PI,\n        legendCallback: function (chart) {\n            var text = [];\n            text.push('<ul class=\"' + chart.id + '-legend\">');\n            var data = chart.data;\n            var datasets = data.datasets;\n            var labels = data.labels;\n            if (datasets.length) {\n                for (var i = 0; i < datasets[0].data.length; ++i) {\n                    text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n                    if (labels[i]) {\n                        text.push(labels[i]);\n                    }\n                    text.push('</li>');\n                }\n            }\n            text.push('</ul>');\n            return text.join('');\n        },\n        legend: {\n            labels: {\n                generateLabels: function (chart) {\n                    var data = chart.data;\n                    if (data.labels.length && data.datasets.length) {\n                        return data.labels.map(function (label, i) {\n                            var meta = chart.getDatasetMeta(0);\n                            var ds = data.datasets[0];\n                            var arc = meta.data[i];\n                            var custom = arc.custom || {};\n                            var arcOpts = chart.options.elements.arc;\n                            var fill = resolve([\n                                custom.backgroundColor,\n                                ds.backgroundColor,\n                                arcOpts.backgroundColor\n                            ], undefined, i);\n                            var stroke = resolve([\n                                custom.borderColor,\n                                ds.borderColor,\n                                arcOpts.borderColor\n                            ], undefined, i);\n                            var bw = resolve([\n                                custom.borderWidth,\n                                ds.borderWidth,\n                                arcOpts.borderWidth\n                            ], undefined, i);\n                            return {\n                                text: label,\n                                fillStyle: fill,\n                                strokeStyle: stroke,\n                                lineWidth: bw,\n                                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                                index: i\n                            };\n                        });\n                    }\n                    return [];\n                }\n            },\n            onClick: function (e, legendItem) {\n                var index = legendItem.index;\n                var chart = this.chart;\n                var i, ilen, meta;\n                for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n                    meta = chart.getDatasetMeta(i);\n                    meta.data[index].hidden = !meta.data[index].hidden;\n                }\n                chart.update();\n            }\n        },\n        tooltips: {\n            callbacks: {\n                title: function () {\n                    return '';\n                },\n                label: function (item, data) {\n                    return data.labels[item.index] + ': ' + item.yLabel;\n                }\n            }\n        }\n    });\n    module.exports = DatasetController.extend({\n        dataElementType: elements.Arc,\n        linkScales: helpers.noop,\n        update: function (reset) {\n            var me = this;\n            var dataset = me.getDataset();\n            var meta = me.getMeta();\n            var start = me.chart.options.startAngle || 0;\n            var starts = me._starts = [];\n            var angles = me._angles = [];\n            var arcs = meta.data;\n            var i, ilen, angle;\n            me._updateRadius();\n            meta.count = me.countVisibleElements();\n            for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n                starts[i] = start;\n                angle = me._computeAngle(i);\n                angles[i] = angle;\n                start += angle;\n            }\n            for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n                arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n                me.updateElement(arcs[i], i, reset);\n            }\n        },\n        _updateRadius: function () {\n            var me = this;\n            var chart = me.chart;\n            var chartArea = chart.chartArea;\n            var opts = chart.options;\n            var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n            chart.outerRadius = Math.max(minSize / 2, 0);\n            chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n            chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n            me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n            me.innerRadius = me.outerRadius - chart.radiusLength;\n        },\n        updateElement: function (arc, index, reset) {\n            var me = this;\n            var chart = me.chart;\n            var dataset = me.getDataset();\n            var opts = chart.options;\n            var animationOpts = opts.animation;\n            var scale = chart.scale;\n            var labels = chart.data.labels;\n            var centerX = scale.xCenter;\n            var centerY = scale.yCenter;\n            var datasetStartAngle = opts.startAngle;\n            var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n            var startAngle = me._starts[index];\n            var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n            var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n            var options = arc._options || {};\n            helpers.extend(arc, {\n                _datasetIndex: me.index,\n                _index: index,\n                _scale: scale,\n                _model: {\n                    backgroundColor: options.backgroundColor,\n                    borderColor: options.borderColor,\n                    borderWidth: options.borderWidth,\n                    borderAlign: options.borderAlign,\n                    x: centerX,\n                    y: centerY,\n                    innerRadius: 0,\n                    outerRadius: reset ? resetRadius : distance,\n                    startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n                    endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n                    label: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n                }\n            });\n            arc.pivot();\n        },\n        countVisibleElements: function () {\n            var dataset = this.getDataset();\n            var meta = this.getMeta();\n            var count = 0;\n            helpers.each(meta.data, function (element, index) {\n                if (!isNaN(dataset.data[index]) && !element.hidden) {\n                    count++;\n                }\n            });\n            return count;\n        },\n        setHoverStyle: function (arc) {\n            var model = arc._model;\n            var options = arc._options;\n            var getHoverColor = helpers.getHoverColor;\n            var valueOrDefault = helpers.valueOrDefault;\n            arc.$previousStyle = {\n                backgroundColor: model.backgroundColor,\n                borderColor: model.borderColor,\n                borderWidth: model.borderWidth\n            };\n            model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n            model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n            model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n        },\n        _resolveElementOptions: function (arc, index) {\n            var me = this;\n            var chart = me.chart;\n            var dataset = me.getDataset();\n            var custom = arc.custom || {};\n            var options = chart.options.elements.arc;\n            var values = {};\n            var i, ilen, key;\n            var context = {\n                chart: chart,\n                dataIndex: index,\n                dataset: dataset,\n                datasetIndex: me.index\n            };\n            var keys = [\n                'backgroundColor',\n                'borderColor',\n                'borderWidth',\n                'borderAlign',\n                'hoverBackgroundColor',\n                'hoverBorderColor',\n                'hoverBorderWidth'\n            ];\n            for (i = 0, ilen = keys.length; i < ilen; ++i) {\n                key = keys[i];\n                values[key] = resolve([\n                    custom[key],\n                    dataset[key],\n                    options[key]\n                ], context, index);\n            }\n            return values;\n        },\n        _computeAngle: function (index) {\n            var me = this;\n            var count = this.getMeta().count;\n            var dataset = me.getDataset();\n            var meta = me.getMeta();\n            if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n                return 0;\n            }\n            var context = {\n                chart: me.chart,\n                dataIndex: index,\n                dataset: dataset,\n                datasetIndex: me.index\n            };\n            return resolve([\n                me.chart.options.elements.arc.angle,\n                2 * Math.PI / count\n            ], context, index);\n        }\n    });\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}