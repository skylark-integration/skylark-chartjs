/**
 * skylark-chartjs - A version of chartjs that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.2
 * @link https://github.com/skylark-integration/skylark-chartjs/
 * @license MIT
 */
define(["../helpers/index"],function(t){"use strict";var exports={},module={exports:{}},e=t,a=e.options.resolve,n=["push","pop","shift","splice","unshift"];function r(t,e){var a=t._chartjs;if(a){var r=a.listeners,i=r.indexOf(e);-1!==i&&r.splice(i,1),r.length>0||(n.forEach(function(e){delete t[e]}),delete t._chartjs)}}var i=function(t,e){this.initialize(t,e)};function s(t){return"object"!=typeof t||Array.isArray(t)||!function(t){var e;for(e in t)return!1;return!0}(t)}return e.extend(i.prototype,{datasetElementType:null,dataElementType:null,initialize:function(t,e){this.chart=t,this.index=e,this.linkScales(),this.addElements()},updateIndex:function(t){this.index=t},linkScales:function(){var t=this,e=t.getMeta(),a=t.getDataset();null!==e.xAxisID&&e.xAxisID in t.chart.scales||(e.xAxisID=a.xAxisID||t.chart.options.scales.xAxes[0].id),null!==e.yAxisID&&e.yAxisID in t.chart.scales||(e.yAxisID=a.yAxisID||t.chart.options.scales.yAxes[0].id)},getDataset:function(){return this.chart.data.datasets[this.index]},getMeta:function(){return this.chart.getDatasetMeta(this.index)},getScaleForId:function(t){return this.chart.scales[t]},_getValueScaleId:function(){return this.getMeta().yAxisID},_getIndexScaleId:function(){return this.getMeta().xAxisID},_getValueScale:function(){return this.getScaleForId(this._getValueScaleId())},_getIndexScale:function(){return this.getScaleForId(this._getIndexScaleId())},reset:function(){this.update(!0)},destroy:function(){this._data&&r(this._data,this)},createMetaDataset:function(){var t=this.datasetElementType;return t&&new t({_chart:this.chart,_datasetIndex:this.index})},createMetaData:function(t){var e=this.dataElementType;return e&&new e({_chart:this.chart,_datasetIndex:this.index,_index:t})},addElements:function(){var t,e,a=this.getMeta(),n=this.getDataset().data||[],r=a.data;for(t=0,e=n.length;t<e;++t)r[t]=r[t]||this.createMetaData(t);a.dataset=a.dataset||this.createMetaDataset()},addElementAndReset:function(t){var e=this.createMetaData(t);this.getMeta().data.splice(t,0,e),this.updateElement(e,t,!0)},buildOrUpdateElements:function(){var t,a,i=this,s=i.getDataset(),o=s.data||(s.data=[]);i._data!==o&&(i._data&&r(i._data,i),o&&Object.isExtensible(o)&&(a=i,(t=o)._chartjs?t._chartjs.listeners.push(a):(Object.defineProperty(t,"_chartjs",{configurable:!0,enumerable:!1,value:{listeners:[a]}}),n.forEach(function(a){var n="onData"+a.charAt(0).toUpperCase()+a.slice(1),r=t[a];Object.defineProperty(t,a,{configurable:!0,enumerable:!1,value:function(){var a=Array.prototype.slice.call(arguments),i=r.apply(this,a);return e.each(t._chartjs.listeners,function(t){"function"==typeof t[n]&&t[n].apply(t,a)}),i}})}))),i._data=o),i.resyncElements()},update:e.noop,transition:function(t){for(var e=this.getMeta(),a=e.data||[],n=a.length,r=0;r<n;++r)a[r].transition(t);e.dataset&&e.dataset.transition(t)},draw:function(){var t=this.getMeta(),e=t.data||[],a=e.length,n=0;for(t.dataset&&t.dataset.draw();n<a;++n)e[n].draw()},removeHoverStyle:function(t){e.merge(t._model,t.$previousStyle||{}),delete t.$previousStyle},setHoverStyle:function(t){var n=this.chart.data.datasets[t._datasetIndex],r=t._index,i=t.custom||{},s=t._model,o=e.getHoverColor;t.$previousStyle={backgroundColor:s.backgroundColor,borderColor:s.borderColor,borderWidth:s.borderWidth},s.backgroundColor=a([i.hoverBackgroundColor,n.hoverBackgroundColor,o(s.backgroundColor)],void 0,r),s.borderColor=a([i.hoverBorderColor,n.hoverBorderColor,o(s.borderColor)],void 0,r),s.borderWidth=a([i.hoverBorderWidth,n.hoverBorderWidth,s.borderWidth],void 0,r)},resyncElements:function(){var t=this.getMeta(),e=this.getDataset().data,a=t.data.length,n=e.length;n<a?t.data.splice(n,a-n):n>a&&this.insertElements(a,n-a)},insertElements:function(t,e){for(var a=0;a<e;++a)this.addElementAndReset(t+a)},onDataPush:function(){var t=arguments.length;this.insertElements(this.getDataset().data.length-t,t)},onDataPop:function(){this.getMeta().data.pop()},onDataShift:function(){this.getMeta().data.shift()},onDataSplice:function(t,e){this.getMeta().data.splice(t,e),this.insertElements(t,arguments.length-2)},onDataUnshift:function(){this.insertElements(0,arguments.length)}}),i.extend=e.inherits,module.exports=i,s(module.exports)?module.exports:s(exports)?exports:void 0});
//# sourceMappingURL=../sourcemaps/core/core.datasetController.js.map
